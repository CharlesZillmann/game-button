//
//  GameBadge.swift
//  Blueprint
//
//  Created by Charles Zillmann on 6/12/19.
//  Copyright Â© 2019 Charles Zillmann. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class GameBadge : NSObject {

    //// Cache

    private struct Cache {
        static let gradientColor: UIColor = UIColor(red: 0.173, green: 0.184, blue: 0.267, alpha: 1.000)
        static let gradientColor2: UIColor = UIColor(red: 0.408, green: 0.459, blue: 0.725, alpha: 1.000)
        static let asusBlueGrayGradientColor: UIColor = UIColor(red: 0.259, green: 0.314, blue: 0.357, alpha: 1.000)
        static let asusBlueGrayGradientColor2: UIColor = UIColor(red: 0.416, green: 0.471, blue: 0.514, alpha: 1.000)
        static let blueprintGradientColor: UIColor = UIColor(red: 0.125, green: 0.302, blue: 0.443, alpha: 1.000)
        static let blueprintGradientColor2: UIColor = UIColor(red: 0.341, green: 0.498, blue: 0.600, alpha: 1.000)
        static let wetAsphaltGradientColor: UIColor = UIColor(red: 0.204, green: 0.286, blue: 0.369, alpha: 1.000)
        static let wetAsphaltGradientColor2: UIColor = UIColor(red: 0.400, green: 0.482, blue: 0.565, alpha: 1.000)
        static let gradientColor3: UIColor = UIColor(red: 0.235, green: 0.235, blue: 0.235, alpha: 1.000)
        static let whiteGradientColor: UIColor = UIColor(red: 0.882, green: 0.882, blue: 0.882, alpha: 1.000)
        static let goldGradientColor: UIColor = UIColor(red: 0.267, green: 0.216, blue: 0.141, alpha: 1.000)
        static let goldGradientColor2: UIColor = UIColor(red: 0.671, green: 0.592, blue: 0.420, alpha: 1.000)
        static let redGradientColor: UIColor = UIColor(red: 0.804, green: 0.212, blue: 0.224, alpha: 1.000)
        static let redGradientColor2: UIColor = UIColor(red: 1.000, green: 0.447, blue: 0.459, alpha: 1.000)
        static let greenGradientColor: UIColor = UIColor(red: 0.047, green: 0.090, blue: 0.059, alpha: 1.000)
        static let greenGradientColor2: UIColor = UIColor(red: 0.286, green: 0.384, blue: 0.318, alpha: 1.000)
        static let purpleGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [GameBadge.gradientColor.cgColor, GameBadge.gradientColor2.cgColor] as CFArray, locations: [0, 1])!
        static let whiteGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [GameBadge.whiteGradientColor.cgColor, UIColor.white.cgColor] as CFArray, locations: [0, 1])!
        static let goldGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [GameBadge.goldGradientColor.cgColor, GameBadge.goldGradientColor2.cgColor] as CFArray, locations: [0, 1])!
        static let redGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [GameBadge.redGradientColor.cgColor, GameBadge.redGradientColor2.cgColor] as CFArray, locations: [0, 0.99])!
        static let greenGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [GameBadge.greenGradientColor.cgColor, GameBadge.greenGradientColor2.cgColor] as CFArray, locations: [0, 1])!
        static let blueprintGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [GameBadge.blueprintGradientColor.cgColor, GameBadge.blueprintGradientColor2.cgColor] as CFArray, locations: [0, 1])!
        static let wetAsphaltGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [GameBadge.wetAsphaltGradientColor.cgColor, GameBadge.wetAsphaltGradientColor2.cgColor] as CFArray, locations: [0, 1])!
        static let blackGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [UIColor.black.cgColor, GameBadge.gradientColor3.cgColor] as CFArray, locations: [0, 1])!
        static let asusBlueGrayGradient: CGGradient = CGGradient(colorsSpace: nil, colors: [GameBadge.asusBlueGrayGradientColor.cgColor, GameBadge.asusBlueGrayGradientColor2.cgColor] as CFArray, locations: [0, 1])!
        static var image: UIImage?

        static var imageOfPurpleBadge: UIImage?
        static var purpleBadgeTargets: [AnyObject]?
        static var imageOfGreenBadge: UIImage?
        static var greenBadgeTargets: [AnyObject]?
        static var imageOfBlueprintBadge: UIImage?
        static var blueprintBadgeTargets: [AnyObject]?
        static var imageOfWetAsphaltBadge: UIImage?
        static var wetAsphaltBadgeTargets: [AnyObject]?
        static var imageOfGoldBadge: UIImage?
        static var goldBadgeTargets: [AnyObject]?
        static var imageOfAsusBlueGreyBadge: UIImage?
        static var asusBlueGreyBadgeTargets: [AnyObject]?
        static var imageOfRedBadge: UIImage?
        static var redBadgeTargets: [AnyObject]?
        static var imageOfWhiteBadge: UIImage?
        static var whiteBadgeTargets: [AnyObject]?
        static var imageOfBlackBadge: UIImage?
        static var blackBadgeTargets: [AnyObject]?
        static var imageOfSquareFrame: UIImage?
        static var squareFrameTargets: [AnyObject]?
        static var imageOfNA: UIImage?
        static var nATargets: [AnyObject]?
        static var imageOfBadge1: UIImage?
        static var badge1Targets: [AnyObject]?
        static var imageOfBadge2: UIImage?
        static var badge2Targets: [AnyObject]?
        static var imageOfBadge3: UIImage?
        static var badge3Targets: [AnyObject]?
        static var imageOfBadge4: UIImage?
        static var badge4Targets: [AnyObject]?
    }

    //// Colors

    @objc dynamic public class var gradientColor: UIColor { return Cache.gradientColor }
    @objc dynamic public class var gradientColor2: UIColor { return Cache.gradientColor2 }
    @objc dynamic public class var asusBlueGrayGradientColor: UIColor { return Cache.asusBlueGrayGradientColor }
    @objc dynamic public class var asusBlueGrayGradientColor2: UIColor { return Cache.asusBlueGrayGradientColor2 }
    @objc dynamic public class var blueprintGradientColor: UIColor { return Cache.blueprintGradientColor }
    @objc dynamic public class var blueprintGradientColor2: UIColor { return Cache.blueprintGradientColor2 }
    @objc dynamic public class var wetAsphaltGradientColor: UIColor { return Cache.wetAsphaltGradientColor }
    @objc dynamic public class var wetAsphaltGradientColor2: UIColor { return Cache.wetAsphaltGradientColor2 }
    @objc dynamic public class var gradientColor3: UIColor { return Cache.gradientColor3 }
    @objc dynamic public class var whiteGradientColor: UIColor { return Cache.whiteGradientColor }
    @objc dynamic public class var goldGradientColor: UIColor { return Cache.goldGradientColor }
    @objc dynamic public class var goldGradientColor2: UIColor { return Cache.goldGradientColor2 }
    @objc dynamic public class var redGradientColor: UIColor { return Cache.redGradientColor }
    @objc dynamic public class var redGradientColor2: UIColor { return Cache.redGradientColor2 }
    @objc dynamic public class var greenGradientColor: UIColor { return Cache.greenGradientColor }
    @objc dynamic public class var greenGradientColor2: UIColor { return Cache.greenGradientColor2 }

    //// Gradients

    @objc dynamic public class var purpleGradient: CGGradient { return Cache.purpleGradient }
    @objc dynamic public class var whiteGradient: CGGradient { return Cache.whiteGradient }
    @objc dynamic public class var goldGradient: CGGradient { return Cache.goldGradient }
    @objc dynamic public class var redGradient: CGGradient { return Cache.redGradient }
    @objc dynamic public class var greenGradient: CGGradient { return Cache.greenGradient }
    @objc dynamic public class var blueprintGradient: CGGradient { return Cache.blueprintGradient }
    @objc dynamic public class var wetAsphaltGradient: CGGradient { return Cache.wetAsphaltGradient }
    @objc dynamic public class var blackGradient: CGGradient { return Cache.blackGradient }
    @objc dynamic public class var asusBlueGrayGradient: CGGradient { return Cache.asusBlueGrayGradient }

    //// Images

    @objc dynamic public class var image: UIImage {
        if Cache.image == nil {
            Cache.image = UIImage(named: "image.png")!
        }
        return Cache.image!
    }

    //// Drawing Methods

    @objc dynamic public class func drawPurpleBadge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 452, height: 540), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 452, height: 540), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 452, y: resizedFrame.height / 540)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 447, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 447, y: 441), controlPoint1: CGPoint(x: 447, y: 11), controlPoint2: CGPoint(x: 447, y: 441))
        bezierPath.addLine(to: CGPoint(x: 445.77, y: 441))
        bezierPath.addCurve(to: CGPoint(x: 226.5, y: 538), controlPoint1: CGPoint(x: 428.81, y: 448.51), controlPoint2: CGPoint(x: 226.5, y: 538))
        bezierPath.addCurve(to: CGPoint(x: 7.23, y: 441), controlPoint1: CGPoint(x: 226.5, y: 538), controlPoint2: CGPoint(x: 24.19, y: 448.51))
        bezierPath.addLine(to: CGPoint(x: 6, y: 441))
        bezierPath.addLine(to: CGPoint(x: 6, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(GameBadge.purpleGradient, start: CGPoint(x: 226.5, y: 11), end: CGPoint(x: 226.5, y: 538), options: [])
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 435, y: 21))
        bezier2Path.addCurve(to: CGPoint(x: 435, y: 431.42), controlPoint1: CGPoint(x: 435, y: 21), controlPoint2: CGPoint(x: 435, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 433.83, y: 431.42))
        bezier2Path.addCurve(to: CGPoint(x: 225.5, y: 524), controlPoint1: CGPoint(x: 417.71, y: 438.58), controlPoint2: CGPoint(x: 225.5, y: 524))
        bezier2Path.addCurve(to: CGPoint(x: 17.17, y: 431.42), controlPoint1: CGPoint(x: 225.5, y: 524), controlPoint2: CGPoint(x: 33.29, y: 438.58))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(GameBadge.purpleGradient, start: CGPoint(x: 225.5, y: 21), end: CGPoint(x: 225.5, y: 524), options: [])
        context.restoreGState()
        UIColor.white.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawGreenBadge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 452, height: 540), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 452, height: 540), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 452, y: resizedFrame.height / 540)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 447, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 447, y: 441), controlPoint1: CGPoint(x: 447, y: 11), controlPoint2: CGPoint(x: 447, y: 441))
        bezierPath.addLine(to: CGPoint(x: 445.77, y: 441))
        bezierPath.addCurve(to: CGPoint(x: 226.5, y: 538), controlPoint1: CGPoint(x: 428.81, y: 448.51), controlPoint2: CGPoint(x: 226.5, y: 538))
        bezierPath.addCurve(to: CGPoint(x: 7.23, y: 441), controlPoint1: CGPoint(x: 226.5, y: 538), controlPoint2: CGPoint(x: 24.19, y: 448.51))
        bezierPath.addLine(to: CGPoint(x: 6, y: 441))
        bezierPath.addLine(to: CGPoint(x: 6, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(GameBadge.greenGradient, start: CGPoint(x: 226.5, y: 11), end: CGPoint(x: 226.5, y: 538), options: [])
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 435, y: 21))
        bezier2Path.addCurve(to: CGPoint(x: 435, y: 431.42), controlPoint1: CGPoint(x: 435, y: 21), controlPoint2: CGPoint(x: 435, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 433.83, y: 431.42))
        bezier2Path.addCurve(to: CGPoint(x: 225.5, y: 524), controlPoint1: CGPoint(x: 417.71, y: 438.58), controlPoint2: CGPoint(x: 225.5, y: 524))
        bezier2Path.addCurve(to: CGPoint(x: 17.17, y: 431.42), controlPoint1: CGPoint(x: 225.5, y: 524), controlPoint2: CGPoint(x: 33.29, y: 438.58))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(GameBadge.greenGradient, start: CGPoint(x: 225.5, y: 21), end: CGPoint(x: 225.5, y: 524), options: [])
        context.restoreGState()
        UIColor.white.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBlueprintBadge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 452, height: 540), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 452, height: 540), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 452, y: resizedFrame.height / 540)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 447, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 447, y: 441), controlPoint1: CGPoint(x: 447, y: 11), controlPoint2: CGPoint(x: 447, y: 441))
        bezierPath.addLine(to: CGPoint(x: 445.77, y: 441))
        bezierPath.addCurve(to: CGPoint(x: 226.5, y: 538), controlPoint1: CGPoint(x: 428.81, y: 448.51), controlPoint2: CGPoint(x: 226.5, y: 538))
        bezierPath.addCurve(to: CGPoint(x: 7.23, y: 441), controlPoint1: CGPoint(x: 226.5, y: 538), controlPoint2: CGPoint(x: 24.19, y: 448.51))
        bezierPath.addLine(to: CGPoint(x: 6, y: 441))
        bezierPath.addLine(to: CGPoint(x: 6, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(GameBadge.blueprintGradient, start: CGPoint(x: 226.5, y: 11), end: CGPoint(x: 226.5, y: 538), options: [])
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 435, y: 21))
        bezier2Path.addCurve(to: CGPoint(x: 435, y: 431.42), controlPoint1: CGPoint(x: 435, y: 21), controlPoint2: CGPoint(x: 435, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 433.83, y: 431.42))
        bezier2Path.addCurve(to: CGPoint(x: 225.5, y: 524), controlPoint1: CGPoint(x: 417.71, y: 438.58), controlPoint2: CGPoint(x: 225.5, y: 524))
        bezier2Path.addCurve(to: CGPoint(x: 17.17, y: 431.42), controlPoint1: CGPoint(x: 225.5, y: 524), controlPoint2: CGPoint(x: 33.29, y: 438.58))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(GameBadge.blueprintGradient, start: CGPoint(x: 225.5, y: 21), end: CGPoint(x: 225.5, y: 524), options: [])
        context.restoreGState()
        UIColor.white.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWetAsphaltBadge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 452, height: 540), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 452, height: 540), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 452, y: resizedFrame.height / 540)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 447, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 447, y: 441), controlPoint1: CGPoint(x: 447, y: 11), controlPoint2: CGPoint(x: 447, y: 441))
        bezierPath.addLine(to: CGPoint(x: 445.77, y: 441))
        bezierPath.addCurve(to: CGPoint(x: 226.5, y: 538), controlPoint1: CGPoint(x: 428.81, y: 448.51), controlPoint2: CGPoint(x: 226.5, y: 538))
        bezierPath.addCurve(to: CGPoint(x: 7.23, y: 441), controlPoint1: CGPoint(x: 226.5, y: 538), controlPoint2: CGPoint(x: 24.19, y: 448.51))
        bezierPath.addLine(to: CGPoint(x: 6, y: 441))
        bezierPath.addLine(to: CGPoint(x: 6, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(GameBadge.wetAsphaltGradient, start: CGPoint(x: 226.5, y: 11), end: CGPoint(x: 226.5, y: 538), options: [])
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 435, y: 21))
        bezier2Path.addCurve(to: CGPoint(x: 435, y: 431.42), controlPoint1: CGPoint(x: 435, y: 21), controlPoint2: CGPoint(x: 435, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 433.83, y: 431.42))
        bezier2Path.addCurve(to: CGPoint(x: 225.5, y: 524), controlPoint1: CGPoint(x: 417.71, y: 438.58), controlPoint2: CGPoint(x: 225.5, y: 524))
        bezier2Path.addCurve(to: CGPoint(x: 17.17, y: 431.42), controlPoint1: CGPoint(x: 225.5, y: 524), controlPoint2: CGPoint(x: 33.29, y: 438.58))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(GameBadge.wetAsphaltGradient, start: CGPoint(x: 225.5, y: 21), end: CGPoint(x: 225.5, y: 524), options: [])
        context.restoreGState()
        UIColor.white.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawGoldBadge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 452, height: 540), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 452, height: 540), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 452, y: resizedFrame.height / 540)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 447, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 447, y: 441), controlPoint1: CGPoint(x: 447, y: 11), controlPoint2: CGPoint(x: 447, y: 441))
        bezierPath.addLine(to: CGPoint(x: 445.77, y: 441))
        bezierPath.addCurve(to: CGPoint(x: 226.5, y: 538), controlPoint1: CGPoint(x: 428.81, y: 448.51), controlPoint2: CGPoint(x: 226.5, y: 538))
        bezierPath.addCurve(to: CGPoint(x: 7.23, y: 441), controlPoint1: CGPoint(x: 226.5, y: 538), controlPoint2: CGPoint(x: 24.19, y: 448.51))
        bezierPath.addLine(to: CGPoint(x: 6, y: 441))
        bezierPath.addLine(to: CGPoint(x: 6, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(GameBadge.goldGradient, start: CGPoint(x: 226.5, y: 11), end: CGPoint(x: 226.5, y: 538), options: [])
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 435, y: 21))
        bezier2Path.addCurve(to: CGPoint(x: 435, y: 431.42), controlPoint1: CGPoint(x: 435, y: 21), controlPoint2: CGPoint(x: 435, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 433.83, y: 431.42))
        bezier2Path.addCurve(to: CGPoint(x: 225.5, y: 524), controlPoint1: CGPoint(x: 417.71, y: 438.58), controlPoint2: CGPoint(x: 225.5, y: 524))
        bezier2Path.addCurve(to: CGPoint(x: 17.17, y: 431.42), controlPoint1: CGPoint(x: 225.5, y: 524), controlPoint2: CGPoint(x: 33.29, y: 438.58))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(GameBadge.goldGradient, start: CGPoint(x: 225.5, y: 21), end: CGPoint(x: 225.5, y: 524), options: [])
        context.restoreGState()
        UIColor.white.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawAsusBlueGreyBadge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 452, height: 540), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 452, height: 540), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 452, y: resizedFrame.height / 540)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 447, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 447, y: 441), controlPoint1: CGPoint(x: 447, y: 11), controlPoint2: CGPoint(x: 447, y: 441))
        bezierPath.addLine(to: CGPoint(x: 445.77, y: 441))
        bezierPath.addCurve(to: CGPoint(x: 226.5, y: 538), controlPoint1: CGPoint(x: 428.81, y: 448.51), controlPoint2: CGPoint(x: 226.5, y: 538))
        bezierPath.addCurve(to: CGPoint(x: 7.23, y: 441), controlPoint1: CGPoint(x: 226.5, y: 538), controlPoint2: CGPoint(x: 24.19, y: 448.51))
        bezierPath.addLine(to: CGPoint(x: 6, y: 441))
        bezierPath.addLine(to: CGPoint(x: 6, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(GameBadge.asusBlueGrayGradient, start: CGPoint(x: 226.5, y: 11), end: CGPoint(x: 226.5, y: 538), options: [])
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 435, y: 21))
        bezier2Path.addCurve(to: CGPoint(x: 435, y: 431.42), controlPoint1: CGPoint(x: 435, y: 21), controlPoint2: CGPoint(x: 435, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 433.83, y: 431.42))
        bezier2Path.addCurve(to: CGPoint(x: 225.5, y: 524), controlPoint1: CGPoint(x: 417.71, y: 438.58), controlPoint2: CGPoint(x: 225.5, y: 524))
        bezier2Path.addCurve(to: CGPoint(x: 17.17, y: 431.42), controlPoint1: CGPoint(x: 225.5, y: 524), controlPoint2: CGPoint(x: 33.29, y: 438.58))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(GameBadge.asusBlueGrayGradient, start: CGPoint(x: 225.5, y: 21), end: CGPoint(x: 225.5, y: 524), options: [])
        context.restoreGState()
        UIColor.white.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawRedBadge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 452, height: 540), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 452, height: 540), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 452, y: resizedFrame.height / 540)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 447, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 447, y: 441), controlPoint1: CGPoint(x: 447, y: 11), controlPoint2: CGPoint(x: 447, y: 441))
        bezierPath.addLine(to: CGPoint(x: 445.77, y: 441))
        bezierPath.addCurve(to: CGPoint(x: 226.5, y: 538), controlPoint1: CGPoint(x: 428.81, y: 448.51), controlPoint2: CGPoint(x: 226.5, y: 538))
        bezierPath.addCurve(to: CGPoint(x: 7.23, y: 441), controlPoint1: CGPoint(x: 226.5, y: 538), controlPoint2: CGPoint(x: 24.19, y: 448.51))
        bezierPath.addLine(to: CGPoint(x: 6, y: 441))
        bezierPath.addLine(to: CGPoint(x: 6, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(GameBadge.redGradient, start: CGPoint(x: 226.5, y: 11), end: CGPoint(x: 226.5, y: 538), options: [])
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 435, y: 21))
        bezier2Path.addCurve(to: CGPoint(x: 435, y: 431.42), controlPoint1: CGPoint(x: 435, y: 21), controlPoint2: CGPoint(x: 435, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 433.83, y: 431.42))
        bezier2Path.addCurve(to: CGPoint(x: 225.5, y: 524), controlPoint1: CGPoint(x: 417.71, y: 438.58), controlPoint2: CGPoint(x: 225.5, y: 524))
        bezier2Path.addCurve(to: CGPoint(x: 17.17, y: 431.42), controlPoint1: CGPoint(x: 225.5, y: 524), controlPoint2: CGPoint(x: 33.29, y: 438.58))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(GameBadge.redGradient, start: CGPoint(x: 225.5, y: 21), end: CGPoint(x: 225.5, y: 524), options: [])
        context.restoreGState()
        UIColor.white.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWhiteBadge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 452, height: 540), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 452, height: 540), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 452, y: resizedFrame.height / 540)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 447, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 447, y: 441), controlPoint1: CGPoint(x: 447, y: 11), controlPoint2: CGPoint(x: 447, y: 441))
        bezierPath.addLine(to: CGPoint(x: 445.77, y: 441))
        bezierPath.addCurve(to: CGPoint(x: 226.5, y: 538), controlPoint1: CGPoint(x: 428.81, y: 448.51), controlPoint2: CGPoint(x: 226.5, y: 538))
        bezierPath.addCurve(to: CGPoint(x: 7.23, y: 441), controlPoint1: CGPoint(x: 226.5, y: 538), controlPoint2: CGPoint(x: 24.19, y: 448.51))
        bezierPath.addLine(to: CGPoint(x: 6, y: 441))
        bezierPath.addLine(to: CGPoint(x: 6, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(GameBadge.whiteGradient, start: CGPoint(x: 226.5, y: 11), end: CGPoint(x: 226.5, y: 538), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 435, y: 21))
        bezier2Path.addCurve(to: CGPoint(x: 435, y: 431.42), controlPoint1: CGPoint(x: 435, y: 21), controlPoint2: CGPoint(x: 435, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 433.83, y: 431.42))
        bezier2Path.addCurve(to: CGPoint(x: 225.5, y: 524), controlPoint1: CGPoint(x: 417.71, y: 438.58), controlPoint2: CGPoint(x: 225.5, y: 524))
        bezier2Path.addCurve(to: CGPoint(x: 17.17, y: 431.42), controlPoint1: CGPoint(x: 225.5, y: 524), controlPoint2: CGPoint(x: 33.29, y: 438.58))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(GameBadge.whiteGradient, start: CGPoint(x: 225.5, y: 21), end: CGPoint(x: 225.5, y: 524), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBlackBadge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 452, height: 540), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 452, height: 540), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 452, y: resizedFrame.height / 540)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 447, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 447, y: 441), controlPoint1: CGPoint(x: 447, y: 11), controlPoint2: CGPoint(x: 447, y: 441))
        bezierPath.addLine(to: CGPoint(x: 445.77, y: 441))
        bezierPath.addCurve(to: CGPoint(x: 226.5, y: 538), controlPoint1: CGPoint(x: 428.81, y: 448.51), controlPoint2: CGPoint(x: 226.5, y: 538))
        bezierPath.addCurve(to: CGPoint(x: 7.23, y: 441), controlPoint1: CGPoint(x: 226.5, y: 538), controlPoint2: CGPoint(x: 24.19, y: 448.51))
        bezierPath.addLine(to: CGPoint(x: 6, y: 441))
        bezierPath.addLine(to: CGPoint(x: 6, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.addLine(to: CGPoint(x: 447, y: 11))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(GameBadge.blackGradient, start: CGPoint(x: 226.5, y: 11), end: CGPoint(x: 226.5, y: 538), options: [])
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 435, y: 21))
        bezier2Path.addCurve(to: CGPoint(x: 435, y: 431.42), controlPoint1: CGPoint(x: 435, y: 21), controlPoint2: CGPoint(x: 435, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 433.83, y: 431.42))
        bezier2Path.addCurve(to: CGPoint(x: 225.5, y: 524), controlPoint1: CGPoint(x: 417.71, y: 438.58), controlPoint2: CGPoint(x: 225.5, y: 524))
        bezier2Path.addCurve(to: CGPoint(x: 17.17, y: 431.42), controlPoint1: CGPoint(x: 225.5, y: 524), controlPoint2: CGPoint(x: 33.29, y: 438.58))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 431.42))
        bezier2Path.addLine(to: CGPoint(x: 16, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.addLine(to: CGPoint(x: 435, y: 21))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(GameBadge.blackGradient, start: CGPoint(x: 225.5, y: 21), end: CGPoint(x: 225.5, y: 524), options: [])
        context.restoreGState()
        UIColor.white.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawSquareFrame(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 479, height: 534), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 479, height: 534), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 479, y: resizedFrame.height / 534)


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 479, height: 534))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(GameBadge.blackGradient, start: CGPoint(x: 239.5, y: -0), end: CGPoint(x: 239.5, y: 534), options: [])
        context.restoreGState()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: 13, y: 12, width: 455, height: 509))
        context.saveGState()
        rectangle3Path.addClip()
        context.drawLinearGradient(GameBadge.goldGradient, start: CGPoint(x: 240.5, y: 12), end: CGPoint(x: 240.5, y: 521), options: [])
        context.restoreGState()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 25, y: 23, width: 432, height: 486))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(GameBadge.whiteGradient, start: CGPoint(x: 241, y: 23), end: CGPoint(x: 241, y: 509), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawNA(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 195, height: 95), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 195, height: 95), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 195, y: resizedFrame.height / 95)


        //// Text Drawing
        let textRect = CGRect(x: 0, y: 0, width: 195, height: 95)
        let textPath = UIBezierPath(rect: textRect)
        UIColor.red.setFill()
        textPath.fill()
        let textTextContent = "NOT\nAVAILABLE"
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [
            .font: UIFont.systemFont(ofSize: 32),
            .foregroundColor: UIColor.black,
            .paragraphStyle: textStyle,
        ] as [NSAttributedString.Key: Any]

        let textTextHeight: CGFloat = textTextContent.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        textTextContent.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBadge1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 475, height: 949), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 475, height: 949), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 475, y: resizedFrame.height / 949)


        //// Color Declarations
        let fillColor5741 = UIColor(red: 0.310, green: 0.675, blue: 0.906, alpha: 1.000)
        let fillColor5742 = UIColor(red: 0.655, green: 0.200, blue: 0.196, alpha: 1.000)
        let fillColor5743 = UIColor(red: 0.839, green: 0.455, blue: 0.447, alpha: 1.000)
        let fillColor5744 = UIColor(red: 0.792, green: 0.286, blue: 0.259, alpha: 1.000)
        let fillColor5745 = UIColor(red: 0.937, green: 0.820, blue: 0.545, alpha: 1.000)
        let fillColor5746 = UIColor(red: 0.820, green: 0.388, blue: 0.349, alpha: 1.000)

        //// #ffffffff


        //// #4face7ff
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 0.48, y: 0.13))
        bezierPath.addCurve(to: CGPoint(x: 467.01, y: -0.05), controlPoint1: CGPoint(x: 155.97, y: -0.25), controlPoint2: CGPoint(x: 311.49, y: 0.15))
        bezierPath.addCurve(to: CGPoint(x: 474.85, y: 0.15), controlPoint1: CGPoint(x: 469.61, y: -0.08), controlPoint2: CGPoint(x: 472.24, y: -0.09))
        bezierPath.addCurve(to: CGPoint(x: 475.01, y: 740), controlPoint1: CGPoint(x: 475.23, y: 246.75), controlPoint2: CGPoint(x: 474.91, y: 493.39))
        bezierPath.addCurve(to: CGPoint(x: 474.4, y: 783.51), controlPoint1: CGPoint(x: 474.87, y: 754.51), controlPoint2: CGPoint(x: 475.45, y: 769.03))
        bezierPath.addCurve(to: CGPoint(x: 454.01, y: 853.73), controlPoint1: CGPoint(x: 472.6, y: 807.99), controlPoint2: CGPoint(x: 465.51, y: 832.05))
        bezierPath.addCurve(to: CGPoint(x: 351.21, y: 940.29), controlPoint1: CGPoint(x: 432.4, y: 894.19), controlPoint2: CGPoint(x: 395.01, y: 926.28))
        bezierPath.addCurve(to: CGPoint(x: 311.45, y: 948.6), controlPoint1: CGPoint(x: 338.37, y: 944.75), controlPoint2: CGPoint(x: 324.95, y: 947.25))
        bezierPath.addCurve(to: CGPoint(x: 269.67, y: 949.35), controlPoint1: CGPoint(x: 297.56, y: 949.72), controlPoint2: CGPoint(x: 283.6, y: 949.25))
        bezierPath.addCurve(to: CGPoint(x: 169.55, y: 948.99), controlPoint1: CGPoint(x: 236.29, y: 949.13), controlPoint2: CGPoint(x: 202.91, y: 949.79))
        bezierPath.addCurve(to: CGPoint(x: 99.48, y: 930.2), controlPoint1: CGPoint(x: 145.23, y: 947.64), controlPoint2: CGPoint(x: 121.25, y: 941.07))
        bezierPath.addCurve(to: CGPoint(x: 9.04, y: 824.55), controlPoint1: CGPoint(x: 57.03, y: 908.76), controlPoint2: CGPoint(x: 23.32, y: 870.04))
        bezierPath.addCurve(to: CGPoint(x: 0.32, y: 757.33), controlPoint1: CGPoint(x: 1.65, y: 802.99), controlPoint2: CGPoint(x: -0.16, y: 779.99))
        bezierPath.addCurve(to: CGPoint(x: 0.32, y: 14.67), controlPoint1: CGPoint(x: 0.32, y: 509.77), controlPoint2: CGPoint(x: 0.32, y: 262.23))
        bezierPath.addCurve(to: CGPoint(x: 0.48, y: 0.13), controlPoint1: CGPoint(x: 0.35, y: 9.83), controlPoint2: CGPoint(x: 0.08, y: 4.97))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 3.16, y: 2.83))
        bezierPath.addCurve(to: CGPoint(x: 3.23, y: 23.96), controlPoint1: CGPoint(x: 2.85, y: 9.85), controlPoint2: CGPoint(x: 2.83, y: 16.93))
        bezierPath.addCurve(to: CGPoint(x: 3.25, y: 40), controlPoint1: CGPoint(x: 2.79, y: 29.29), controlPoint2: CGPoint(x: 2.81, y: 34.68))
        bezierPath.addCurve(to: CGPoint(x: 3.12, y: 59.68), controlPoint1: CGPoint(x: 2.79, y: 46.55), controlPoint2: CGPoint(x: 2.96, y: 53.12))
        bezierPath.addCurve(to: CGPoint(x: 2.97, y: 193.33), controlPoint1: CGPoint(x: 2.91, y: 104.23), controlPoint2: CGPoint(x: 3.16, y: 148.79))
        bezierPath.addCurve(to: CGPoint(x: 3.25, y: 198.65), controlPoint1: CGPoint(x: 2.97, y: 195.11), controlPoint2: CGPoint(x: 3.08, y: 196.88))
        bezierPath.addCurve(to: CGPoint(x: 3.15, y: 234.43), controlPoint1: CGPoint(x: 2.88, y: 210.56), controlPoint2: CGPoint(x: 2.89, y: 222.51))
        bezierPath.addCurve(to: CGPoint(x: 3.24, y: 265.53), controlPoint1: CGPoint(x: 3.09, y: 244.79), controlPoint2: CGPoint(x: 2.71, y: 255.17))
        bezierPath.addCurve(to: CGPoint(x: 3.01, y: 346.67), controlPoint1: CGPoint(x: 2.77, y: 292.56), controlPoint2: CGPoint(x: 3.15, y: 319.63))
        bezierPath.addCurve(to: CGPoint(x: 3.01, y: 689.33), controlPoint1: CGPoint(x: 3.01, y: 460.89), controlPoint2: CGPoint(x: 3.01, y: 575.11))
        bezierPath.addCurve(to: CGPoint(x: 3.37, y: 781.45), controlPoint1: CGPoint(x: 3.2, y: 720.04), controlPoint2: CGPoint(x: 2.61, y: 750.76))
        bezierPath.addCurve(to: CGPoint(x: 45.44, y: 884.21), controlPoint1: CGPoint(x: 5.97, y: 818.99), controlPoint2: CGPoint(x: 20.76, y: 855.73))
        bezierPath.addCurve(to: CGPoint(x: 150.91, y: 944.2), controlPoint1: CGPoint(x: 72.11, y: 915.79), controlPoint2: CGPoint(x: 110.12, y: 937.48))
        bezierPath.addCurve(to: CGPoint(x: 208.33, y: 946.65), controlPoint1: CGPoint(x: 169.87, y: 947.52), controlPoint2: CGPoint(x: 189.19, y: 946.47))
        bezierPath.addCurve(to: CGPoint(x: 299.03, y: 946.52), controlPoint1: CGPoint(x: 238.56, y: 946.56), controlPoint2: CGPoint(x: 268.8, y: 946.83))
        bezierPath.addCurve(to: CGPoint(x: 349.17, y: 938.19), controlPoint1: CGPoint(x: 316.05, y: 946.55), controlPoint2: CGPoint(x: 332.95, y: 943.17))
        bezierPath.addCurve(to: CGPoint(x: 451.11, y: 853.39), controlPoint1: CGPoint(x: 392.41, y: 924.47), controlPoint2: CGPoint(x: 429.61, y: 893.25))
        bezierPath.addCurve(to: CGPoint(x: 471.89, y: 782.8), controlPoint1: CGPoint(x: 462.88, y: 831.65), controlPoint2: CGPoint(x: 469.89, y: 807.41))
        bezierPath.addCurve(to: CGPoint(x: 472.32, y: 710.67), controlPoint1: CGPoint(x: 472.72, y: 758.77), controlPoint2: CGPoint(x: 472.15, y: 734.71))
        bezierPath.addCurve(to: CGPoint(x: 472.32, y: 472), controlPoint1: CGPoint(x: 472.32, y: 631.11), controlPoint2: CGPoint(x: 472.31, y: 551.56))
        bezierPath.addCurve(to: CGPoint(x: 472.11, y: 265.53), controlPoint1: CGPoint(x: 472.19, y: 403.17), controlPoint2: CGPoint(x: 472.59, y: 334.35))
        bezierPath.addCurve(to: CGPoint(x: 472.23, y: 240.96), controlPoint1: CGPoint(x: 472.57, y: 257.35), controlPoint2: CGPoint(x: 472.33, y: 249.15))
        bezierPath.addCurve(to: CGPoint(x: 472.07, y: 194.75), controlPoint1: CGPoint(x: 472.4, y: 225.56), controlPoint2: CGPoint(x: 472.47, y: 210.15))
        bezierPath.addCurve(to: CGPoint(x: 472.33, y: 182.67), controlPoint1: CGPoint(x: 472.48, y: 190.73), controlPoint2: CGPoint(x: 472.35, y: 186.69))
        bezierPath.addCurve(to: CGPoint(x: 472.21, y: 59.75), controlPoint1: CGPoint(x: 472.2, y: 141.69), controlPoint2: CGPoint(x: 472.43, y: 100.71))
        bezierPath.addCurve(to: CGPoint(x: 472.09, y: 40), controlPoint1: CGPoint(x: 472.33, y: 53.17), controlPoint2: CGPoint(x: 472.55, y: 46.57))
        bezierPath.addCurve(to: CGPoint(x: 472.11, y: 23.99), controlPoint1: CGPoint(x: 472.52, y: 34.68), controlPoint2: CGPoint(x: 472.55, y: 29.31))
        bezierPath.addCurve(to: CGPoint(x: 472.17, y: 2.83), controlPoint1: CGPoint(x: 472.52, y: 16.95), controlPoint2: CGPoint(x: 472.48, y: 9.87))
        bezierPath.addCurve(to: CGPoint(x: 445.83, y: 2.83), controlPoint1: CGPoint(x: 463.4, y: 2.55), controlPoint2: CGPoint(x: 454.6, y: 2.53))
        bezierPath.addCurve(to: CGPoint(x: 445.89, y: 23.97), controlPoint1: CGPoint(x: 445.52, y: 9.87), controlPoint2: CGPoint(x: 445.48, y: 16.93))
        bezierPath.addCurve(to: CGPoint(x: 445.92, y: 40), controlPoint1: CGPoint(x: 445.44, y: 29.29), controlPoint2: CGPoint(x: 445.47, y: 34.68))
        bezierPath.addCurve(to: CGPoint(x: 445.8, y: 58.93), controlPoint1: CGPoint(x: 445.45, y: 46.29), controlPoint2: CGPoint(x: 445.6, y: 52.63))
        bezierPath.addCurve(to: CGPoint(x: 445.81, y: 195.76), controlPoint1: CGPoint(x: 445.68, y: 104.53), controlPoint2: CGPoint(x: 445.59, y: 150.16))
        bezierPath.addCurve(to: CGPoint(x: 445.96, y: 241.23), controlPoint1: CGPoint(x: 445.79, y: 210.91), controlPoint2: CGPoint(x: 445.29, y: 226.09))
        bezierPath.addCurve(to: CGPoint(x: 445.89, y: 265.53), controlPoint1: CGPoint(x: 445.51, y: 249.31), controlPoint2: CGPoint(x: 445.47, y: 257.45))
        bezierPath.addCurve(to: CGPoint(x: 445.68, y: 364), controlPoint1: CGPoint(x: 445.44, y: 298.35), controlPoint2: CGPoint(x: 445.8, y: 331.19))
        bezierPath.addCurve(to: CGPoint(x: 445.68, y: 773.33), controlPoint1: CGPoint(x: 445.69, y: 500.44), controlPoint2: CGPoint(x: 445.68, y: 636.89))
        bezierPath.addCurve(to: CGPoint(x: 417.36, y: 857.01), controlPoint1: CGPoint(x: 445.16, y: 803.25), controlPoint2: CGPoint(x: 434.91, y: 832.83))
        bezierPath.addCurve(to: CGPoint(x: 300.35, y: 920), controlPoint1: CGPoint(x: 390.75, y: 894.41), controlPoint2: CGPoint(x: 346.36, y: 918.81))
        bezierPath.addCurve(to: CGPoint(x: 180.33, y: 920.04), controlPoint1: CGPoint(x: 260.33, y: 920.05), controlPoint2: CGPoint(x: 220.33, y: 919.99))
        bezierPath.addCurve(to: CGPoint(x: 78.65, y: 880.35), controlPoint1: CGPoint(x: 142.99, y: 920.51), controlPoint2: CGPoint(x: 106.05, y: 905.55))
        bezierPath.addCurve(to: CGPoint(x: 29.64, y: 773.33), controlPoint1: CGPoint(x: 48.89, y: 853.17), controlPoint2: CGPoint(x: 30.29, y: 813.76))
        bezierPath.addCurve(to: CGPoint(x: 29.65, y: 361.33), controlPoint1: CGPoint(x: 29.65, y: 636), controlPoint2: CGPoint(x: 29.65, y: 498.67))
        bezierPath.addCurve(to: CGPoint(x: 29.43, y: 265.53), controlPoint1: CGPoint(x: 29.53, y: 329.4), controlPoint2: CGPoint(x: 29.91, y: 297.45))
        bezierPath.addCurve(to: CGPoint(x: 29.4, y: 233.37), controlPoint1: CGPoint(x: 29.89, y: 254.83), controlPoint2: CGPoint(x: 29.71, y: 244.08))
        bezierPath.addCurve(to: CGPoint(x: 29.53, y: 199.77), controlPoint1: CGPoint(x: 29.99, y: 222.19), controlPoint2: CGPoint(x: 29.6, y: 210.96))
        bezierPath.addCurve(to: CGPoint(x: 29.65, y: 72), controlPoint1: CGPoint(x: 29.81, y: 157.19), controlPoint2: CGPoint(x: 29.49, y: 114.59))
        bezierPath.addCurve(to: CGPoint(x: 29.36, y: 60.01), controlPoint1: CGPoint(x: 29.67, y: 68), controlPoint2: CGPoint(x: 29.84, y: 63.99))
        bezierPath.addCurve(to: CGPoint(x: 29.41, y: 40), controlPoint1: CGPoint(x: 29.79, y: 53.36), controlPoint2: CGPoint(x: 29.88, y: 46.65))
        bezierPath.addCurve(to: CGPoint(x: 29.44, y: 23.96), controlPoint1: CGPoint(x: 29.85, y: 34.67), controlPoint2: CGPoint(x: 29.88, y: 29.29))
        bezierPath.addCurve(to: CGPoint(x: 29.51, y: 2.81), controlPoint1: CGPoint(x: 29.85, y: 16.93), controlPoint2: CGPoint(x: 29.81, y: 9.85))
        bezierPath.addCurve(to: CGPoint(x: 3.16, y: 2.83), controlPoint1: CGPoint(x: 20.73, y: 2.56), controlPoint2: CGPoint(x: 11.93, y: 2.55))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 32.45, y: 2.69))
        bezierPath.addCurve(to: CGPoint(x: 32.49, y: 35.99), controlPoint1: CGPoint(x: 32.24, y: 13.77), controlPoint2: CGPoint(x: 32.19, y: 24.89))
        bezierPath.addCurve(to: CGPoint(x: 32.33, y: 416), controlPoint1: CGPoint(x: 32.32, y: 162.64), controlPoint2: CGPoint(x: 32.35, y: 289.33))
        bezierPath.addCurve(to: CGPoint(x: 32.51, y: 521.28), controlPoint1: CGPoint(x: 32.47, y: 451.09), controlPoint2: CGPoint(x: 32.09, y: 486.2))
        bezierPath.addCurve(to: CGPoint(x: 32.37, y: 741.33), controlPoint1: CGPoint(x: 32.16, y: 594.63), controlPoint2: CGPoint(x: 32.37, y: 667.99))
        bezierPath.addCurve(to: CGPoint(x: 36.93, y: 802.93), controlPoint1: CGPoint(x: 32.6, y: 761.88), controlPoint2: CGPoint(x: 31.29, y: 782.93))
        bezierPath.addCurve(to: CGPoint(x: 37.71, y: 807.84), controlPoint1: CGPoint(x: 36.72, y: 804.59), controlPoint2: CGPoint(x: 37.33, y: 806.21))
        bezierPath.addCurve(to: CGPoint(x: 106.19, y: 896.8), controlPoint1: CGPoint(x: 47.95, y: 844.81), controlPoint2: CGPoint(x: 72.85, y: 877.64))
        bezierPath.addCurve(to: CGPoint(x: 178.96, y: 917.21), controlPoint1: CGPoint(x: 128.09, y: 909.95), controlPoint2: CGPoint(x: 153.49, y: 916.63))
        bezierPath.addCurve(to: CGPoint(x: 255, y: 917.33), controlPoint1: CGPoint(x: 204.31, y: 917.49), controlPoint2: CGPoint(x: 229.65, y: 917.25))
        bezierPath.addCurve(to: CGPoint(x: 331.51, y: 912.43), controlPoint1: CGPoint(x: 280.52, y: 916.96), controlPoint2: CGPoint(x: 306.56, y: 919.13))
        bezierPath.addCurve(to: CGPoint(x: 397.24, y: 875.6), controlPoint1: CGPoint(x: 356.08, y: 906.09), controlPoint2: CGPoint(x: 378.95, y: 893.17))
        bezierPath.addCurve(to: CGPoint(x: 437.33, y: 808.87), controlPoint1: CGPoint(x: 416.19, y: 857.43), controlPoint2: CGPoint(x: 430.08, y: 834.08))
        bezierPath.addCurve(to: CGPoint(x: 438.39, y: 802.93), controlPoint1: CGPoint(x: 437.8, y: 806.92), controlPoint2: CGPoint(x: 438.6, y: 804.96))
        bezierPath.addCurve(to: CGPoint(x: 442.96, y: 742.67), controlPoint1: CGPoint(x: 443.93, y: 783.37), controlPoint2: CGPoint(x: 442.77, y: 762.77))
        bezierPath.addCurve(to: CGPoint(x: 442.83, y: 521.29), controlPoint1: CGPoint(x: 442.96, y: 668.87), controlPoint2: CGPoint(x: 443.17, y: 595.08))
        bezierPath.addCurve(to: CGPoint(x: 443, y: 349.33), controlPoint1: CGPoint(x: 443.24, y: 463.99), controlPoint2: CGPoint(x: 442.88, y: 406.65))
        bezierPath.addCurve(to: CGPoint(x: 442.84, y: 35.99), controlPoint1: CGPoint(x: 442.97, y: 244.89), controlPoint2: CGPoint(x: 443, y: 140.43))
        bezierPath.addCurve(to: CGPoint(x: 442.88, y: 2.69), controlPoint1: CGPoint(x: 443.15, y: 24.89), controlPoint2: CGPoint(x: 443.09, y: 13.79))
        bezierPath.addCurve(to: CGPoint(x: 440.45, y: 2.68), controlPoint1: CGPoint(x: 442.28, y: 2.69), controlPoint2: CGPoint(x: 441.05, y: 2.68))
        bezierPath.addCurve(to: CGPoint(x: 440.49, y: 35.99), controlPoint1: CGPoint(x: 440.24, y: 13.77), controlPoint2: CGPoint(x: 440.17, y: 24.89))
        bezierPath.addCurve(to: CGPoint(x: 440.36, y: 52), controlPoint1: CGPoint(x: 440.12, y: 41.32), controlPoint2: CGPoint(x: 440.39, y: 46.67))
        bezierPath.addCurve(to: CGPoint(x: 440.51, y: 521.29), controlPoint1: CGPoint(x: 440.57, y: 208.43), controlPoint2: CGPoint(x: 440.03, y: 364.88))
        bezierPath.addCurve(to: CGPoint(x: 440.39, y: 776.01), controlPoint1: CGPoint(x: 440.12, y: 606.2), controlPoint2: CGPoint(x: 440.41, y: 691.11))
        bezierPath.addCurve(to: CGPoint(x: 437.8, y: 800.71), controlPoint1: CGPoint(x: 440.56, y: 784.35), controlPoint2: CGPoint(x: 437.97, y: 792.45))
        bezierPath.addCurve(to: CGPoint(x: 433.63, y: 813.23), controlPoint1: CGPoint(x: 435.52, y: 804.53), controlPoint2: CGPoint(x: 435.05, y: 809.07))
        bezierPath.addCurve(to: CGPoint(x: 415.72, y: 850.08), controlPoint1: CGPoint(x: 429.44, y: 826.27), controlPoint2: CGPoint(x: 423.37, y: 838.71))
        bezierPath.addCurve(to: CGPoint(x: 300.33, y: 914.64), controlPoint1: CGPoint(x: 390.35, y: 888.17), controlPoint2: CGPoint(x: 346.25, y: 913.45))
        bezierPath.addCurve(to: CGPoint(x: 179, y: 914.68), controlPoint1: CGPoint(x: 259.89, y: 914.71), controlPoint2: CGPoint(x: 219.44, y: 914.64))
        bezierPath.addCurve(to: CGPoint(x: 133.45, y: 906.96), controlPoint1: CGPoint(x: 163.51, y: 914.84), controlPoint2: CGPoint(x: 148.07, y: 911.99))
        bezierPath.addCurve(to: CGPoint(x: 40.55, y: 809.19), controlPoint1: CGPoint(x: 89.13, y: 891.89), controlPoint2: CGPoint(x: 53.17, y: 854.31))
        bezierPath.addCurve(to: CGPoint(x: 37.53, y: 800.71), controlPoint1: CGPoint(x: 39.76, y: 806.28), controlPoint2: CGPoint(x: 39.13, y: 803.28))
        bezierPath.addCurve(to: CGPoint(x: 36.4, y: 790.67), controlPoint1: CGPoint(x: 37.85, y: 797.32), controlPoint2: CGPoint(x: 36.81, y: 793.99))
        bezierPath.addCurve(to: CGPoint(x: 34.93, y: 754.67), controlPoint1: CGPoint(x: 34.21, y: 778.79), controlPoint2: CGPoint(x: 35.05, y: 766.67))
        bezierPath.addCurve(to: CGPoint(x: 34.81, y: 521.31), controlPoint1: CGPoint(x: 34.97, y: 676.88), controlPoint2: CGPoint(x: 35.17, y: 599.08))
        bezierPath.addCurve(to: CGPoint(x: 35, y: 461.33), controlPoint1: CGPoint(x: 35.27, y: 501.32), controlPoint2: CGPoint(x: 34.87, y: 481.32))
        bezierPath.addCurve(to: CGPoint(x: 34.84, y: 35.99), controlPoint1: CGPoint(x: 34.99, y: 319.55), controlPoint2: CGPoint(x: 35.04, y: 177.76))
        bezierPath.addCurve(to: CGPoint(x: 34.88, y: 2.69), controlPoint1: CGPoint(x: 35.16, y: 24.89), controlPoint2: CGPoint(x: 35.09, y: 13.77))
        bezierPath.addCurve(to: CGPoint(x: 32.45, y: 2.69), controlPoint1: CGPoint(x: 34.27, y: 2.69), controlPoint2: CGPoint(x: 33.05, y: 2.69))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 37.83, y: 2.83))
        bezierPath.addCurve(to: CGPoint(x: 37.89, y: 23.97), controlPoint1: CGPoint(x: 37.52, y: 9.87), controlPoint2: CGPoint(x: 37.48, y: 16.93))
        bezierPath.addCurve(to: CGPoint(x: 37.91, y: 38.79), controlPoint1: CGPoint(x: 37.45, y: 28.89), controlPoint2: CGPoint(x: 37.47, y: 33.87))
        bezierPath.addCurve(to: CGPoint(x: 37.93, y: 59.96), controlPoint1: CGPoint(x: 37.44, y: 45.83), controlPoint2: CGPoint(x: 37.57, y: 52.91))
        bezierPath.addCurve(to: CGPoint(x: 37.72, y: 80), controlPoint1: CGPoint(x: 37.35, y: 66.61), controlPoint2: CGPoint(x: 37.83, y: 73.32))
        bezierPath.addCurve(to: CGPoint(x: 37.68, y: 204.97), controlPoint1: CGPoint(x: 37.72, y: 121.65), controlPoint2: CGPoint(x: 37.68, y: 163.31))
        bezierPath.addCurve(to: CGPoint(x: 37.75, y: 231.63), controlPoint1: CGPoint(x: 37.67, y: 213.85), controlPoint2: CGPoint(x: 37.56, y: 222.75))
        bezierPath.addCurve(to: CGPoint(x: 37.91, y: 265.53), controlPoint1: CGPoint(x: 37.85, y: 242.92), controlPoint2: CGPoint(x: 37.35, y: 254.25))
        bezierPath.addCurve(to: CGPoint(x: 37.68, y: 313.33), controlPoint1: CGPoint(x: 37.47, y: 281.45), controlPoint2: CGPoint(x: 37.8, y: 297.4))
        bezierPath.addCurve(to: CGPoint(x: 37.68, y: 765.33), controlPoint1: CGPoint(x: 37.68, y: 464), controlPoint2: CGPoint(x: 37.68, y: 614.67))
        bezierPath.addCurve(to: CGPoint(x: 53, y: 832.55), controlPoint1: CGPoint(x: 37.73, y: 788.51), controlPoint2: CGPoint(x: 42.33, y: 811.85))
        bezierPath.addCurve(to: CGPoint(x: 165.73, y: 910.87), controlPoint1: CGPoint(x: 74.01, y: 875.55), controlPoint2: CGPoint(x: 118.05, y: 906.32))
        bezierPath.addCurve(to: CGPoint(x: 205.67, y: 911.99), controlPoint1: CGPoint(x: 179, y: 912.44), controlPoint2: CGPoint(x: 192.36, y: 911.91))
        bezierPath.addCurve(to: CGPoint(x: 269.67, y: 911.99), controlPoint1: CGPoint(x: 227, y: 911.99), controlPoint2: CGPoint(x: 248.33, y: 911.97))
        bezierPath.addCurve(to: CGPoint(x: 309.59, y: 910.87), controlPoint1: CGPoint(x: 282.97, y: 911.89), controlPoint2: CGPoint(x: 296.33, y: 912.45))
        bezierPath.addCurve(to: CGPoint(x: 422.32, y: 832.55), controlPoint1: CGPoint(x: 357.27, y: 906.32), controlPoint2: CGPoint(x: 401.32, y: 875.55))
        bezierPath.addCurve(to: CGPoint(x: 437.64, y: 766.67), controlPoint1: CGPoint(x: 432.8, y: 812.25), controlPoint2: CGPoint(x: 437.44, y: 789.4))
        bezierPath.addCurve(to: CGPoint(x: 437.65, y: 476), controlPoint1: CGPoint(x: 437.68, y: 669.77), controlPoint2: CGPoint(x: 437.64, y: 572.89))
        bezierPath.addCurve(to: CGPoint(x: 437.44, y: 265.55), controlPoint1: CGPoint(x: 437.51, y: 405.85), controlPoint2: CGPoint(x: 437.93, y: 335.68))
        bezierPath.addCurve(to: CGPoint(x: 437.4, y: 230.59), controlPoint1: CGPoint(x: 437.89, y: 253.91), controlPoint2: CGPoint(x: 437.67, y: 242.23))
        bezierPath.addCurve(to: CGPoint(x: 437.41, y: 205.21), controlPoint1: CGPoint(x: 437.92, y: 222.15), controlPoint2: CGPoint(x: 437.79, y: 213.65))
        bezierPath.addCurve(to: CGPoint(x: 437.71, y: 196), controlPoint1: CGPoint(x: 437.73, y: 202.16), controlPoint2: CGPoint(x: 437.72, y: 199.07))
        bezierPath.addCurve(to: CGPoint(x: 437.4, y: 59.96), controlPoint1: CGPoint(x: 437.4, y: 150.65), controlPoint2: CGPoint(x: 437.96, y: 105.29))
        bezierPath.addCurve(to: CGPoint(x: 437.43, y: 38.77), controlPoint1: CGPoint(x: 437.76, y: 52.91), controlPoint2: CGPoint(x: 437.88, y: 45.83))
        bezierPath.addCurve(to: CGPoint(x: 437.44, y: 23.97), controlPoint1: CGPoint(x: 437.85, y: 33.85), controlPoint2: CGPoint(x: 437.88, y: 28.89))
        bezierPath.addCurve(to: CGPoint(x: 437.51, y: 2.83), controlPoint1: CGPoint(x: 437.85, y: 16.93), controlPoint2: CGPoint(x: 437.81, y: 9.87))
        bezierPath.addCurve(to: CGPoint(x: 432.35, y: 2.63), controlPoint1: CGPoint(x: 435.79, y: 2.68), controlPoint2: CGPoint(x: 434.07, y: 2.63))
        bezierPath.addCurve(to: CGPoint(x: 37.83, y: 2.83), controlPoint1: CGPoint(x: 300.84, y: 2.84), controlPoint2: CGPoint(x: 169.32, y: 2.45))
        bezierPath.close()
        fillColor5741.setFill()
        bezierPath.fill()




        //// #a73332ff
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 3.16, y: 2.83))
        bezier2Path.addCurve(to: CGPoint(x: 29.51, y: 2.81), controlPoint1: CGPoint(x: 11.93, y: 2.55), controlPoint2: CGPoint(x: 20.73, y: 2.56))
        bezier2Path.addCurve(to: CGPoint(x: 29.44, y: 23.96), controlPoint1: CGPoint(x: 29.81, y: 9.85), controlPoint2: CGPoint(x: 29.85, y: 16.93))
        bezier2Path.addCurve(to: CGPoint(x: 3.23, y: 23.96), controlPoint1: CGPoint(x: 20.71, y: 23.89), controlPoint2: CGPoint(x: 11.96, y: 23.89))
        bezier2Path.addCurve(to: CGPoint(x: 3.16, y: 2.83), controlPoint1: CGPoint(x: 2.83, y: 16.93), controlPoint2: CGPoint(x: 2.85, y: 9.85))
        bezier2Path.close()
        fillColor5742.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 37.83, y: 2.83))
        bezier3Path.addCurve(to: CGPoint(x: 432.35, y: 2.63), controlPoint1: CGPoint(x: 169.32, y: 2.45), controlPoint2: CGPoint(x: 300.84, y: 2.84))
        bezier3Path.addCurve(to: CGPoint(x: 437.51, y: 2.83), controlPoint1: CGPoint(x: 434.07, y: 2.63), controlPoint2: CGPoint(x: 435.79, y: 2.68))
        bezier3Path.addCurve(to: CGPoint(x: 437.44, y: 23.97), controlPoint1: CGPoint(x: 437.81, y: 9.87), controlPoint2: CGPoint(x: 437.85, y: 16.93))
        bezier3Path.addCurve(to: CGPoint(x: 37.89, y: 23.97), controlPoint1: CGPoint(x: 304.25, y: 23.89), controlPoint2: CGPoint(x: 171.08, y: 23.89))
        bezier3Path.addCurve(to: CGPoint(x: 37.83, y: 2.83), controlPoint1: CGPoint(x: 37.48, y: 16.93), controlPoint2: CGPoint(x: 37.52, y: 9.87))
        bezier3Path.close()
        fillColor5742.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 445.83, y: 2.83))
        bezier4Path.addCurve(to: CGPoint(x: 472.17, y: 2.83), controlPoint1: CGPoint(x: 454.6, y: 2.53), controlPoint2: CGPoint(x: 463.4, y: 2.55))
        bezier4Path.addCurve(to: CGPoint(x: 472.11, y: 23.99), controlPoint1: CGPoint(x: 472.48, y: 9.87), controlPoint2: CGPoint(x: 472.52, y: 16.95))
        bezier4Path.addCurve(to: CGPoint(x: 445.89, y: 23.97), controlPoint1: CGPoint(x: 463.36, y: 23.91), controlPoint2: CGPoint(x: 454.63, y: 23.89))
        bezier4Path.addCurve(to: CGPoint(x: 445.83, y: 2.83), controlPoint1: CGPoint(x: 445.48, y: 16.93), controlPoint2: CGPoint(x: 445.52, y: 9.87))
        bezier4Path.close()
        fillColor5742.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 3.24, y: 265.53))
        bezier5Path.addCurve(to: CGPoint(x: 29.43, y: 265.53), controlPoint1: CGPoint(x: 11.96, y: 265.92), controlPoint2: CGPoint(x: 20.71, y: 265.92))
        bezier5Path.addCurve(to: CGPoint(x: 29.65, y: 361.33), controlPoint1: CGPoint(x: 29.91, y: 297.45), controlPoint2: CGPoint(x: 29.53, y: 329.4))
        bezier5Path.addCurve(to: CGPoint(x: 29.64, y: 773.33), controlPoint1: CGPoint(x: 29.65, y: 498.67), controlPoint2: CGPoint(x: 29.65, y: 636))
        bezier5Path.addCurve(to: CGPoint(x: 78.65, y: 880.35), controlPoint1: CGPoint(x: 30.29, y: 813.76), controlPoint2: CGPoint(x: 48.89, y: 853.17))
        bezier5Path.addCurve(to: CGPoint(x: 180.33, y: 920.04), controlPoint1: CGPoint(x: 106.05, y: 905.55), controlPoint2: CGPoint(x: 142.99, y: 920.51))
        bezier5Path.addCurve(to: CGPoint(x: 300.35, y: 920), controlPoint1: CGPoint(x: 220.33, y: 919.99), controlPoint2: CGPoint(x: 260.33, y: 920.05))
        bezier5Path.addCurve(to: CGPoint(x: 417.36, y: 857.01), controlPoint1: CGPoint(x: 346.36, y: 918.81), controlPoint2: CGPoint(x: 390.75, y: 894.41))
        bezier5Path.addCurve(to: CGPoint(x: 445.68, y: 773.33), controlPoint1: CGPoint(x: 434.91, y: 832.83), controlPoint2: CGPoint(x: 445.16, y: 803.25))
        bezier5Path.addCurve(to: CGPoint(x: 445.68, y: 364), controlPoint1: CGPoint(x: 445.68, y: 636.89), controlPoint2: CGPoint(x: 445.69, y: 500.44))
        bezier5Path.addCurve(to: CGPoint(x: 445.89, y: 265.53), controlPoint1: CGPoint(x: 445.8, y: 331.19), controlPoint2: CGPoint(x: 445.44, y: 298.35))
        bezier5Path.addCurve(to: CGPoint(x: 472.11, y: 265.53), controlPoint1: CGPoint(x: 454.63, y: 265.93), controlPoint2: CGPoint(x: 463.37, y: 265.93))
        bezier5Path.addCurve(to: CGPoint(x: 472.32, y: 472), controlPoint1: CGPoint(x: 472.59, y: 334.35), controlPoint2: CGPoint(x: 472.19, y: 403.17))
        bezier5Path.addCurve(to: CGPoint(x: 472.32, y: 710.67), controlPoint1: CGPoint(x: 472.31, y: 551.56), controlPoint2: CGPoint(x: 472.32, y: 631.11))
        bezier5Path.addCurve(to: CGPoint(x: 471.89, y: 782.8), controlPoint1: CGPoint(x: 472.15, y: 734.71), controlPoint2: CGPoint(x: 472.72, y: 758.77))
        bezier5Path.addCurve(to: CGPoint(x: 451.11, y: 853.39), controlPoint1: CGPoint(x: 469.89, y: 807.41), controlPoint2: CGPoint(x: 462.88, y: 831.65))
        bezier5Path.addCurve(to: CGPoint(x: 349.17, y: 938.19), controlPoint1: CGPoint(x: 429.61, y: 893.25), controlPoint2: CGPoint(x: 392.41, y: 924.47))
        bezier5Path.addCurve(to: CGPoint(x: 299.03, y: 946.52), controlPoint1: CGPoint(x: 332.95, y: 943.17), controlPoint2: CGPoint(x: 316.05, y: 946.55))
        bezier5Path.addCurve(to: CGPoint(x: 208.33, y: 946.65), controlPoint1: CGPoint(x: 268.8, y: 946.83), controlPoint2: CGPoint(x: 238.56, y: 946.56))
        bezier5Path.addCurve(to: CGPoint(x: 150.91, y: 944.2), controlPoint1: CGPoint(x: 189.19, y: 946.47), controlPoint2: CGPoint(x: 169.87, y: 947.52))
        bezier5Path.addCurve(to: CGPoint(x: 45.44, y: 884.21), controlPoint1: CGPoint(x: 110.12, y: 937.48), controlPoint2: CGPoint(x: 72.11, y: 915.79))
        bezier5Path.addCurve(to: CGPoint(x: 3.37, y: 781.45), controlPoint1: CGPoint(x: 20.76, y: 855.73), controlPoint2: CGPoint(x: 5.97, y: 818.99))
        bezier5Path.addCurve(to: CGPoint(x: 3.01, y: 689.33), controlPoint1: CGPoint(x: 2.61, y: 750.76), controlPoint2: CGPoint(x: 3.2, y: 720.04))
        bezier5Path.addCurve(to: CGPoint(x: 3.01, y: 346.67), controlPoint1: CGPoint(x: 3.01, y: 575.11), controlPoint2: CGPoint(x: 3.01, y: 460.89))
        bezier5Path.addCurve(to: CGPoint(x: 3.24, y: 265.53), controlPoint1: CGPoint(x: 3.15, y: 319.63), controlPoint2: CGPoint(x: 2.77, y: 292.56))
        bezier5Path.close()
        fillColor5742.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 37.91, y: 265.53))
        bezier6Path.addCurve(to: CGPoint(x: 65.65, y: 265.77), controlPoint1: CGPoint(x: 47.15, y: 265.97), controlPoint2: CGPoint(x: 56.4, y: 265.75))
        bezier6Path.addCurve(to: CGPoint(x: 312.33, y: 265.79), controlPoint1: CGPoint(x: 147.88, y: 265.79), controlPoint2: CGPoint(x: 230.11, y: 265.79))
        bezier6Path.addCurve(to: CGPoint(x: 437.44, y: 265.55), controlPoint1: CGPoint(x: 354.03, y: 265.63), controlPoint2: CGPoint(x: 395.73, y: 266.09))
        bezier6Path.addCurve(to: CGPoint(x: 437.65, y: 476), controlPoint1: CGPoint(x: 437.93, y: 335.68), controlPoint2: CGPoint(x: 437.51, y: 405.85))
        bezier6Path.addCurve(to: CGPoint(x: 437.64, y: 766.67), controlPoint1: CGPoint(x: 437.64, y: 572.89), controlPoint2: CGPoint(x: 437.68, y: 669.77))
        bezier6Path.addCurve(to: CGPoint(x: 422.32, y: 832.55), controlPoint1: CGPoint(x: 437.44, y: 789.4), controlPoint2: CGPoint(x: 432.8, y: 812.25))
        bezier6Path.addCurve(to: CGPoint(x: 309.59, y: 910.87), controlPoint1: CGPoint(x: 401.32, y: 875.55), controlPoint2: CGPoint(x: 357.27, y: 906.32))
        bezier6Path.addCurve(to: CGPoint(x: 269.67, y: 911.99), controlPoint1: CGPoint(x: 296.33, y: 912.45), controlPoint2: CGPoint(x: 282.97, y: 911.89))
        bezier6Path.addCurve(to: CGPoint(x: 205.67, y: 911.99), controlPoint1: CGPoint(x: 248.33, y: 911.97), controlPoint2: CGPoint(x: 227, y: 911.99))
        bezier6Path.addCurve(to: CGPoint(x: 165.73, y: 910.87), controlPoint1: CGPoint(x: 192.36, y: 911.91), controlPoint2: CGPoint(x: 179, y: 912.44))
        bezier6Path.addCurve(to: CGPoint(x: 53, y: 832.55), controlPoint1: CGPoint(x: 118.05, y: 906.32), controlPoint2: CGPoint(x: 74.01, y: 875.55))
        bezier6Path.addCurve(to: CGPoint(x: 37.68, y: 765.33), controlPoint1: CGPoint(x: 42.33, y: 811.85), controlPoint2: CGPoint(x: 37.73, y: 788.51))
        bezier6Path.addCurve(to: CGPoint(x: 37.68, y: 313.33), controlPoint1: CGPoint(x: 37.68, y: 614.67), controlPoint2: CGPoint(x: 37.68, y: 464))
        bezier6Path.addCurve(to: CGPoint(x: 37.91, y: 265.53), controlPoint1: CGPoint(x: 37.8, y: 297.4), controlPoint2: CGPoint(x: 37.47, y: 281.45))
        bezier6Path.close()
        fillColor5742.setFill()
        bezier6Path.fill()




        //// #d67472ff
        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 32.45, y: 2.69))
        bezier7Path.addCurve(to: CGPoint(x: 34.88, y: 2.69), controlPoint1: CGPoint(x: 33.05, y: 2.69), controlPoint2: CGPoint(x: 34.27, y: 2.69))
        bezier7Path.addCurve(to: CGPoint(x: 34.84, y: 35.99), controlPoint1: CGPoint(x: 35.09, y: 13.77), controlPoint2: CGPoint(x: 35.16, y: 24.89))
        bezier7Path.addCurve(to: CGPoint(x: 32.49, y: 35.99), controlPoint1: CGPoint(x: 34.25, y: 35.99), controlPoint2: CGPoint(x: 33.08, y: 35.99))
        bezier7Path.addCurve(to: CGPoint(x: 32.45, y: 2.69), controlPoint1: CGPoint(x: 32.19, y: 24.89), controlPoint2: CGPoint(x: 32.24, y: 13.77))
        bezier7Path.close()
        fillColor5743.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 440.45, y: 2.68))
        bezier8Path.addCurve(to: CGPoint(x: 442.88, y: 2.69), controlPoint1: CGPoint(x: 441.05, y: 2.68), controlPoint2: CGPoint(x: 442.28, y: 2.69))
        bezier8Path.addCurve(to: CGPoint(x: 442.84, y: 35.99), controlPoint1: CGPoint(x: 443.09, y: 13.79), controlPoint2: CGPoint(x: 443.15, y: 24.89))
        bezier8Path.addCurve(to: CGPoint(x: 440.49, y: 35.99), controlPoint1: CGPoint(x: 442.25, y: 35.99), controlPoint2: CGPoint(x: 441.08, y: 35.99))
        bezier8Path.addCurve(to: CGPoint(x: 440.45, y: 2.68), controlPoint1: CGPoint(x: 440.17, y: 24.89), controlPoint2: CGPoint(x: 440.24, y: 13.77))
        bezier8Path.close()
        fillColor5743.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 3.12, y: 59.68))
        bezier9Path.addCurve(to: CGPoint(x: 29.36, y: 60.01), controlPoint1: CGPoint(x: 11.85, y: 58.95), controlPoint2: CGPoint(x: 20.65, y: 59.17))
        bezier9Path.addCurve(to: CGPoint(x: 29.65, y: 72), controlPoint1: CGPoint(x: 29.84, y: 63.99), controlPoint2: CGPoint(x: 29.67, y: 68))
        bezier9Path.addCurve(to: CGPoint(x: 29.53, y: 199.77), controlPoint1: CGPoint(x: 29.49, y: 114.59), controlPoint2: CGPoint(x: 29.81, y: 157.19))
        bezier9Path.addCurve(to: CGPoint(x: 3.25, y: 198.65), controlPoint1: CGPoint(x: 20.88, y: 198.04), controlPoint2: CGPoint(x: 12.01, y: 198.64))
        bezier9Path.addCurve(to: CGPoint(x: 2.97, y: 193.33), controlPoint1: CGPoint(x: 3.08, y: 196.88), controlPoint2: CGPoint(x: 2.97, y: 195.11))
        bezier9Path.addCurve(to: CGPoint(x: 3.12, y: 59.68), controlPoint1: CGPoint(x: 3.16, y: 148.79), controlPoint2: CGPoint(x: 2.91, y: 104.23))
        bezier9Path.close()
        fillColor5743.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 445.8, y: 58.93))
        bezier10Path.addCurve(to: CGPoint(x: 472.21, y: 59.75), controlPoint1: CGPoint(x: 454.53, y: 61.05), controlPoint2: CGPoint(x: 463.48, y: 57.53))
        bezier10Path.addCurve(to: CGPoint(x: 472.33, y: 182.67), controlPoint1: CGPoint(x: 472.43, y: 100.71), controlPoint2: CGPoint(x: 472.2, y: 141.69))
        bezier10Path.addCurve(to: CGPoint(x: 472.07, y: 194.75), controlPoint1: CGPoint(x: 472.35, y: 186.69), controlPoint2: CGPoint(x: 472.48, y: 190.73))
        bezier10Path.addCurve(to: CGPoint(x: 445.81, y: 195.76), controlPoint1: CGPoint(x: 463.31, y: 194.97), controlPoint2: CGPoint(x: 454.49, y: 194.35))
        bezier10Path.addCurve(to: CGPoint(x: 445.8, y: 58.93), controlPoint1: CGPoint(x: 445.59, y: 150.16), controlPoint2: CGPoint(x: 445.68, y: 104.53))
        bezier10Path.close()
        fillColor5743.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 37.93, y: 59.96))
        bezier11Path.addCurve(to: CGPoint(x: 437.4, y: 59.96), controlPoint1: CGPoint(x: 171.09, y: 59.87), controlPoint2: CGPoint(x: 304.24, y: 59.85))
        bezier11Path.addCurve(to: CGPoint(x: 437.71, y: 196), controlPoint1: CGPoint(x: 437.96, y: 105.29), controlPoint2: CGPoint(x: 437.4, y: 150.65))
        bezier11Path.addCurve(to: CGPoint(x: 437.41, y: 205.21), controlPoint1: CGPoint(x: 437.72, y: 199.07), controlPoint2: CGPoint(x: 437.73, y: 202.16))
        bezier11Path.addCurve(to: CGPoint(x: 410.6, y: 204.56), controlPoint1: CGPoint(x: 428.49, y: 204.25), controlPoint2: CGPoint(x: 419.53, y: 204.55))
        bezier11Path.addCurve(to: CGPoint(x: 382.01, y: 204.2), controlPoint1: CGPoint(x: 401.07, y: 203.83), controlPoint2: CGPoint(x: 391.53, y: 204.69))
        bezier11Path.addCurve(to: CGPoint(x: 359.65, y: 204.23), controlPoint1: CGPoint(x: 374.56, y: 205.39), controlPoint2: CGPoint(x: 367.12, y: 203.92))
        bezier11Path.addCurve(to: CGPoint(x: 327.56, y: 204.59), controlPoint1: CGPoint(x: 348.99, y: 205.57), controlPoint2: CGPoint(x: 338.27, y: 204.04))
        bezier11Path.addCurve(to: CGPoint(x: 295.67, y: 204.25), controlPoint1: CGPoint(x: 316.93, y: 203.99), controlPoint2: CGPoint(x: 306.31, y: 204.51))
        bezier11Path.addCurve(to: CGPoint(x: 271.92, y: 204.44), controlPoint1: CGPoint(x: 287.76, y: 205.59), controlPoint2: CGPoint(x: 279.83, y: 203.4))
        bezier11Path.addCurve(to: CGPoint(x: 246.07, y: 204.53), controlPoint1: CGPoint(x: 263.32, y: 205.47), controlPoint2: CGPoint(x: 254.68, y: 204.15))
        bezier11Path.addCurve(to: CGPoint(x: 225.4, y: 204.32), controlPoint1: CGPoint(x: 239.16, y: 204.91), controlPoint2: CGPoint(x: 232.29, y: 203.75))
        bezier11Path.addCurve(to: CGPoint(x: 207.92, y: 204.45), controlPoint1: CGPoint(x: 219.57, y: 204.77), controlPoint2: CGPoint(x: 213.73, y: 203.65))
        bezier11Path.addCurve(to: CGPoint(x: 187.32, y: 204.37), controlPoint1: CGPoint(x: 201.05, y: 205.41), controlPoint2: CGPoint(x: 194.19, y: 203.43))
        bezier11Path.addCurve(to: CGPoint(x: 163, y: 204.51), controlPoint1: CGPoint(x: 179.24, y: 205.45), controlPoint2: CGPoint(x: 171.11, y: 204.31))
        bezier11Path.addCurve(to: CGPoint(x: 135.61, y: 204.44), controlPoint1: CGPoint(x: 153.85, y: 204.84), controlPoint2: CGPoint(x: 144.75, y: 203.77))
        bezier11Path.addCurve(to: CGPoint(x: 111.21, y: 204.33), controlPoint1: CGPoint(x: 127.47, y: 203.48), controlPoint2: CGPoint(x: 119.33, y: 205.41))
        bezier11Path.addCurve(to: CGPoint(x: 93.67, y: 204.87), controlPoint1: CGPoint(x: 105.36, y: 203.59), controlPoint2: CGPoint(x: 99.53, y: 204.92))
        bezier11Path.addCurve(to: CGPoint(x: 56.68, y: 204.23), controlPoint1: CGPoint(x: 81.35, y: 204.36), controlPoint2: CGPoint(x: 69, y: 204.63))
        bezier11Path.addCurve(to: CGPoint(x: 37.68, y: 204.97), controlPoint1: CGPoint(x: 50.35, y: 205.29), controlPoint2: CGPoint(x: 43.84, y: 202.79))
        bezier11Path.addCurve(to: CGPoint(x: 37.72, y: 80), controlPoint1: CGPoint(x: 37.68, y: 163.31), controlPoint2: CGPoint(x: 37.72, y: 121.65))
        bezier11Path.addCurve(to: CGPoint(x: 37.93, y: 59.96), controlPoint1: CGPoint(x: 37.83, y: 73.32), controlPoint2: CGPoint(x: 37.35, y: 66.61))
        bezier11Path.close()
        fillColor5743.setFill()
        bezier11Path.fill()




        //// #ca4942ff
        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 3.23, y: 23.96))
        bezier12Path.addCurve(to: CGPoint(x: 29.44, y: 23.96), controlPoint1: CGPoint(x: 11.96, y: 23.89), controlPoint2: CGPoint(x: 20.71, y: 23.89))
        bezier12Path.addCurve(to: CGPoint(x: 29.41, y: 40), controlPoint1: CGPoint(x: 29.88, y: 29.29), controlPoint2: CGPoint(x: 29.85, y: 34.67))
        bezier12Path.addCurve(to: CGPoint(x: 3.25, y: 40), controlPoint1: CGPoint(x: 20.69, y: 39.99), controlPoint2: CGPoint(x: 11.97, y: 39.99))
        bezier12Path.addCurve(to: CGPoint(x: 3.23, y: 23.96), controlPoint1: CGPoint(x: 2.81, y: 34.68), controlPoint2: CGPoint(x: 2.79, y: 29.29))
        bezier12Path.close()
        fillColor5744.setFill()
        bezier12Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: 37.89, y: 23.97))
        bezier13Path.addCurve(to: CGPoint(x: 437.44, y: 23.97), controlPoint1: CGPoint(x: 171.08, y: 23.89), controlPoint2: CGPoint(x: 304.25, y: 23.89))
        bezier13Path.addCurve(to: CGPoint(x: 437.43, y: 38.77), controlPoint1: CGPoint(x: 437.88, y: 28.89), controlPoint2: CGPoint(x: 437.85, y: 33.85))
        bezier13Path.addCurve(to: CGPoint(x: 236.33, y: 38.92), controlPoint1: CGPoint(x: 370.4, y: 39.11), controlPoint2: CGPoint(x: 303.36, y: 38.8))
        bezier13Path.addCurve(to: CGPoint(x: 37.91, y: 38.79), controlPoint1: CGPoint(x: 170.19, y: 38.81), controlPoint2: CGPoint(x: 104.04, y: 39.09))
        bezier13Path.addCurve(to: CGPoint(x: 37.89, y: 23.97), controlPoint1: CGPoint(x: 37.47, y: 33.87), controlPoint2: CGPoint(x: 37.45, y: 28.89))
        bezier13Path.close()
        fillColor5744.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 445.89, y: 23.97))
        bezier14Path.addCurve(to: CGPoint(x: 472.11, y: 23.99), controlPoint1: CGPoint(x: 454.63, y: 23.89), controlPoint2: CGPoint(x: 463.36, y: 23.91))
        bezier14Path.addCurve(to: CGPoint(x: 472.09, y: 40), controlPoint1: CGPoint(x: 472.55, y: 29.31), controlPoint2: CGPoint(x: 472.52, y: 34.68))
        bezier14Path.addCurve(to: CGPoint(x: 445.92, y: 40), controlPoint1: CGPoint(x: 463.36, y: 40.03), controlPoint2: CGPoint(x: 454.64, y: 40))
        bezier14Path.addCurve(to: CGPoint(x: 445.89, y: 23.97), controlPoint1: CGPoint(x: 445.47, y: 34.68), controlPoint2: CGPoint(x: 445.44, y: 29.29))
        bezier14Path.close()
        fillColor5744.setFill()
        bezier14Path.fill()


        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: 37.75, y: 231.63))
        bezier15Path.addCurve(to: CGPoint(x: 59.48, y: 231.55), controlPoint1: CGPoint(x: 44.96, y: 230.28), controlPoint2: CGPoint(x: 52.23, y: 232.37))
        bezier15Path.addCurve(to: CGPoint(x: 84.55, y: 231.52), controlPoint1: CGPoint(x: 67.84, y: 230.77), controlPoint2: CGPoint(x: 76.2, y: 232.09))
        bezier15Path.addCurve(to: CGPoint(x: 124.16, y: 231.33), controlPoint1: CGPoint(x: 97.72, y: 229.99), controlPoint2: CGPoint(x: 110.97, y: 232.51))
        bezier15Path.addCurve(to: CGPoint(x: 144.81, y: 231.55), controlPoint1: CGPoint(x: 131.05, y: 230.71), controlPoint2: CGPoint(x: 137.92, y: 232.23))
        bezier15Path.addCurve(to: CGPoint(x: 172.15, y: 231.32), controlPoint1: CGPoint(x: 153.92, y: 230.69), controlPoint2: CGPoint(x: 163.05, y: 232.36))
        bezier15Path.addCurve(to: CGPoint(x: 195, y: 231.45), controlPoint1: CGPoint(x: 179.75, y: 230.47), controlPoint2: CGPoint(x: 187.39, y: 231.47))
        bezier15Path.addCurve(to: CGPoint(x: 223.13, y: 231.67), controlPoint1: CGPoint(x: 204.39, y: 232.2), controlPoint2: CGPoint(x: 213.76, y: 230.48))
        bezier15Path.addCurve(to: CGPoint(x: 253.32, y: 231.64), controlPoint1: CGPoint(x: 233.19, y: 231.23), controlPoint2: CGPoint(x: 243.25, y: 231.43))
        bezier15Path.addCurve(to: CGPoint(x: 293.32, y: 231.44), controlPoint1: CGPoint(x: 266.63, y: 230), controlPoint2: CGPoint(x: 279.99, y: 232.27))
        bezier15Path.addCurve(to: CGPoint(x: 313.01, y: 231.65), controlPoint1: CGPoint(x: 299.88, y: 230.59), controlPoint2: CGPoint(x: 306.44, y: 231.97))
        bezier15Path.addCurve(to: CGPoint(x: 339.65, y: 231.59), controlPoint1: CGPoint(x: 321.89, y: 230.8), controlPoint2: CGPoint(x: 330.77, y: 231.88))
        bezier15Path.addCurve(to: CGPoint(x: 382.04, y: 231.21), controlPoint1: CGPoint(x: 353.75, y: 229.91), controlPoint2: CGPoint(x: 367.93, y: 232.65))
        bezier15Path.addCurve(to: CGPoint(x: 397.32, y: 231.68), controlPoint1: CGPoint(x: 387.15, y: 230.91), controlPoint2: CGPoint(x: 392.21, y: 231.91))
        bezier15Path.addCurve(to: CGPoint(x: 437.4, y: 230.59), controlPoint1: CGPoint(x: 410.68, y: 230.68), controlPoint2: CGPoint(x: 424.08, y: 232.61))
        bezier15Path.addCurve(to: CGPoint(x: 437.44, y: 265.55), controlPoint1: CGPoint(x: 437.67, y: 242.23), controlPoint2: CGPoint(x: 437.89, y: 253.91))
        bezier15Path.addCurve(to: CGPoint(x: 312.33, y: 265.79), controlPoint1: CGPoint(x: 395.73, y: 266.09), controlPoint2: CGPoint(x: 354.03, y: 265.63))
        bezier15Path.addCurve(to: CGPoint(x: 65.65, y: 265.77), controlPoint1: CGPoint(x: 230.11, y: 265.79), controlPoint2: CGPoint(x: 147.88, y: 265.79))
        bezier15Path.addCurve(to: CGPoint(x: 37.91, y: 265.53), controlPoint1: CGPoint(x: 56.4, y: 265.75), controlPoint2: CGPoint(x: 47.15, y: 265.97))
        bezier15Path.addCurve(to: CGPoint(x: 37.75, y: 231.63), controlPoint1: CGPoint(x: 37.35, y: 254.25), controlPoint2: CGPoint(x: 37.85, y: 242.92))
        bezier15Path.close()
        fillColor5744.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 3.15, y: 234.43))
        bezier16Path.addCurve(to: CGPoint(x: 29.4, y: 233.37), controlPoint1: CGPoint(x: 11.81, y: 232.84), controlPoint2: CGPoint(x: 20.65, y: 233.47))
        bezier16Path.addCurve(to: CGPoint(x: 29.43, y: 265.53), controlPoint1: CGPoint(x: 29.71, y: 244.08), controlPoint2: CGPoint(x: 29.89, y: 254.83))
        bezier16Path.addCurve(to: CGPoint(x: 3.24, y: 265.53), controlPoint1: CGPoint(x: 20.71, y: 265.92), controlPoint2: CGPoint(x: 11.96, y: 265.92))
        bezier16Path.addCurve(to: CGPoint(x: 3.15, y: 234.43), controlPoint1: CGPoint(x: 2.71, y: 255.17), controlPoint2: CGPoint(x: 3.09, y: 244.79))
        bezier16Path.close()
        fillColor5744.setFill()
        bezier16Path.fill()


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 445.96, y: 241.23))
        bezier17Path.addCurve(to: CGPoint(x: 472.23, y: 240.96), controlPoint1: CGPoint(x: 454.68, y: 240.39), controlPoint2: CGPoint(x: 463.49, y: 240.13))
        bezier17Path.addCurve(to: CGPoint(x: 472.11, y: 265.53), controlPoint1: CGPoint(x: 472.33, y: 249.15), controlPoint2: CGPoint(x: 472.57, y: 257.35))
        bezier17Path.addCurve(to: CGPoint(x: 445.89, y: 265.53), controlPoint1: CGPoint(x: 463.37, y: 265.93), controlPoint2: CGPoint(x: 454.63, y: 265.93))
        bezier17Path.addCurve(to: CGPoint(x: 445.96, y: 241.23), controlPoint1: CGPoint(x: 445.47, y: 257.45), controlPoint2: CGPoint(x: 445.51, y: 249.31))
        bezier17Path.close()
        fillColor5744.setFill()
        bezier17Path.fill()




        //// #efd18bff
        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: 32.49, y: 35.99))
        bezier18Path.addCurve(to: CGPoint(x: 34.84, y: 35.99), controlPoint1: CGPoint(x: 33.08, y: 35.99), controlPoint2: CGPoint(x: 34.25, y: 35.99))
        bezier18Path.addCurve(to: CGPoint(x: 35, y: 461.33), controlPoint1: CGPoint(x: 35.04, y: 177.76), controlPoint2: CGPoint(x: 34.99, y: 319.55))
        bezier18Path.addCurve(to: CGPoint(x: 34.81, y: 521.31), controlPoint1: CGPoint(x: 34.87, y: 481.32), controlPoint2: CGPoint(x: 35.27, y: 501.32))
        bezier18Path.addCurve(to: CGPoint(x: 32.51, y: 521.28), controlPoint1: CGPoint(x: 34.24, y: 521.29), controlPoint2: CGPoint(x: 33.09, y: 521.29))
        bezier18Path.addCurve(to: CGPoint(x: 32.33, y: 416), controlPoint1: CGPoint(x: 32.09, y: 486.2), controlPoint2: CGPoint(x: 32.47, y: 451.09))
        bezier18Path.addCurve(to: CGPoint(x: 32.49, y: 35.99), controlPoint1: CGPoint(x: 32.35, y: 289.33), controlPoint2: CGPoint(x: 32.32, y: 162.64))
        bezier18Path.close()
        fillColor5745.setFill()
        bezier18Path.fill()


        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: 440.49, y: 35.99))
        bezier19Path.addCurve(to: CGPoint(x: 442.84, y: 35.99), controlPoint1: CGPoint(x: 441.08, y: 35.99), controlPoint2: CGPoint(x: 442.25, y: 35.99))
        bezier19Path.addCurve(to: CGPoint(x: 443, y: 349.33), controlPoint1: CGPoint(x: 443, y: 140.43), controlPoint2: CGPoint(x: 442.97, y: 244.89))
        bezier19Path.addCurve(to: CGPoint(x: 442.83, y: 521.29), controlPoint1: CGPoint(x: 442.88, y: 406.65), controlPoint2: CGPoint(x: 443.24, y: 463.99))
        bezier19Path.addCurve(to: CGPoint(x: 440.51, y: 521.29), controlPoint1: CGPoint(x: 442.24, y: 521.29), controlPoint2: CGPoint(x: 441.09, y: 521.29))
        bezier19Path.addCurve(to: CGPoint(x: 440.36, y: 52), controlPoint1: CGPoint(x: 440.03, y: 364.88), controlPoint2: CGPoint(x: 440.57, y: 208.43))
        bezier19Path.addCurve(to: CGPoint(x: 440.49, y: 35.99), controlPoint1: CGPoint(x: 440.39, y: 46.67), controlPoint2: CGPoint(x: 440.12, y: 41.32))
        bezier19Path.close()
        fillColor5745.setFill()
        bezier19Path.fill()


        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: 37.53, y: 800.71))
        bezier20Path.addCurve(to: CGPoint(x: 40.55, y: 809.19), controlPoint1: CGPoint(x: 39.13, y: 803.28), controlPoint2: CGPoint(x: 39.76, y: 806.28))
        bezier20Path.addCurve(to: CGPoint(x: 133.45, y: 906.96), controlPoint1: CGPoint(x: 53.17, y: 854.31), controlPoint2: CGPoint(x: 89.13, y: 891.89))
        bezier20Path.addCurve(to: CGPoint(x: 179, y: 914.68), controlPoint1: CGPoint(x: 148.07, y: 911.99), controlPoint2: CGPoint(x: 163.51, y: 914.84))
        bezier20Path.addCurve(to: CGPoint(x: 300.33, y: 914.64), controlPoint1: CGPoint(x: 219.44, y: 914.64), controlPoint2: CGPoint(x: 259.89, y: 914.71))
        bezier20Path.addCurve(to: CGPoint(x: 415.72, y: 850.08), controlPoint1: CGPoint(x: 346.25, y: 913.45), controlPoint2: CGPoint(x: 390.35, y: 888.17))
        bezier20Path.addCurve(to: CGPoint(x: 433.63, y: 813.23), controlPoint1: CGPoint(x: 423.37, y: 838.71), controlPoint2: CGPoint(x: 429.44, y: 826.27))
        bezier20Path.addCurve(to: CGPoint(x: 437.8, y: 800.71), controlPoint1: CGPoint(x: 435.05, y: 809.07), controlPoint2: CGPoint(x: 435.52, y: 804.53))
        bezier20Path.addCurve(to: CGPoint(x: 438.39, y: 802.93), controlPoint1: CGPoint(x: 437.95, y: 801.27), controlPoint2: CGPoint(x: 438.24, y: 802.37))
        bezier20Path.addCurve(to: CGPoint(x: 437.33, y: 808.87), controlPoint1: CGPoint(x: 438.6, y: 804.96), controlPoint2: CGPoint(x: 437.8, y: 806.92))
        bezier20Path.addCurve(to: CGPoint(x: 397.24, y: 875.6), controlPoint1: CGPoint(x: 430.08, y: 834.08), controlPoint2: CGPoint(x: 416.19, y: 857.43))
        bezier20Path.addCurve(to: CGPoint(x: 331.51, y: 912.43), controlPoint1: CGPoint(x: 378.95, y: 893.17), controlPoint2: CGPoint(x: 356.08, y: 906.09))
        bezier20Path.addCurve(to: CGPoint(x: 255, y: 917.33), controlPoint1: CGPoint(x: 306.56, y: 919.13), controlPoint2: CGPoint(x: 280.52, y: 916.96))
        bezier20Path.addCurve(to: CGPoint(x: 178.96, y: 917.21), controlPoint1: CGPoint(x: 229.65, y: 917.25), controlPoint2: CGPoint(x: 204.31, y: 917.49))
        bezier20Path.addCurve(to: CGPoint(x: 106.19, y: 896.8), controlPoint1: CGPoint(x: 153.49, y: 916.63), controlPoint2: CGPoint(x: 128.09, y: 909.95))
        bezier20Path.addCurve(to: CGPoint(x: 37.71, y: 807.84), controlPoint1: CGPoint(x: 72.85, y: 877.64), controlPoint2: CGPoint(x: 47.95, y: 844.81))
        bezier20Path.addCurve(to: CGPoint(x: 36.93, y: 802.93), controlPoint1: CGPoint(x: 37.33, y: 806.21), controlPoint2: CGPoint(x: 36.72, y: 804.59))
        bezier20Path.addCurve(to: CGPoint(x: 37.53, y: 800.71), controlPoint1: CGPoint(x: 37.08, y: 802.37), controlPoint2: CGPoint(x: 37.39, y: 801.25))
        bezier20Path.close()
        fillColor5745.setFill()
        bezier20Path.fill()




        //// #d16359ff
        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 37.91, y: 38.79))
        bezier21Path.addCurve(to: CGPoint(x: 236.33, y: 38.92), controlPoint1: CGPoint(x: 104.04, y: 39.09), controlPoint2: CGPoint(x: 170.19, y: 38.81))
        bezier21Path.addCurve(to: CGPoint(x: 437.43, y: 38.77), controlPoint1: CGPoint(x: 303.36, y: 38.8), controlPoint2: CGPoint(x: 370.4, y: 39.11))
        bezier21Path.addCurve(to: CGPoint(x: 437.4, y: 59.96), controlPoint1: CGPoint(x: 437.88, y: 45.83), controlPoint2: CGPoint(x: 437.76, y: 52.91))
        bezier21Path.addCurve(to: CGPoint(x: 37.93, y: 59.96), controlPoint1: CGPoint(x: 304.24, y: 59.85), controlPoint2: CGPoint(x: 171.09, y: 59.87))
        bezier21Path.addCurve(to: CGPoint(x: 37.91, y: 38.79), controlPoint1: CGPoint(x: 37.57, y: 52.91), controlPoint2: CGPoint(x: 37.44, y: 45.83))
        bezier21Path.close()
        fillColor5746.setFill()
        bezier21Path.fill()


        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        bezier22Path.move(to: CGPoint(x: 3.25, y: 40))
        bezier22Path.addCurve(to: CGPoint(x: 29.41, y: 40), controlPoint1: CGPoint(x: 11.97, y: 39.99), controlPoint2: CGPoint(x: 20.69, y: 39.99))
        bezier22Path.addCurve(to: CGPoint(x: 29.36, y: 60.01), controlPoint1: CGPoint(x: 29.88, y: 46.65), controlPoint2: CGPoint(x: 29.79, y: 53.36))
        bezier22Path.addCurve(to: CGPoint(x: 3.12, y: 59.68), controlPoint1: CGPoint(x: 20.65, y: 59.17), controlPoint2: CGPoint(x: 11.85, y: 58.95))
        bezier22Path.addCurve(to: CGPoint(x: 3.25, y: 40), controlPoint1: CGPoint(x: 2.96, y: 53.12), controlPoint2: CGPoint(x: 2.79, y: 46.55))
        bezier22Path.close()
        fillColor5746.setFill()
        bezier22Path.fill()


        //// Bezier 23 Drawing
        let bezier23Path = UIBezierPath()
        bezier23Path.move(to: CGPoint(x: 445.92, y: 40))
        bezier23Path.addCurve(to: CGPoint(x: 472.09, y: 40), controlPoint1: CGPoint(x: 454.64, y: 40), controlPoint2: CGPoint(x: 463.36, y: 40.03))
        bezier23Path.addCurve(to: CGPoint(x: 472.21, y: 59.75), controlPoint1: CGPoint(x: 472.55, y: 46.57), controlPoint2: CGPoint(x: 472.33, y: 53.17))
        bezier23Path.addCurve(to: CGPoint(x: 445.8, y: 58.93), controlPoint1: CGPoint(x: 463.48, y: 57.53), controlPoint2: CGPoint(x: 454.53, y: 61.05))
        bezier23Path.addCurve(to: CGPoint(x: 445.92, y: 40), controlPoint1: CGPoint(x: 445.6, y: 52.63), controlPoint2: CGPoint(x: 445.45, y: 46.29))
        bezier23Path.close()
        fillColor5746.setFill()
        bezier23Path.fill()


        //// Bezier 24 Drawing
        let bezier24Path = UIBezierPath()
        bezier24Path.move(to: CGPoint(x: 445.81, y: 195.76))
        bezier24Path.addCurve(to: CGPoint(x: 472.07, y: 194.75), controlPoint1: CGPoint(x: 454.49, y: 194.35), controlPoint2: CGPoint(x: 463.31, y: 194.97))
        bezier24Path.addCurve(to: CGPoint(x: 472.23, y: 240.96), controlPoint1: CGPoint(x: 472.47, y: 210.15), controlPoint2: CGPoint(x: 472.4, y: 225.56))
        bezier24Path.addCurve(to: CGPoint(x: 445.96, y: 241.23), controlPoint1: CGPoint(x: 463.49, y: 240.13), controlPoint2: CGPoint(x: 454.68, y: 240.39))
        bezier24Path.addCurve(to: CGPoint(x: 445.81, y: 195.76), controlPoint1: CGPoint(x: 445.29, y: 226.09), controlPoint2: CGPoint(x: 445.79, y: 210.91))
        bezier24Path.close()
        fillColor5746.setFill()
        bezier24Path.fill()


        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 3.25, y: 198.65))
        bezier25Path.addCurve(to: CGPoint(x: 29.53, y: 199.77), controlPoint1: CGPoint(x: 12.01, y: 198.64), controlPoint2: CGPoint(x: 20.88, y: 198.04))
        bezier25Path.addCurve(to: CGPoint(x: 29.4, y: 233.37), controlPoint1: CGPoint(x: 29.6, y: 210.96), controlPoint2: CGPoint(x: 29.99, y: 222.19))
        bezier25Path.addCurve(to: CGPoint(x: 3.15, y: 234.43), controlPoint1: CGPoint(x: 20.65, y: 233.47), controlPoint2: CGPoint(x: 11.81, y: 232.84))
        bezier25Path.addCurve(to: CGPoint(x: 3.25, y: 198.65), controlPoint1: CGPoint(x: 2.89, y: 222.51), controlPoint2: CGPoint(x: 2.88, y: 210.56))
        bezier25Path.close()
        fillColor5746.setFill()
        bezier25Path.fill()


        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        bezier26Path.move(to: CGPoint(x: 37.68, y: 204.97))
        bezier26Path.addCurve(to: CGPoint(x: 56.68, y: 204.23), controlPoint1: CGPoint(x: 43.84, y: 202.79), controlPoint2: CGPoint(x: 50.35, y: 205.29))
        bezier26Path.addCurve(to: CGPoint(x: 93.67, y: 204.87), controlPoint1: CGPoint(x: 69, y: 204.63), controlPoint2: CGPoint(x: 81.35, y: 204.36))
        bezier26Path.addCurve(to: CGPoint(x: 111.21, y: 204.33), controlPoint1: CGPoint(x: 99.53, y: 204.92), controlPoint2: CGPoint(x: 105.36, y: 203.59))
        bezier26Path.addCurve(to: CGPoint(x: 135.61, y: 204.44), controlPoint1: CGPoint(x: 119.33, y: 205.41), controlPoint2: CGPoint(x: 127.47, y: 203.48))
        bezier26Path.addCurve(to: CGPoint(x: 163, y: 204.51), controlPoint1: CGPoint(x: 144.75, y: 203.77), controlPoint2: CGPoint(x: 153.85, y: 204.84))
        bezier26Path.addCurve(to: CGPoint(x: 187.32, y: 204.37), controlPoint1: CGPoint(x: 171.11, y: 204.31), controlPoint2: CGPoint(x: 179.24, y: 205.45))
        bezier26Path.addCurve(to: CGPoint(x: 207.92, y: 204.45), controlPoint1: CGPoint(x: 194.19, y: 203.43), controlPoint2: CGPoint(x: 201.05, y: 205.41))
        bezier26Path.addCurve(to: CGPoint(x: 225.4, y: 204.32), controlPoint1: CGPoint(x: 213.73, y: 203.65), controlPoint2: CGPoint(x: 219.57, y: 204.77))
        bezier26Path.addCurve(to: CGPoint(x: 246.07, y: 204.53), controlPoint1: CGPoint(x: 232.29, y: 203.75), controlPoint2: CGPoint(x: 239.16, y: 204.91))
        bezier26Path.addCurve(to: CGPoint(x: 271.92, y: 204.44), controlPoint1: CGPoint(x: 254.68, y: 204.15), controlPoint2: CGPoint(x: 263.32, y: 205.47))
        bezier26Path.addCurve(to: CGPoint(x: 295.67, y: 204.25), controlPoint1: CGPoint(x: 279.83, y: 203.4), controlPoint2: CGPoint(x: 287.76, y: 205.59))
        bezier26Path.addCurve(to: CGPoint(x: 327.56, y: 204.59), controlPoint1: CGPoint(x: 306.31, y: 204.51), controlPoint2: CGPoint(x: 316.93, y: 203.99))
        bezier26Path.addCurve(to: CGPoint(x: 359.65, y: 204.23), controlPoint1: CGPoint(x: 338.27, y: 204.04), controlPoint2: CGPoint(x: 348.99, y: 205.57))
        bezier26Path.addCurve(to: CGPoint(x: 382.01, y: 204.2), controlPoint1: CGPoint(x: 367.12, y: 203.92), controlPoint2: CGPoint(x: 374.56, y: 205.39))
        bezier26Path.addCurve(to: CGPoint(x: 410.6, y: 204.56), controlPoint1: CGPoint(x: 391.53, y: 204.69), controlPoint2: CGPoint(x: 401.07, y: 203.83))
        bezier26Path.addCurve(to: CGPoint(x: 437.41, y: 205.21), controlPoint1: CGPoint(x: 419.53, y: 204.55), controlPoint2: CGPoint(x: 428.49, y: 204.25))
        bezier26Path.addCurve(to: CGPoint(x: 437.4, y: 230.59), controlPoint1: CGPoint(x: 437.79, y: 213.65), controlPoint2: CGPoint(x: 437.92, y: 222.15))
        bezier26Path.addCurve(to: CGPoint(x: 397.32, y: 231.68), controlPoint1: CGPoint(x: 424.08, y: 232.61), controlPoint2: CGPoint(x: 410.68, y: 230.68))
        bezier26Path.addCurve(to: CGPoint(x: 382.04, y: 231.21), controlPoint1: CGPoint(x: 392.21, y: 231.91), controlPoint2: CGPoint(x: 387.15, y: 230.91))
        bezier26Path.addCurve(to: CGPoint(x: 339.65, y: 231.59), controlPoint1: CGPoint(x: 367.93, y: 232.65), controlPoint2: CGPoint(x: 353.75, y: 229.91))
        bezier26Path.addCurve(to: CGPoint(x: 313.01, y: 231.65), controlPoint1: CGPoint(x: 330.77, y: 231.88), controlPoint2: CGPoint(x: 321.89, y: 230.8))
        bezier26Path.addCurve(to: CGPoint(x: 293.32, y: 231.44), controlPoint1: CGPoint(x: 306.44, y: 231.97), controlPoint2: CGPoint(x: 299.88, y: 230.59))
        bezier26Path.addCurve(to: CGPoint(x: 253.32, y: 231.64), controlPoint1: CGPoint(x: 279.99, y: 232.27), controlPoint2: CGPoint(x: 266.63, y: 230))
        bezier26Path.addCurve(to: CGPoint(x: 223.13, y: 231.67), controlPoint1: CGPoint(x: 243.25, y: 231.43), controlPoint2: CGPoint(x: 233.19, y: 231.23))
        bezier26Path.addCurve(to: CGPoint(x: 195, y: 231.45), controlPoint1: CGPoint(x: 213.76, y: 230.48), controlPoint2: CGPoint(x: 204.39, y: 232.2))
        bezier26Path.addCurve(to: CGPoint(x: 172.15, y: 231.32), controlPoint1: CGPoint(x: 187.39, y: 231.47), controlPoint2: CGPoint(x: 179.75, y: 230.47))
        bezier26Path.addCurve(to: CGPoint(x: 144.81, y: 231.55), controlPoint1: CGPoint(x: 163.05, y: 232.36), controlPoint2: CGPoint(x: 153.92, y: 230.69))
        bezier26Path.addCurve(to: CGPoint(x: 124.16, y: 231.33), controlPoint1: CGPoint(x: 137.92, y: 232.23), controlPoint2: CGPoint(x: 131.05, y: 230.71))
        bezier26Path.addCurve(to: CGPoint(x: 84.55, y: 231.52), controlPoint1: CGPoint(x: 110.97, y: 232.51), controlPoint2: CGPoint(x: 97.72, y: 229.99))
        bezier26Path.addCurve(to: CGPoint(x: 59.48, y: 231.55), controlPoint1: CGPoint(x: 76.2, y: 232.09), controlPoint2: CGPoint(x: 67.84, y: 230.77))
        bezier26Path.addCurve(to: CGPoint(x: 37.75, y: 231.63), controlPoint1: CGPoint(x: 52.23, y: 232.37), controlPoint2: CGPoint(x: 44.96, y: 230.28))
        bezier26Path.addCurve(to: CGPoint(x: 37.68, y: 204.97), controlPoint1: CGPoint(x: 37.56, y: 222.75), controlPoint2: CGPoint(x: 37.67, y: 213.85))
        bezier26Path.close()
        fillColor5746.setFill()
        bezier26Path.fill()


        //// Bezier 27 Drawing
        let bezier27Path = UIBezierPath()
        bezier27Path.move(to: CGPoint(x: 32.51, y: 521.28))
        bezier27Path.addCurve(to: CGPoint(x: 34.81, y: 521.31), controlPoint1: CGPoint(x: 33.09, y: 521.29), controlPoint2: CGPoint(x: 34.24, y: 521.29))
        bezier27Path.addCurve(to: CGPoint(x: 34.93, y: 754.67), controlPoint1: CGPoint(x: 35.17, y: 599.08), controlPoint2: CGPoint(x: 34.97, y: 676.88))
        bezier27Path.addCurve(to: CGPoint(x: 36.4, y: 790.67), controlPoint1: CGPoint(x: 35.05, y: 766.67), controlPoint2: CGPoint(x: 34.21, y: 778.79))
        bezier27Path.addCurve(to: CGPoint(x: 37.53, y: 800.71), controlPoint1: CGPoint(x: 36.81, y: 793.99), controlPoint2: CGPoint(x: 37.85, y: 797.32))
        bezier27Path.addCurve(to: CGPoint(x: 36.93, y: 802.93), controlPoint1: CGPoint(x: 37.39, y: 801.25), controlPoint2: CGPoint(x: 37.08, y: 802.37))
        bezier27Path.addCurve(to: CGPoint(x: 32.37, y: 741.33), controlPoint1: CGPoint(x: 31.29, y: 782.93), controlPoint2: CGPoint(x: 32.6, y: 761.88))
        bezier27Path.addCurve(to: CGPoint(x: 32.51, y: 521.28), controlPoint1: CGPoint(x: 32.37, y: 667.99), controlPoint2: CGPoint(x: 32.16, y: 594.63))
        bezier27Path.close()
        fillColor5746.setFill()
        bezier27Path.fill()


        //// Bezier 28 Drawing
        let bezier28Path = UIBezierPath()
        bezier28Path.move(to: CGPoint(x: 440.51, y: 521.29))
        bezier28Path.addCurve(to: CGPoint(x: 442.83, y: 521.29), controlPoint1: CGPoint(x: 441.09, y: 521.29), controlPoint2: CGPoint(x: 442.24, y: 521.29))
        bezier28Path.addCurve(to: CGPoint(x: 442.96, y: 742.67), controlPoint1: CGPoint(x: 443.17, y: 595.08), controlPoint2: CGPoint(x: 442.96, y: 668.87))
        bezier28Path.addCurve(to: CGPoint(x: 438.39, y: 802.93), controlPoint1: CGPoint(x: 442.77, y: 762.77), controlPoint2: CGPoint(x: 443.93, y: 783.37))
        bezier28Path.addCurve(to: CGPoint(x: 437.8, y: 800.71), controlPoint1: CGPoint(x: 438.24, y: 802.37), controlPoint2: CGPoint(x: 437.95, y: 801.27))
        bezier28Path.addCurve(to: CGPoint(x: 440.39, y: 776.01), controlPoint1: CGPoint(x: 437.97, y: 792.45), controlPoint2: CGPoint(x: 440.56, y: 784.35))
        bezier28Path.addCurve(to: CGPoint(x: 440.51, y: 521.29), controlPoint1: CGPoint(x: 440.41, y: 691.11), controlPoint2: CGPoint(x: 440.12, y: 606.2))
        bezier28Path.close()
        fillColor5746.setFill()
        bezier28Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBadge2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 473, height: 946), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 473, height: 946), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 473, y: resizedFrame.height / 946)


        //// Color Declarations
        let fillColor5747 = UIColor(red: 0.796, green: 0.286, blue: 0.243, alpha: 1.000)
        let fillColor5748 = UIColor(red: 0.886, green: 0.616, blue: 0.345, alpha: 1.000)
        let fillColor5749 = UIColor(red: 0.667, green: 0.200, blue: 0.192, alpha: 1.000)
        let fillColor5750 = UIColor(red: 0.867, green: 0.549, blue: 0.286, alpha: 1.000)
        let fillColor5751 = UIColor(red: 0.914, green: 0.694, blue: 0.435, alpha: 1.000)
        let fillColor5752 = UIColor(red: 0.796, green: 0.282, blue: 0.235, alpha: 1.000)
        let fillColor5753 = UIColor(red: 0.792, green: 0.259, blue: 0.216, alpha: 1.000)
        let fillColor5754 = UIColor(red: 0.973, green: 0.894, blue: 0.655, alpha: 1.000)
        let fillColor5755 = UIColor(red: 0.800, green: 0.306, blue: 0.255, alpha: 1.000)
        let fillColor5756 = UIColor(red: 0.839, green: 0.459, blue: 0.451, alpha: 1.000)
        let fillColor5757 = UIColor(red: 0.824, green: 0.404, blue: 0.357, alpha: 1.000)
        let fillColor5758 = UIColor(red: 0.812, green: 0.357, blue: 0.310, alpha: 1.000)
        let fillColor5759 = UIColor(red: 0.976, green: 0.906, blue: 0.682, alpha: 1.000)
        let fillColor5760 = UIColor(red: 0.831, green: 0.431, blue: 0.396, alpha: 1.000)
        let fillColor5761 = UIColor(red: 0.831, green: 0.435, blue: 0.412, alpha: 1.000)
        let fillColor5762 = UIColor(red: 0.824, green: 0.392, blue: 0.353, alpha: 1.000)
        let fillColor5763 = UIColor(red: 0.820, green: 0.384, blue: 0.345, alpha: 1.000)
        let fillColor5764 = UIColor(red: 0.820, green: 0.392, blue: 0.353, alpha: 1.000)
        let fillColor5765 = UIColor(red: 0.969, green: 0.871, blue: 0.596, alpha: 1.000)
        let fillColor5766 = UIColor(red: 0.812, green: 0.341, blue: 0.310, alpha: 1.000)
        let fillColor5767 = UIColor(red: 0.808, green: 0.329, blue: 0.298, alpha: 1.000)
        let fillColor5768 = UIColor(red: 0.961, green: 0.851, blue: 0.561, alpha: 1.000)
        let fillColor5769 = UIColor(red: 0.796, green: 0.286, blue: 0.267, alpha: 1.000)
        let fillColor5770 = UIColor(red: 0.800, green: 0.306, blue: 0.278, alpha: 1.000)
        let fillColor5771 = UIColor(red: 0.655, green: 0.200, blue: 0.192, alpha: 1.000)
        let fillColor5772 = UIColor(red: 0.792, green: 0.263, blue: 0.251, alpha: 1.000)
        let fillColor5773 = UIColor(red: 0.792, green: 0.263, blue: 0.247, alpha: 1.000)
        let fillColor5774 = UIColor(red: 0.796, green: 0.502, blue: 0.420, alpha: 1.000)
        let fillColor5775 = UIColor(red: 0.698, green: 0.239, blue: 0.220, alpha: 1.000)
        let fillColor5776 = UIColor(red: 0.945, green: 0.808, blue: 0.506, alpha: 1.000)
        let fillColor5777 = UIColor(red: 0.937, green: 0.784, blue: 0.478, alpha: 1.000)
        let fillColor5778 = UIColor(red: 0.914, green: 0.729, blue: 0.416, alpha: 1.000)
        let fillColor5779 = UIColor(red: 0.902, green: 0.702, blue: 0.396, alpha: 1.000)
        let fillColor5780 = UIColor(red: 0.878, green: 0.627, blue: 0.333, alpha: 1.000)
        let fillColor5781 = UIColor(red: 0.878, green: 0.624, blue: 0.333, alpha: 1.000)
        let fillColor5782 = UIColor(red: 0.839, green: 0.518, blue: 0.255, alpha: 1.000)
        let fillColor5783 = UIColor(red: 0.875, green: 0.624, blue: 0.329, alpha: 1.000)
        let fillColor5784 = UIColor(red: 0.882, green: 0.643, blue: 0.345, alpha: 1.000)
        let fillColor5785 = UIColor(red: 0.925, green: 0.757, blue: 0.443, alpha: 1.000)
        let fillColor5786 = UIColor(red: 0.953, green: 0.851, blue: 0.529, alpha: 1.000)

        //// #ffffffff


        //// #cb493eff
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 0.37, y: -0.29))
        bezierPath.addCurve(to: CGPoint(x: 30.29, y: 0.08), controlPoint1: CGPoint(x: 10.33, y: 0.05), controlPoint2: CGPoint(x: 20.37, y: -0.88))
        bezierPath.addCurve(to: CGPoint(x: 34.88, y: 1.43), controlPoint1: CGPoint(x: 31.83, y: 0.51), controlPoint2: CGPoint(x: 33.35, y: 0.96))
        bezierPath.addCurve(to: CGPoint(x: 30.29, y: 13.96), controlPoint1: CGPoint(x: 33.87, y: 5.8), controlPoint2: CGPoint(x: 31.53, y: 9.69))
        bezierPath.addCurve(to: CGPoint(x: 29.76, y: 38.07), controlPoint1: CGPoint(x: 29.96, y: 21.99), controlPoint2: CGPoint(x: 30.23, y: 30.04))
        bezierPath.addCurve(to: CGPoint(x: 0.99, y: 38.04), controlPoint1: CGPoint(x: 20.17, y: 38.07), controlPoint2: CGPoint(x: 10.59, y: 38.07))
        bezierPath.addCurve(to: CGPoint(x: 0.67, y: 32.27), controlPoint1: CGPoint(x: 0.91, y: 36.12), controlPoint2: CGPoint(x: 0.79, y: 34.19))
        bezierPath.addCurve(to: CGPoint(x: 0.37, y: -0.29), controlPoint1: CGPoint(x: 0.09, y: 21.43), controlPoint2: CGPoint(x: 0.59, y: 10.56))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 1.21, y: 0.51))
        bezierPath.addCurve(to: CGPoint(x: 1.47, y: 21.83), controlPoint1: CGPoint(x: 0.59, y: 7.6), controlPoint2: CGPoint(x: 0.67, y: 14.73))
        bezierPath.addCurve(to: CGPoint(x: 29.03, y: 21.81), controlPoint1: CGPoint(x: 10.65, y: 22.09), controlPoint2: CGPoint(x: 19.84, y: 22.07))
        bezierPath.addCurve(to: CGPoint(x: 29.04, y: 0.44), controlPoint1: CGPoint(x: 29.39, y: 14.69), controlPoint2: CGPoint(x: 29.37, y: 7.56))
        bezierPath.addCurve(to: CGPoint(x: 1.21, y: 0.51), controlPoint1: CGPoint(x: 19.77, y: 0.05), controlPoint2: CGPoint(x: 10.48, y: -0.01))
        bezierPath.close()
        fillColor5747.setFill()
        bezierPath.fill()




        //// #e29d58ff
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 30.29, y: 0.08))
        bezier2Path.addCurve(to: CGPoint(x: 36, y: -0.33), controlPoint1: CGPoint(x: 32.19, y: -0.07), controlPoint2: CGPoint(x: 34.09, y: -0.21))
        bezier2Path.addCurve(to: CGPoint(x: 35.83, y: 21.84), controlPoint1: CGPoint(x: 36.11, y: 7.05), controlPoint2: CGPoint(x: 36.25, y: 14.45))
        bezier2Path.addCurve(to: CGPoint(x: 35.71, y: 24.32), controlPoint1: CGPoint(x: 35.79, y: 22.47), controlPoint2: CGPoint(x: 35.73, y: 23.71))
        bezier2Path.addCurve(to: CGPoint(x: 34.05, y: 42.81), controlPoint1: CGPoint(x: 35.17, y: 30.48), controlPoint2: CGPoint(x: 34.28, y: 36.61))
        bezier2Path.addCurve(to: CGPoint(x: 29.71, y: 44.89), controlPoint1: CGPoint(x: 32.6, y: 43.49), controlPoint2: CGPoint(x: 31.15, y: 44.2))
        bezier2Path.addCurve(to: CGPoint(x: 29.76, y: 38.07), controlPoint1: CGPoint(x: 29.69, y: 42.61), controlPoint2: CGPoint(x: 29.72, y: 40.35))
        bezier2Path.addCurve(to: CGPoint(x: 30.29, y: 13.96), controlPoint1: CGPoint(x: 30.23, y: 30.04), controlPoint2: CGPoint(x: 29.96, y: 21.99))
        bezier2Path.addCurve(to: CGPoint(x: 34.88, y: 1.43), controlPoint1: CGPoint(x: 31.53, y: 9.69), controlPoint2: CGPoint(x: 33.87, y: 5.8))
        bezier2Path.addCurve(to: CGPoint(x: 30.29, y: 0.08), controlPoint1: CGPoint(x: 33.35, y: 0.96), controlPoint2: CGPoint(x: 31.83, y: 0.51))
        bezier2Path.close()
        fillColor5748.setFill()
        bezier2Path.fill()




        //// #aa3331ff
        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 36, y: -0.33))
        bezier3Path.addCurve(to: CGPoint(x: 437.44, y: -0.27), controlPoint1: CGPoint(x: 169.81, y: -0.13), controlPoint2: CGPoint(x: 303.63, y: -0.27))
        bezier3Path.addCurve(to: CGPoint(x: 437.52, y: 22.01), controlPoint1: CGPoint(x: 437.29, y: 7.16), controlPoint2: CGPoint(x: 437.03, y: 14.6))
        bezier3Path.addCurve(to: CGPoint(x: 321.33, y: 21.75), controlPoint1: CGPoint(x: 398.8, y: 21.41), controlPoint2: CGPoint(x: 360.07, y: 21.91))
        bezier3Path.addCurve(to: CGPoint(x: 35.83, y: 21.84), controlPoint1: CGPoint(x: 226.16, y: 21.81), controlPoint2: CGPoint(x: 130.99, y: 21.64))
        bezier3Path.addCurve(to: CGPoint(x: 36, y: -0.33), controlPoint1: CGPoint(x: 36.25, y: 14.45), controlPoint2: CGPoint(x: 36.11, y: 7.05))
        bezier3Path.close()
        fillColor5749.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 1.21, y: 0.51))
        bezier4Path.addCurve(to: CGPoint(x: 29.04, y: 0.44), controlPoint1: CGPoint(x: 10.48, y: -0.01), controlPoint2: CGPoint(x: 19.77, y: 0.05))
        bezier4Path.addCurve(to: CGPoint(x: 29.03, y: 21.81), controlPoint1: CGPoint(x: 29.37, y: 7.56), controlPoint2: CGPoint(x: 29.39, y: 14.69))
        bezier4Path.addCurve(to: CGPoint(x: 1.47, y: 21.83), controlPoint1: CGPoint(x: 19.84, y: 22.07), controlPoint2: CGPoint(x: 10.65, y: 22.09))
        bezier4Path.addCurve(to: CGPoint(x: 1.21, y: 0.51), controlPoint1: CGPoint(x: 0.67, y: 14.73), controlPoint2: CGPoint(x: 0.59, y: 7.6))
        bezier4Path.close()
        fillColor5749.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 444.35, y: 0.43))
        bezier5Path.addCurve(to: CGPoint(x: 473.41, y: 0.12), controlPoint1: CGPoint(x: 454.03, y: -0.13), controlPoint2: CGPoint(x: 463.72, y: 0.35))
        bezier5Path.addCurve(to: CGPoint(x: 473.35, y: 21.15), controlPoint1: CGPoint(x: 473.29, y: 7.13), controlPoint2: CGPoint(x: 473.29, y: 14.13))
        bezier5Path.addCurve(to: CGPoint(x: 443.95, y: 21.95), controlPoint1: CGPoint(x: 463.59, y: 22.37), controlPoint2: CGPoint(x: 453.75, y: 21.88))
        bezier5Path.addCurve(to: CGPoint(x: 443.44, y: 12.19), controlPoint1: CGPoint(x: 443.77, y: 18.69), controlPoint2: CGPoint(x: 443.52, y: 15.44))
        bezier5Path.addCurve(to: CGPoint(x: 444.35, y: 0.43), controlPoint1: CGPoint(x: 443.77, y: 8.27), controlPoint2: CGPoint(x: 444.09, y: 4.35))
        bezier5Path.close()
        fillColor5749.setFill()
        bezier5Path.fill()




        //// #dd8c49ff
        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 437.44, y: -0.27))
        bezier6Path.addCurve(to: CGPoint(x: 473.41, y: 0.12), controlPoint1: CGPoint(x: 449.43, y: -0.05), controlPoint2: CGPoint(x: 461.44, y: -0.81))
        bezier6Path.addCurve(to: CGPoint(x: 444.35, y: 0.43), controlPoint1: CGPoint(x: 463.72, y: 0.35), controlPoint2: CGPoint(x: 454.03, y: -0.13))
        bezier6Path.addCurve(to: CGPoint(x: 443.44, y: 12.19), controlPoint1: CGPoint(x: 444.09, y: 4.35), controlPoint2: CGPoint(x: 443.77, y: 8.27))
        bezier6Path.addCurve(to: CGPoint(x: 441.97, y: 28.51), controlPoint1: CGPoint(x: 442.71, y: 17.6), controlPoint2: CGPoint(x: 442, y: 23.03))
        bezier6Path.addCurve(to: CGPoint(x: 439.61, y: 27.97), controlPoint1: CGPoint(x: 441.39, y: 28.37), controlPoint2: CGPoint(x: 440.2, y: 28.11))
        bezier6Path.addCurve(to: CGPoint(x: 437.6, y: 23.16), controlPoint1: CGPoint(x: 438.93, y: 26.37), controlPoint2: CGPoint(x: 438.24, y: 24.77))
        bezier6Path.addLine(to: CGPoint(x: 437.52, y: 22.01))
        bezier6Path.addCurve(to: CGPoint(x: 437.44, y: -0.27), controlPoint1: CGPoint(x: 437.03, y: 14.6), controlPoint2: CGPoint(x: 437.29, y: 7.16))
        bezier6Path.close()
        fillColor5750.setFill()
        bezier6Path.fill()




        //// #e9b16fff
        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 441.97, y: 28.51))
        bezier7Path.addCurve(to: CGPoint(x: 443.44, y: 12.19), controlPoint1: CGPoint(x: 442, y: 23.03), controlPoint2: CGPoint(x: 442.71, y: 17.6))
        bezier7Path.addCurve(to: CGPoint(x: 443.95, y: 21.95), controlPoint1: CGPoint(x: 443.52, y: 15.44), controlPoint2: CGPoint(x: 443.77, y: 18.69))
        bezier7Path.addCurve(to: CGPoint(x: 443.83, y: 37.96), controlPoint1: CGPoint(x: 444.21, y: 27.28), controlPoint2: CGPoint(x: 444.24, y: 32.64))
        bezier7Path.addCurve(to: CGPoint(x: 443.56, y: 41.64), controlPoint1: CGPoint(x: 443.76, y: 38.88), controlPoint2: CGPoint(x: 443.63, y: 40.72))
        bezier7Path.addCurve(to: CGPoint(x: 441.24, y: 62.17), controlPoint1: CGPoint(x: 442.89, y: 48.49), controlPoint2: CGPoint(x: 442.24, y: 55.36))
        bezier7Path.addCurve(to: CGPoint(x: 437.73, y: 49.63), controlPoint1: CGPoint(x: 439.45, y: 58.19), controlPoint2: CGPoint(x: 437.95, y: 54.04))
        bezier7Path.addCurve(to: CGPoint(x: 437.39, y: 43.37), controlPoint1: CGPoint(x: 437.6, y: 47.53), controlPoint2: CGPoint(x: 437.48, y: 45.45))
        bezier7Path.addCurve(to: CGPoint(x: 437.27, y: 36.67), controlPoint1: CGPoint(x: 437.29, y: 41.13), controlPoint2: CGPoint(x: 437.24, y: 38.89))
        bezier7Path.addCurve(to: CGPoint(x: 437.51, y: 28.57), controlPoint1: CGPoint(x: 437.29, y: 33.96), controlPoint2: CGPoint(x: 437.41, y: 31.27))
        bezier7Path.addCurve(to: CGPoint(x: 437.6, y: 23.16), controlPoint1: CGPoint(x: 437.55, y: 26.77), controlPoint2: CGPoint(x: 437.59, y: 24.96))
        bezier7Path.addCurve(to: CGPoint(x: 439.61, y: 27.97), controlPoint1: CGPoint(x: 438.24, y: 24.77), controlPoint2: CGPoint(x: 438.93, y: 26.37))
        bezier7Path.addCurve(to: CGPoint(x: 441.97, y: 28.51), controlPoint1: CGPoint(x: 440.2, y: 28.11), controlPoint2: CGPoint(x: 441.39, y: 28.37))
        bezier7Path.close()
        fillColor5751.setFill()
        bezier7Path.fill()




        //// #cb483cff
        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 443.95, y: 21.95))
        bezier8Path.addCurve(to: CGPoint(x: 473.35, y: 21.15), controlPoint1: CGPoint(x: 453.75, y: 21.88), controlPoint2: CGPoint(x: 463.59, y: 22.37))
        bezier8Path.addCurve(to: CGPoint(x: 473.49, y: 35.96), controlPoint1: CGPoint(x: 473.31, y: 26.08), controlPoint2: CGPoint(x: 473.35, y: 31.03))
        bezier8Path.addCurve(to: CGPoint(x: 443.83, y: 37.96), controlPoint1: CGPoint(x: 464.13, y: 40.08), controlPoint2: CGPoint(x: 453.68, y: 37.32))
        bezier8Path.addCurve(to: CGPoint(x: 443.95, y: 21.95), controlPoint1: CGPoint(x: 444.24, y: 32.64), controlPoint2: CGPoint(x: 444.21, y: 27.28))
        bezier8Path.close()
        fillColor5752.setFill()
        bezier8Path.fill()




        //// #ca4237ff
        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 35.83, y: 21.84))
        bezier9Path.addCurve(to: CGPoint(x: 321.33, y: 21.75), controlPoint1: CGPoint(x: 130.99, y: 21.64), controlPoint2: CGPoint(x: 226.16, y: 21.81))
        bezier9Path.addCurve(to: CGPoint(x: 437.52, y: 22.01), controlPoint1: CGPoint(x: 360.07, y: 21.91), controlPoint2: CGPoint(x: 398.8, y: 21.41))
        bezier9Path.addLine(to: CGPoint(x: 437.6, y: 23.16))
        bezier9Path.addCurve(to: CGPoint(x: 437.51, y: 28.57), controlPoint1: CGPoint(x: 437.59, y: 24.96), controlPoint2: CGPoint(x: 437.55, y: 26.77))
        bezier9Path.addCurve(to: CGPoint(x: 218.67, y: 28.73), controlPoint1: CGPoint(x: 364.56, y: 28.93), controlPoint2: CGPoint(x: 291.61, y: 28.61))
        bezier9Path.addCurve(to: CGPoint(x: 35.67, y: 28.59), controlPoint1: CGPoint(x: 157.67, y: 28.63), controlPoint2: CGPoint(x: 96.67, y: 28.92))
        bezier9Path.addCurve(to: CGPoint(x: 35.71, y: 24.32), controlPoint1: CGPoint(x: 35.68, y: 27.52), controlPoint2: CGPoint(x: 35.69, y: 25.39))
        bezier9Path.addCurve(to: CGPoint(x: 35.83, y: 21.84), controlPoint1: CGPoint(x: 35.73, y: 23.71), controlPoint2: CGPoint(x: 35.79, y: 22.47))
        bezier9Path.close()
        fillColor5753.setFill()
        bezier9Path.fill()




        //// #f8e4a7ff
        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 34.05, y: 42.81))
        bezier10Path.addCurve(to: CGPoint(x: 35.71, y: 24.32), controlPoint1: CGPoint(x: 34.28, y: 36.61), controlPoint2: CGPoint(x: 35.17, y: 30.48))
        bezier10Path.addCurve(to: CGPoint(x: 35.67, y: 28.59), controlPoint1: CGPoint(x: 35.69, y: 25.39), controlPoint2: CGPoint(x: 35.68, y: 27.52))
        bezier10Path.addCurve(to: CGPoint(x: 35.76, y: 36.67), controlPoint1: CGPoint(x: 35.69, y: 31.28), controlPoint2: CGPoint(x: 35.75, y: 33.97))
        bezier10Path.addCurve(to: CGPoint(x: 35.76, y: 43.37), controlPoint1: CGPoint(x: 35.77, y: 38.89), controlPoint2: CGPoint(x: 35.77, y: 41.13))
        bezier10Path.addCurve(to: CGPoint(x: 35.73, y: 52.67), controlPoint1: CGPoint(x: 35.75, y: 46.47), controlPoint2: CGPoint(x: 35.73, y: 49.56))
        bezier10Path.addCurve(to: CGPoint(x: 35.77, y: 62), controlPoint1: CGPoint(x: 35.73, y: 55.77), controlPoint2: CGPoint(x: 35.76, y: 58.88))
        bezier10Path.addCurve(to: CGPoint(x: 36.07, y: 184.65), controlPoint1: CGPoint(x: 36.23, y: 102.88), controlPoint2: CGPoint(x: 35.99, y: 143.77))
        bezier10Path.addCurve(to: CGPoint(x: 36.07, y: 198.03), controlPoint1: CGPoint(x: 36.08, y: 189.11), controlPoint2: CGPoint(x: 36.08, y: 193.57))
        bezier10Path.addCurve(to: CGPoint(x: 35.96, y: 223.48), controlPoint1: CGPoint(x: 36.04, y: 206.51), controlPoint2: CGPoint(x: 35.92, y: 215))
        bezier10Path.addCurve(to: CGPoint(x: 36.01, y: 235.49), controlPoint1: CGPoint(x: 35.97, y: 227.48), controlPoint2: CGPoint(x: 36, y: 231.48))
        bezier10Path.addCurve(to: CGPoint(x: 36, y: 249.85), controlPoint1: CGPoint(x: 36.01, y: 240.28), controlPoint2: CGPoint(x: 35.97, y: 245.07))
        bezier10Path.addCurve(to: CGPoint(x: 35.93, y: 263.39), controlPoint1: CGPoint(x: 36.04, y: 254.36), controlPoint2: CGPoint(x: 36.09, y: 258.88))
        bezier10Path.addCurve(to: CGPoint(x: 35.61, y: 271.72), controlPoint1: CGPoint(x: 35.84, y: 266.16), controlPoint2: CGPoint(x: 35.67, y: 268.93))
        bezier10Path.addCurve(to: CGPoint(x: 34.28, y: 230.24), controlPoint1: CGPoint(x: 33.39, y: 257.99), controlPoint2: CGPoint(x: 34.93, y: 244.07))
        bezier10Path.addCurve(to: CGPoint(x: 31.08, y: 230.23), controlPoint1: CGPoint(x: 33.48, y: 230.24), controlPoint2: CGPoint(x: 31.88, y: 230.23))
        bezier10Path.addCurve(to: CGPoint(x: 30.24, y: 257.32), controlPoint1: CGPoint(x: 31, y: 239.27), controlPoint2: CGPoint(x: 31.64, y: 248.35))
        bezier10Path.addLine(to: CGPoint(x: 30.15, y: 256))
        bezier10Path.addCurve(to: CGPoint(x: 29.75, y: 232.73), controlPoint1: CGPoint(x: 29.48, y: 248.27), controlPoint2: CGPoint(x: 29.89, y: 240.49))
        bezier10Path.addCurve(to: CGPoint(x: 29.75, y: 197.77), controlPoint1: CGPoint(x: 29.81, y: 221.08), controlPoint2: CGPoint(x: 29.84, y: 209.43))
        bezier10Path.addCurve(to: CGPoint(x: 29.72, y: 58.03), controlPoint1: CGPoint(x: 29.8, y: 151.2), controlPoint2: CGPoint(x: 29.87, y: 104.61))
        bezier10Path.addCurve(to: CGPoint(x: 29.71, y: 44.89), controlPoint1: CGPoint(x: 29.75, y: 53.65), controlPoint2: CGPoint(x: 29.75, y: 49.27))
        bezier10Path.addCurve(to: CGPoint(x: 34.05, y: 42.81), controlPoint1: CGPoint(x: 31.15, y: 44.2), controlPoint2: CGPoint(x: 32.6, y: 43.49))
        bezier10Path.close()
        fillColor5754.setFill()
        bezier10Path.fill()




        //// #cc4e41ff
        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 35.67, y: 28.59))
        bezier11Path.addCurve(to: CGPoint(x: 218.67, y: 28.73), controlPoint1: CGPoint(x: 96.67, y: 28.92), controlPoint2: CGPoint(x: 157.67, y: 28.63))
        bezier11Path.addCurve(to: CGPoint(x: 437.51, y: 28.57), controlPoint1: CGPoint(x: 291.61, y: 28.61), controlPoint2: CGPoint(x: 364.56, y: 28.93))
        bezier11Path.addCurve(to: CGPoint(x: 437.27, y: 36.67), controlPoint1: CGPoint(x: 437.41, y: 31.27), controlPoint2: CGPoint(x: 437.29, y: 33.96))
        bezier11Path.addCurve(to: CGPoint(x: 35.76, y: 36.67), controlPoint1: CGPoint(x: 303.43, y: 36.67), controlPoint2: CGPoint(x: 169.6, y: 36.67))
        bezier11Path.addCurve(to: CGPoint(x: 35.67, y: 28.59), controlPoint1: CGPoint(x: 35.75, y: 33.97), controlPoint2: CGPoint(x: 35.69, y: 31.28))
        bezier11Path.close()
        fillColor5755.setFill()
        bezier11Path.fill()




        //// #d67573ff
        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 0.67, y: 32.27))
        bezier12Path.addCurve(to: CGPoint(x: 0.99, y: 38.04), controlPoint1: CGPoint(x: 0.79, y: 34.19), controlPoint2: CGPoint(x: 0.91, y: 36.12))
        bezier12Path.addCurve(to: CGPoint(x: 1.68, y: 57.49), controlPoint1: CGPoint(x: 1.2, y: 44.52), controlPoint2: CGPoint(x: 1.29, y: 51.01))
        bezier12Path.addCurve(to: CGPoint(x: 29.72, y: 58.03), controlPoint1: CGPoint(x: 11.03, y: 57.31), controlPoint2: CGPoint(x: 20.4, y: 57.11))
        bezier12Path.addCurve(to: CGPoint(x: 29.75, y: 197.77), controlPoint1: CGPoint(x: 29.87, y: 104.61), controlPoint2: CGPoint(x: 29.8, y: 151.2))
        bezier12Path.addCurve(to: CGPoint(x: 1.64, y: 196.84), controlPoint1: CGPoint(x: 20.45, y: 196.28), controlPoint2: CGPoint(x: 11.01, y: 196.29))
        bezier12Path.addCurve(to: CGPoint(x: 1.23, y: 232.4), controlPoint1: CGPoint(x: 1.17, y: 208.69), controlPoint2: CGPoint(x: 0.89, y: 220.55))
        bezier12Path.addCurve(to: CGPoint(x: 0.83, y: 242.95), controlPoint1: CGPoint(x: 1.2, y: 235.92), controlPoint2: CGPoint(x: 0.99, y: 239.43))
        bezier12Path.addLine(to: CGPoint(x: 0.77, y: 244))
        bezier12Path.addCurve(to: CGPoint(x: 0.36, y: 236.63), controlPoint1: CGPoint(x: 0.6, y: 241.55), controlPoint2: CGPoint(x: 0.43, y: 239.09))
        bezier12Path.addCurve(to: CGPoint(x: 0.43, y: 56.67), controlPoint1: CGPoint(x: 0.51, y: 176.64), controlPoint2: CGPoint(x: 0.44, y: 116.65))
        bezier12Path.addCurve(to: CGPoint(x: 0.67, y: 32.27), controlPoint1: CGPoint(x: 0.44, y: 48.53), controlPoint2: CGPoint(x: 0.23, y: 40.39))
        bezier12Path.close()
        fillColor5756.setFill()
        bezier12Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: 471.81, y: 57.17))
        bezier13Path.addCurve(to: CGPoint(x: 472.97, y: 51.03), controlPoint1: CGPoint(x: 472.21, y: 55.12), controlPoint2: CGPoint(x: 472.61, y: 53.08))
        bezier13Path.addCurve(to: CGPoint(x: 473.33, y: 59.36), controlPoint1: CGPoint(x: 473.15, y: 53.8), controlPoint2: CGPoint(x: 473.31, y: 56.57))
        bezier13Path.addCurve(to: CGPoint(x: 473.29, y: 175.33), controlPoint1: CGPoint(x: 473.19, y: 98.01), controlPoint2: CGPoint(x: 473.32, y: 136.68))
        bezier13Path.addCurve(to: CGPoint(x: 472.95, y: 201), controlPoint1: CGPoint(x: 473.23, y: 183.89), controlPoint2: CGPoint(x: 473.67, y: 192.47))
        bezier13Path.addCurve(to: CGPoint(x: 471.68, y: 195.57), controlPoint1: CGPoint(x: 472.56, y: 199.19), controlPoint2: CGPoint(x: 472.11, y: 197.39))
        bezier13Path.addCurve(to: CGPoint(x: 443.96, y: 194.16), controlPoint1: CGPoint(x: 462.44, y: 195.21), controlPoint2: CGPoint(x: 453.13, y: 195.52))
        bezier13Path.addCurve(to: CGPoint(x: 443.92, y: 112.65), controlPoint1: CGPoint(x: 443.65, y: 167), controlPoint2: CGPoint(x: 444.12, y: 139.83))
        bezier13Path.addCurve(to: CGPoint(x: 443.72, y: 56.88), controlPoint1: CGPoint(x: 443.95, y: 94.07), controlPoint2: CGPoint(x: 443.48, y: 75.47))
        bezier13Path.addCurve(to: CGPoint(x: 471.81, y: 57.17), controlPoint1: CGPoint(x: 453.04, y: 58.33), controlPoint2: CGPoint(x: 462.44, y: 56.96))
        bezier13Path.close()
        fillColor5756.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 35.77, y: 62))
        bezier14Path.addCurve(to: CGPoint(x: 437.67, y: 62), controlPoint1: CGPoint(x: 169.73, y: 62.07), controlPoint2: CGPoint(x: 303.71, y: 62.05))
        bezier14Path.addCurve(to: CGPoint(x: 437.64, y: 184.68), controlPoint1: CGPoint(x: 437.8, y: 102.89), controlPoint2: CGPoint(x: 437.67, y: 143.79))
        bezier14Path.addCurve(to: CGPoint(x: 36.07, y: 184.65), controlPoint1: CGPoint(x: 303.79, y: 184.63), controlPoint2: CGPoint(x: 169.92, y: 184.67))
        bezier14Path.addCurve(to: CGPoint(x: 35.77, y: 62), controlPoint1: CGPoint(x: 35.99, y: 143.77), controlPoint2: CGPoint(x: 36.23, y: 102.88))
        bezier14Path.close()
        fillColor5756.setFill()
        bezier14Path.fill()




        //// #d2675bff
        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: 443.83, y: 37.96))
        bezier15Path.addCurve(to: CGPoint(x: 473.49, y: 35.96), controlPoint1: CGPoint(x: 453.68, y: 37.32), controlPoint2: CGPoint(x: 464.13, y: 40.08))
        bezier15Path.addCurve(to: CGPoint(x: 472.97, y: 51.03), controlPoint1: CGPoint(x: 473.27, y: 40.97), controlPoint2: CGPoint(x: 473.67, y: 46.03))
        bezier15Path.addCurve(to: CGPoint(x: 471.81, y: 57.17), controlPoint1: CGPoint(x: 472.61, y: 53.08), controlPoint2: CGPoint(x: 472.21, y: 55.12))
        bezier15Path.addCurve(to: CGPoint(x: 443.72, y: 56.88), controlPoint1: CGPoint(x: 462.44, y: 56.96), controlPoint2: CGPoint(x: 453.04, y: 58.33))
        bezier15Path.addCurve(to: CGPoint(x: 443.56, y: 41.64), controlPoint1: CGPoint(x: 443.69, y: 51.8), controlPoint2: CGPoint(x: 443.47, y: 46.72))
        bezier15Path.addCurve(to: CGPoint(x: 443.83, y: 37.96), controlPoint1: CGPoint(x: 443.63, y: 40.72), controlPoint2: CGPoint(x: 443.76, y: 38.88))
        bezier15Path.close()
        fillColor5757.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 0.99, y: 38.04))
        bezier16Path.addCurve(to: CGPoint(x: 29.76, y: 38.07), controlPoint1: CGPoint(x: 10.59, y: 38.07), controlPoint2: CGPoint(x: 20.17, y: 38.07))
        bezier16Path.addCurve(to: CGPoint(x: 29.71, y: 44.89), controlPoint1: CGPoint(x: 29.72, y: 40.35), controlPoint2: CGPoint(x: 29.69, y: 42.61))
        bezier16Path.addCurve(to: CGPoint(x: 29.72, y: 58.03), controlPoint1: CGPoint(x: 29.75, y: 49.27), controlPoint2: CGPoint(x: 29.75, y: 53.65))
        bezier16Path.addCurve(to: CGPoint(x: 1.68, y: 57.49), controlPoint1: CGPoint(x: 20.4, y: 57.11), controlPoint2: CGPoint(x: 11.03, y: 57.31))
        bezier16Path.addCurve(to: CGPoint(x: 0.99, y: 38.04), controlPoint1: CGPoint(x: 1.29, y: 51.01), controlPoint2: CGPoint(x: 1.2, y: 44.52))
        bezier16Path.close()
        fillColor5757.setFill()
        bezier16Path.fill()


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 35.76, y: 43.37))
        bezier17Path.addCurve(to: CGPoint(x: 437.39, y: 43.37), controlPoint1: CGPoint(x: 169.64, y: 43.37), controlPoint2: CGPoint(x: 303.52, y: 43.36))
        bezier17Path.addCurve(to: CGPoint(x: 437.73, y: 49.63), controlPoint1: CGPoint(x: 437.48, y: 45.45), controlPoint2: CGPoint(x: 437.6, y: 47.53))
        bezier17Path.addCurve(to: CGPoint(x: 437.81, y: 52.51), controlPoint1: CGPoint(x: 437.75, y: 50.35), controlPoint2: CGPoint(x: 437.79, y: 51.79))
        bezier17Path.addCurve(to: CGPoint(x: 35.73, y: 52.67), controlPoint1: CGPoint(x: 303.79, y: 52.89), controlPoint2: CGPoint(x: 169.76, y: 52.57))
        bezier17Path.addCurve(to: CGPoint(x: 35.76, y: 43.37), controlPoint1: CGPoint(x: 35.73, y: 49.56), controlPoint2: CGPoint(x: 35.75, y: 46.47))
        bezier17Path.close()
        fillColor5757.setFill()
        bezier17Path.fill()




        //// #cf5b4fff
        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: 35.76, y: 36.67))
        bezier18Path.addCurve(to: CGPoint(x: 437.27, y: 36.67), controlPoint1: CGPoint(x: 169.6, y: 36.67), controlPoint2: CGPoint(x: 303.43, y: 36.67))
        bezier18Path.addCurve(to: CGPoint(x: 437.39, y: 43.37), controlPoint1: CGPoint(x: 437.24, y: 38.89), controlPoint2: CGPoint(x: 437.29, y: 41.13))
        bezier18Path.addCurve(to: CGPoint(x: 35.76, y: 43.37), controlPoint1: CGPoint(x: 303.52, y: 43.36), controlPoint2: CGPoint(x: 169.64, y: 43.37))
        bezier18Path.addCurve(to: CGPoint(x: 35.76, y: 36.67), controlPoint1: CGPoint(x: 35.77, y: 41.13), controlPoint2: CGPoint(x: 35.77, y: 38.89))
        bezier18Path.close()
        fillColor5758.setFill()
        bezier18Path.fill()




        //// #f9e7aeff
        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: 441.24, y: 62.17))
        bezier19Path.addCurve(to: CGPoint(x: 443.56, y: 41.64), controlPoint1: CGPoint(x: 442.24, y: 55.36), controlPoint2: CGPoint(x: 442.89, y: 48.49))
        bezier19Path.addCurve(to: CGPoint(x: 443.72, y: 56.88), controlPoint1: CGPoint(x: 443.47, y: 46.72), controlPoint2: CGPoint(x: 443.69, y: 51.8))
        bezier19Path.addCurve(to: CGPoint(x: 443.92, y: 112.65), controlPoint1: CGPoint(x: 443.48, y: 75.47), controlPoint2: CGPoint(x: 443.95, y: 94.07))
        bezier19Path.addCurve(to: CGPoint(x: 443.96, y: 194.16), controlPoint1: CGPoint(x: 444.12, y: 139.83), controlPoint2: CGPoint(x: 443.65, y: 167))
        bezier19Path.addCurve(to: CGPoint(x: 443.44, y: 224.81), controlPoint1: CGPoint(x: 443.91, y: 204.37), controlPoint2: CGPoint(x: 444.05, y: 214.6))
        bezier19Path.addCurve(to: CGPoint(x: 442.33, y: 198.21), controlPoint1: CGPoint(x: 441.99, y: 216.01), controlPoint2: CGPoint(x: 442.27, y: 207.09))
        bezier19Path.addCurve(to: CGPoint(x: 439.09, y: 198.21), controlPoint1: CGPoint(x: 441.52, y: 198.21), controlPoint2: CGPoint(x: 439.91, y: 198.21))
        bezier19Path.addCurve(to: CGPoint(x: 438.76, y: 318.24), controlPoint1: CGPoint(x: 439.2, y: 238.23), controlPoint2: CGPoint(x: 438.29, y: 278.24))
        bezier19Path.addCurve(to: CGPoint(x: 438.64, y: 403.09), controlPoint1: CGPoint(x: 439.19, y: 346.52), controlPoint2: CGPoint(x: 437.92, y: 374.81))
        bezier19Path.addCurve(to: CGPoint(x: 438.52, y: 485.97), controlPoint1: CGPoint(x: 438.97, y: 430.72), controlPoint2: CGPoint(x: 437.89, y: 458.35))
        bezier19Path.addCurve(to: CGPoint(x: 438.49, y: 552.67), controlPoint1: CGPoint(x: 438.75, y: 508.2), controlPoint2: CGPoint(x: 438, y: 530.44))
        bezier19Path.addCurve(to: CGPoint(x: 438.51, y: 736.67), controlPoint1: CGPoint(x: 438.19, y: 614), controlPoint2: CGPoint(x: 438.4, y: 675.33))
        bezier19Path.addCurve(to: CGPoint(x: 438.65, y: 830.25), controlPoint1: CGPoint(x: 437.91, y: 767.87), controlPoint2: CGPoint(x: 438.84, y: 799.07))
        bezier19Path.addCurve(to: CGPoint(x: 437.92, y: 871.72), controlPoint1: CGPoint(x: 437.69, y: 844.07), controlPoint2: CGPoint(x: 439.28, y: 857.92))
        bezier19Path.addCurve(to: CGPoint(x: 437.67, y: 283.44), controlPoint1: CGPoint(x: 437.59, y: 675.63), controlPoint2: CGPoint(x: 438.01, y: 479.53))
        bezier19Path.addCurve(to: CGPoint(x: 437.71, y: 263.41), controlPoint1: CGPoint(x: 437.69, y: 276.76), controlPoint2: CGPoint(x: 437.75, y: 270.08))
        bezier19Path.addCurve(to: CGPoint(x: 437.69, y: 248.95), controlPoint1: CGPoint(x: 437.68, y: 258.59), controlPoint2: CGPoint(x: 437.69, y: 253.77))
        bezier19Path.addCurve(to: CGPoint(x: 437.65, y: 236.67), controlPoint1: CGPoint(x: 437.69, y: 244.85), controlPoint2: CGPoint(x: 437.67, y: 240.76))
        bezier19Path.addCurve(to: CGPoint(x: 437.65, y: 224.64), controlPoint1: CGPoint(x: 437.63, y: 232.65), controlPoint2: CGPoint(x: 437.63, y: 228.64))
        bezier19Path.addCurve(to: CGPoint(x: 437.57, y: 197.87), controlPoint1: CGPoint(x: 437.81, y: 215.72), controlPoint2: CGPoint(x: 437.69, y: 206.79))
        bezier19Path.addCurve(to: CGPoint(x: 437.64, y: 184.68), controlPoint1: CGPoint(x: 437.55, y: 193.47), controlPoint2: CGPoint(x: 437.6, y: 189.07))
        bezier19Path.addCurve(to: CGPoint(x: 437.67, y: 62), controlPoint1: CGPoint(x: 437.67, y: 143.79), controlPoint2: CGPoint(x: 437.8, y: 102.89))
        bezier19Path.addCurve(to: CGPoint(x: 437.81, y: 52.51), controlPoint1: CGPoint(x: 437.71, y: 58.84), controlPoint2: CGPoint(x: 437.81, y: 55.67))
        bezier19Path.addCurve(to: CGPoint(x: 437.73, y: 49.63), controlPoint1: CGPoint(x: 437.79, y: 51.79), controlPoint2: CGPoint(x: 437.75, y: 50.35))
        bezier19Path.addCurve(to: CGPoint(x: 441.24, y: 62.17), controlPoint1: CGPoint(x: 437.95, y: 54.04), controlPoint2: CGPoint(x: 439.45, y: 58.19))
        bezier19Path.close()
        fillColor5759.setFill()
        bezier19Path.fill()




        //// #d46e65ff
        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: 35.73, y: 52.67))
        bezier20Path.addCurve(to: CGPoint(x: 437.81, y: 52.51), controlPoint1: CGPoint(x: 169.76, y: 52.57), controlPoint2: CGPoint(x: 303.79, y: 52.89))
        bezier20Path.addCurve(to: CGPoint(x: 437.67, y: 62), controlPoint1: CGPoint(x: 437.81, y: 55.67), controlPoint2: CGPoint(x: 437.71, y: 58.84))
        bezier20Path.addCurve(to: CGPoint(x: 35.77, y: 62), controlPoint1: CGPoint(x: 303.71, y: 62.05), controlPoint2: CGPoint(x: 169.73, y: 62.07))
        bezier20Path.addCurve(to: CGPoint(x: 35.73, y: 52.67), controlPoint1: CGPoint(x: 35.76, y: 58.88), controlPoint2: CGPoint(x: 35.73, y: 55.77))
        bezier20Path.close()
        fillColor5760.setFill()
        bezier20Path.fill()




        //// #d46f69ff
        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 36.07, y: 184.65))
        bezier21Path.addCurve(to: CGPoint(x: 437.64, y: 184.68), controlPoint1: CGPoint(x: 169.92, y: 184.67), controlPoint2: CGPoint(x: 303.79, y: 184.63))
        bezier21Path.addCurve(to: CGPoint(x: 437.57, y: 197.87), controlPoint1: CGPoint(x: 437.6, y: 189.07), controlPoint2: CGPoint(x: 437.55, y: 193.47))
        bezier21Path.addCurve(to: CGPoint(x: 371.95, y: 197.97), controlPoint1: CGPoint(x: 415.71, y: 196.48), controlPoint2: CGPoint(x: 393.83, y: 198.99))
        bezier21Path.addCurve(to: CGPoint(x: 328.69, y: 197.49), controlPoint1: CGPoint(x: 357.55, y: 197.08), controlPoint2: CGPoint(x: 343.11, y: 197.71))
        bezier21Path.addCurve(to: CGPoint(x: 293.35, y: 198.15), controlPoint1: CGPoint(x: 316.92, y: 197.93), controlPoint2: CGPoint(x: 305.13, y: 198.35))
        bezier21Path.addCurve(to: CGPoint(x: 225.32, y: 198.11), controlPoint1: CGPoint(x: 270.68, y: 197.24), controlPoint2: CGPoint(x: 247.99, y: 197.17))
        bezier21Path.addCurve(to: CGPoint(x: 191.49, y: 197.56), controlPoint1: CGPoint(x: 214.04, y: 198.23), controlPoint2: CGPoint(x: 202.76, y: 198.19))
        bezier21Path.addCurve(to: CGPoint(x: 156.61, y: 197.52), controlPoint1: CGPoint(x: 179.87, y: 197.44), controlPoint2: CGPoint(x: 168.24, y: 197.56))
        bezier21Path.addCurve(to: CGPoint(x: 114.59, y: 197.92), controlPoint1: CGPoint(x: 142.61, y: 198.15), controlPoint2: CGPoint(x: 128.6, y: 198.41))
        bezier21Path.addCurve(to: CGPoint(x: 36.07, y: 198.03), controlPoint1: CGPoint(x: 88.43, y: 196.6), controlPoint2: CGPoint(x: 62.24, y: 198.35))
        bezier21Path.addCurve(to: CGPoint(x: 36.07, y: 184.65), controlPoint1: CGPoint(x: 36.08, y: 193.57), controlPoint2: CGPoint(x: 36.08, y: 189.11))
        bezier21Path.close()
        fillColor5761.setFill()
        bezier21Path.fill()




        //// #d2645aff
        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        bezier22Path.move(to: CGPoint(x: 443.96, y: 194.16))
        bezier22Path.addCurve(to: CGPoint(x: 471.68, y: 195.57), controlPoint1: CGPoint(x: 453.13, y: 195.52), controlPoint2: CGPoint(x: 462.44, y: 195.21))
        bezier22Path.addCurve(to: CGPoint(x: 472.95, y: 201), controlPoint1: CGPoint(x: 472.11, y: 197.39), controlPoint2: CGPoint(x: 472.56, y: 199.19))
        bezier22Path.addCurve(to: CGPoint(x: 472.97, y: 231.67), controlPoint1: CGPoint(x: 473.72, y: 211.19), controlPoint2: CGPoint(x: 473.39, y: 221.47))
        bezier22Path.addCurve(to: CGPoint(x: 471.27, y: 224.03), controlPoint1: CGPoint(x: 472.48, y: 229.09), controlPoint2: CGPoint(x: 471.85, y: 226.56))
        bezier22Path.addCurve(to: CGPoint(x: 443.44, y: 224.81), controlPoint1: CGPoint(x: 461.99, y: 224.33), controlPoint2: CGPoint(x: 452.67, y: 223.47))
        bezier22Path.addCurve(to: CGPoint(x: 443.96, y: 194.16), controlPoint1: CGPoint(x: 444.05, y: 214.6), controlPoint2: CGPoint(x: 443.91, y: 204.37))
        bezier22Path.close()
        fillColor5762.setFill()
        bezier22Path.fill()




        //// #d16258ff
        //// Bezier 23 Drawing
        let bezier23Path = UIBezierPath()
        bezier23Path.move(to: CGPoint(x: 1.64, y: 196.84))
        bezier23Path.addCurve(to: CGPoint(x: 29.75, y: 197.77), controlPoint1: CGPoint(x: 11.01, y: 196.29), controlPoint2: CGPoint(x: 20.45, y: 196.28))
        bezier23Path.addCurve(to: CGPoint(x: 29.75, y: 232.73), controlPoint1: CGPoint(x: 29.84, y: 209.43), controlPoint2: CGPoint(x: 29.81, y: 221.08))
        bezier23Path.addCurve(to: CGPoint(x: 1.23, y: 232.4), controlPoint1: CGPoint(x: 20.24, y: 232.93), controlPoint2: CGPoint(x: 10.73, y: 231.49))
        bezier23Path.addCurve(to: CGPoint(x: 1.64, y: 196.84), controlPoint1: CGPoint(x: 0.89, y: 220.55), controlPoint2: CGPoint(x: 1.17, y: 208.69))
        bezier23Path.close()
        fillColor5763.setFill()
        bezier23Path.fill()




        //// #d1645aff
        //// Bezier 24 Drawing
        let bezier24Path = UIBezierPath()
        bezier24Path.move(to: CGPoint(x: 36.07, y: 198.03))
        bezier24Path.addCurve(to: CGPoint(x: 114.59, y: 197.92), controlPoint1: CGPoint(x: 62.24, y: 198.35), controlPoint2: CGPoint(x: 88.43, y: 196.6))
        bezier24Path.addCurve(to: CGPoint(x: 156.61, y: 197.52), controlPoint1: CGPoint(x: 128.6, y: 198.41), controlPoint2: CGPoint(x: 142.61, y: 198.15))
        bezier24Path.addCurve(to: CGPoint(x: 191.49, y: 197.56), controlPoint1: CGPoint(x: 168.24, y: 197.56), controlPoint2: CGPoint(x: 179.87, y: 197.44))
        bezier24Path.addCurve(to: CGPoint(x: 225.32, y: 198.11), controlPoint1: CGPoint(x: 202.76, y: 198.19), controlPoint2: CGPoint(x: 214.04, y: 198.23))
        bezier24Path.addCurve(to: CGPoint(x: 293.35, y: 198.15), controlPoint1: CGPoint(x: 247.99, y: 197.17), controlPoint2: CGPoint(x: 270.68, y: 197.24))
        bezier24Path.addCurve(to: CGPoint(x: 328.69, y: 197.49), controlPoint1: CGPoint(x: 305.13, y: 198.35), controlPoint2: CGPoint(x: 316.92, y: 197.93))
        bezier24Path.addCurve(to: CGPoint(x: 371.95, y: 197.97), controlPoint1: CGPoint(x: 343.11, y: 197.71), controlPoint2: CGPoint(x: 357.55, y: 197.08))
        bezier24Path.addCurve(to: CGPoint(x: 437.57, y: 197.87), controlPoint1: CGPoint(x: 393.83, y: 198.99), controlPoint2: CGPoint(x: 415.71, y: 196.48))
        bezier24Path.addCurve(to: CGPoint(x: 437.65, y: 224.64), controlPoint1: CGPoint(x: 437.69, y: 206.79), controlPoint2: CGPoint(x: 437.81, y: 215.72))
        bezier24Path.addCurve(to: CGPoint(x: 382.77, y: 224.12), controlPoint1: CGPoint(x: 419.36, y: 224.36), controlPoint2: CGPoint(x: 401.05, y: 224.96))
        bezier24Path.addCurve(to: CGPoint(x: 300.67, y: 224.21), controlPoint1: CGPoint(x: 355.4, y: 223.97), controlPoint2: CGPoint(x: 328.03, y: 225.33))
        bezier24Path.addCurve(to: CGPoint(x: 274.32, y: 224.24), controlPoint1: CGPoint(x: 291.89, y: 224.03), controlPoint2: CGPoint(x: 283.11, y: 223.99))
        bezier24Path.addCurve(to: CGPoint(x: 193.23, y: 224.12), controlPoint1: CGPoint(x: 247.29, y: 225.32), controlPoint2: CGPoint(x: 220.25, y: 223.96))
        bezier24Path.addCurve(to: CGPoint(x: 116.2, y: 224.08), controlPoint1: CGPoint(x: 167.56, y: 225.16), controlPoint2: CGPoint(x: 141.87, y: 224.37))
        bezier24Path.addCurve(to: CGPoint(x: 82.67, y: 224.59), controlPoint1: CGPoint(x: 105.01, y: 223.95), controlPoint2: CGPoint(x: 93.85, y: 224.85))
        bezier24Path.addCurve(to: CGPoint(x: 35.96, y: 223.48), controlPoint1: CGPoint(x: 67.09, y: 224.33), controlPoint2: CGPoint(x: 51.47, y: 225.29))
        bezier24Path.addCurve(to: CGPoint(x: 36.07, y: 198.03), controlPoint1: CGPoint(x: 35.92, y: 215), controlPoint2: CGPoint(x: 36.04, y: 206.51))
        bezier24Path.close()
        fillColor5764.setFill()
        bezier24Path.fill()




        //// #f7de98ff
        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 439.09, y: 198.21))
        bezier25Path.addCurve(to: CGPoint(x: 442.33, y: 198.21), controlPoint1: CGPoint(x: 439.91, y: 198.21), controlPoint2: CGPoint(x: 441.52, y: 198.21))
        bezier25Path.addCurve(to: CGPoint(x: 443.44, y: 224.81), controlPoint1: CGPoint(x: 442.27, y: 207.09), controlPoint2: CGPoint(x: 441.99, y: 216.01))
        bezier25Path.addCurve(to: CGPoint(x: 443.97, y: 244.56), controlPoint1: CGPoint(x: 444.16, y: 231.37), controlPoint2: CGPoint(x: 444, y: 237.97))
        bezier25Path.addCurve(to: CGPoint(x: 443.81, y: 265.97), controlPoint1: CGPoint(x: 443.91, y: 251.71), controlPoint2: CGPoint(x: 443.96, y: 258.84))
        bezier25Path.addCurve(to: CGPoint(x: 443.73, y: 269.71), controlPoint1: CGPoint(x: 443.8, y: 266.91), controlPoint2: CGPoint(x: 443.76, y: 268.77))
        bezier25Path.addCurve(to: CGPoint(x: 442.6, y: 317.27), controlPoint1: CGPoint(x: 442.29, y: 285.53), controlPoint2: CGPoint(x: 443.76, y: 301.43))
        bezier25Path.addCurve(to: CGPoint(x: 438.76, y: 318.24), controlPoint1: CGPoint(x: 441.64, y: 317.51), controlPoint2: CGPoint(x: 439.72, y: 318))
        bezier25Path.addCurve(to: CGPoint(x: 439.09, y: 198.21), controlPoint1: CGPoint(x: 438.29, y: 278.24), controlPoint2: CGPoint(x: 439.2, y: 238.23))
        bezier25Path.close()
        fillColor5765.setFill()
        bezier25Path.fill()




        //// #cf574fff
        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        bezier26Path.move(to: CGPoint(x: 35.96, y: 223.48))
        bezier26Path.addCurve(to: CGPoint(x: 82.67, y: 224.59), controlPoint1: CGPoint(x: 51.47, y: 225.29), controlPoint2: CGPoint(x: 67.09, y: 224.33))
        bezier26Path.addCurve(to: CGPoint(x: 116.2, y: 224.08), controlPoint1: CGPoint(x: 93.85, y: 224.85), controlPoint2: CGPoint(x: 105.01, y: 223.95))
        bezier26Path.addCurve(to: CGPoint(x: 193.23, y: 224.12), controlPoint1: CGPoint(x: 141.87, y: 224.37), controlPoint2: CGPoint(x: 167.56, y: 225.16))
        bezier26Path.addCurve(to: CGPoint(x: 274.32, y: 224.24), controlPoint1: CGPoint(x: 220.25, y: 223.96), controlPoint2: CGPoint(x: 247.29, y: 225.32))
        bezier26Path.addCurve(to: CGPoint(x: 300.67, y: 224.21), controlPoint1: CGPoint(x: 283.11, y: 223.99), controlPoint2: CGPoint(x: 291.89, y: 224.03))
        bezier26Path.addCurve(to: CGPoint(x: 382.77, y: 224.12), controlPoint1: CGPoint(x: 328.03, y: 225.33), controlPoint2: CGPoint(x: 355.4, y: 223.97))
        bezier26Path.addCurve(to: CGPoint(x: 437.65, y: 224.64), controlPoint1: CGPoint(x: 401.05, y: 224.96), controlPoint2: CGPoint(x: 419.36, y: 224.36))
        bezier26Path.addCurve(to: CGPoint(x: 437.65, y: 236.67), controlPoint1: CGPoint(x: 437.63, y: 228.64), controlPoint2: CGPoint(x: 437.63, y: 232.65))
        bezier26Path.addCurve(to: CGPoint(x: 382.05, y: 236.07), controlPoint1: CGPoint(x: 419.12, y: 236.44), controlPoint2: CGPoint(x: 400.57, y: 237.2))
        bezier26Path.addCurve(to: CGPoint(x: 353.32, y: 236.68), controlPoint1: CGPoint(x: 372.47, y: 235.55), controlPoint2: CGPoint(x: 362.91, y: 236.65))
        bezier26Path.addCurve(to: CGPoint(x: 290.67, y: 235.93), controlPoint1: CGPoint(x: 332.43, y: 236.63), controlPoint2: CGPoint(x: 311.53, y: 236.96))
        bezier26Path.addCurve(to: CGPoint(x: 236, y: 236.69), controlPoint1: CGPoint(x: 272.45, y: 236.8), controlPoint2: CGPoint(x: 254.23, y: 236.69))
        bezier26Path.addCurve(to: CGPoint(x: 197.05, y: 236.17), controlPoint1: CGPoint(x: 223.01, y: 237.13), controlPoint2: CGPoint(x: 210.04, y: 235.35))
        bezier26Path.addCurve(to: CGPoint(x: 148, y: 236.71), controlPoint1: CGPoint(x: 180.72, y: 237.16), controlPoint2: CGPoint(x: 164.35, y: 236.41))
        bezier26Path.addCurve(to: CGPoint(x: 111.72, y: 236.17), controlPoint1: CGPoint(x: 135.89, y: 236.99), controlPoint2: CGPoint(x: 123.83, y: 235.36))
        bezier26Path.addCurve(to: CGPoint(x: 80, y: 236.64), controlPoint1: CGPoint(x: 101.16, y: 236.85), controlPoint2: CGPoint(x: 90.57, y: 236.69))
        bezier26Path.addCurve(to: CGPoint(x: 36.01, y: 235.49), controlPoint1: CGPoint(x: 65.33, y: 236.55), controlPoint2: CGPoint(x: 50.6, y: 237.29))
        bezier26Path.addCurve(to: CGPoint(x: 35.96, y: 223.48), controlPoint1: CGPoint(x: 36, y: 231.48), controlPoint2: CGPoint(x: 35.97, y: 227.48))
        bezier26Path.close()
        fillColor5766.setFill()
        bezier26Path.fill()




        //// #ce544cff
        //// Bezier 27 Drawing
        let bezier27Path = UIBezierPath()
        bezier27Path.move(to: CGPoint(x: 443.44, y: 224.81))
        bezier27Path.addCurve(to: CGPoint(x: 471.27, y: 224.03), controlPoint1: CGPoint(x: 452.67, y: 223.47), controlPoint2: CGPoint(x: 461.99, y: 224.33))
        bezier27Path.addCurve(to: CGPoint(x: 472.97, y: 231.67), controlPoint1: CGPoint(x: 471.85, y: 226.56), controlPoint2: CGPoint(x: 472.48, y: 229.09))
        bezier27Path.addCurve(to: CGPoint(x: 473, y: 255.72), controlPoint1: CGPoint(x: 473.84, y: 239.64), controlPoint2: CGPoint(x: 473.28, y: 247.71))
        bezier27Path.addCurve(to: CGPoint(x: 471.51, y: 244.8), controlPoint1: CGPoint(x: 472.6, y: 252.07), controlPoint2: CGPoint(x: 472.03, y: 248.43))
        bezier27Path.addCurve(to: CGPoint(x: 443.97, y: 244.56), controlPoint1: CGPoint(x: 462.35, y: 245.75), controlPoint2: CGPoint(x: 453.11, y: 245.75))
        bezier27Path.addCurve(to: CGPoint(x: 443.44, y: 224.81), controlPoint1: CGPoint(x: 444, y: 237.97), controlPoint2: CGPoint(x: 444.16, y: 231.37))
        bezier27Path.close()
        fillColor5767.setFill()
        bezier27Path.fill()




        //// #f5d98fff
        //// Bezier 28 Drawing
        let bezier28Path = UIBezierPath()
        bezier28Path.move(to: CGPoint(x: 31.08, y: 230.23))
        bezier28Path.addCurve(to: CGPoint(x: 34.28, y: 230.24), controlPoint1: CGPoint(x: 31.88, y: 230.23), controlPoint2: CGPoint(x: 33.48, y: 230.24))
        bezier28Path.addCurve(to: CGPoint(x: 35.61, y: 271.72), controlPoint1: CGPoint(x: 34.93, y: 244.07), controlPoint2: CGPoint(x: 33.39, y: 257.99))
        bezier28Path.addCurve(to: CGPoint(x: 36.05, y: 284.52), controlPoint1: CGPoint(x: 35.84, y: 275.97), controlPoint2: CGPoint(x: 36.03, y: 280.24))
        bezier28Path.addCurve(to: CGPoint(x: 35.65, y: 393.05), controlPoint1: CGPoint(x: 35.77, y: 320.69), controlPoint2: CGPoint(x: 36.4, y: 356.88))
        bezier28Path.addCurve(to: CGPoint(x: 34.2, y: 337.36), controlPoint1: CGPoint(x: 33.45, y: 374.57), controlPoint2: CGPoint(x: 35.08, y: 355.92))
        bezier28Path.addCurve(to: CGPoint(x: 30.4, y: 336.45), controlPoint1: CGPoint(x: 33.25, y: 337.13), controlPoint2: CGPoint(x: 31.35, y: 336.68))
        bezier28Path.addCurve(to: CGPoint(x: 30.24, y: 257.32), controlPoint1: CGPoint(x: 30.13, y: 310.08), controlPoint2: CGPoint(x: 30.25, y: 283.69))
        bezier28Path.addCurve(to: CGPoint(x: 31.08, y: 230.23), controlPoint1: CGPoint(x: 31.64, y: 248.35), controlPoint2: CGPoint(x: 31, y: 239.27))
        bezier28Path.close()
        fillColor5768.setFill()
        bezier28Path.fill()




        //// #cb4944ff
        //// Bezier 29 Drawing
        let bezier29Path = UIBezierPath()
        bezier29Path.move(to: CGPoint(x: 1.23, y: 232.4))
        bezier29Path.addCurve(to: CGPoint(x: 29.75, y: 232.73), controlPoint1: CGPoint(x: 10.73, y: 231.49), controlPoint2: CGPoint(x: 20.24, y: 232.93))
        bezier29Path.addCurve(to: CGPoint(x: 30.15, y: 256), controlPoint1: CGPoint(x: 29.89, y: 240.49), controlPoint2: CGPoint(x: 29.48, y: 248.27))
        bezier29Path.addCurve(to: CGPoint(x: 29.53, y: 263.4), controlPoint1: CGPoint(x: 29.97, y: 258.47), controlPoint2: CGPoint(x: 29.69, y: 260.93))
        bezier29Path.addCurve(to: CGPoint(x: 1.17, y: 263.39), controlPoint1: CGPoint(x: 20.08, y: 263.35), controlPoint2: CGPoint(x: 10.63, y: 263.37))
        bezier29Path.addCurve(to: CGPoint(x: 0.83, y: 242.95), controlPoint1: CGPoint(x: 1.08, y: 256.57), controlPoint2: CGPoint(x: 0.61, y: 249.76))
        bezier29Path.addCurve(to: CGPoint(x: 1.23, y: 232.4), controlPoint1: CGPoint(x: 0.99, y: 239.43), controlPoint2: CGPoint(x: 1.2, y: 235.92))
        bezier29Path.close()
        fillColor5769.setFill()
        bezier29Path.fill()




        //// #cc4e47ff
        //// Bezier 30 Drawing
        let bezier30Path = UIBezierPath()
        bezier30Path.move(to: CGPoint(x: 36.01, y: 235.49))
        bezier30Path.addCurve(to: CGPoint(x: 80, y: 236.64), controlPoint1: CGPoint(x: 50.6, y: 237.29), controlPoint2: CGPoint(x: 65.33, y: 236.55))
        bezier30Path.addCurve(to: CGPoint(x: 111.72, y: 236.17), controlPoint1: CGPoint(x: 90.57, y: 236.69), controlPoint2: CGPoint(x: 101.16, y: 236.85))
        bezier30Path.addCurve(to: CGPoint(x: 148, y: 236.71), controlPoint1: CGPoint(x: 123.83, y: 235.36), controlPoint2: CGPoint(x: 135.89, y: 236.99))
        bezier30Path.addCurve(to: CGPoint(x: 197.05, y: 236.17), controlPoint1: CGPoint(x: 164.35, y: 236.41), controlPoint2: CGPoint(x: 180.72, y: 237.16))
        bezier30Path.addCurve(to: CGPoint(x: 236, y: 236.69), controlPoint1: CGPoint(x: 210.04, y: 235.35), controlPoint2: CGPoint(x: 223.01, y: 237.13))
        bezier30Path.addCurve(to: CGPoint(x: 290.67, y: 235.93), controlPoint1: CGPoint(x: 254.23, y: 236.69), controlPoint2: CGPoint(x: 272.45, y: 236.8))
        bezier30Path.addCurve(to: CGPoint(x: 353.32, y: 236.68), controlPoint1: CGPoint(x: 311.53, y: 236.96), controlPoint2: CGPoint(x: 332.43, y: 236.63))
        bezier30Path.addCurve(to: CGPoint(x: 382.05, y: 236.07), controlPoint1: CGPoint(x: 362.91, y: 236.65), controlPoint2: CGPoint(x: 372.47, y: 235.55))
        bezier30Path.addCurve(to: CGPoint(x: 437.65, y: 236.67), controlPoint1: CGPoint(x: 400.57, y: 237.2), controlPoint2: CGPoint(x: 419.12, y: 236.44))
        bezier30Path.addCurve(to: CGPoint(x: 437.69, y: 248.95), controlPoint1: CGPoint(x: 437.67, y: 240.76), controlPoint2: CGPoint(x: 437.69, y: 244.85))
        bezier30Path.addCurve(to: CGPoint(x: 393.27, y: 248.8), controlPoint1: CGPoint(x: 422.89, y: 250.29), controlPoint2: CGPoint(x: 408.08, y: 247.73))
        bezier30Path.addCurve(to: CGPoint(x: 360.72, y: 249.21), controlPoint1: CGPoint(x: 382.43, y: 249.71), controlPoint2: CGPoint(x: 371.56, y: 248.57))
        bezier30Path.addCurve(to: CGPoint(x: 298.93, y: 249.17), controlPoint1: CGPoint(x: 340.11, y: 250.12), controlPoint2: CGPoint(x: 319.52, y: 247.57))
        bezier30Path.addCurve(to: CGPoint(x: 247.67, y: 249.05), controlPoint1: CGPoint(x: 281.84, y: 248.61), controlPoint2: CGPoint(x: 264.75, y: 249.97))
        bezier30Path.addCurve(to: CGPoint(x: 218.64, y: 248.97), controlPoint1: CGPoint(x: 238, y: 248.53), controlPoint2: CGPoint(x: 228.31, y: 248.4))
        bezier30Path.addCurve(to: CGPoint(x: 191.51, y: 249.16), controlPoint1: CGPoint(x: 209.6, y: 249.59), controlPoint2: CGPoint(x: 200.55, y: 248.6))
        bezier30Path.addCurve(to: CGPoint(x: 128.27, y: 249.17), controlPoint1: CGPoint(x: 170.43, y: 250.21), controlPoint2: CGPoint(x: 149.35, y: 247.55))
        bezier30Path.addCurve(to: CGPoint(x: 79.72, y: 249.17), controlPoint1: CGPoint(x: 112.09, y: 248.64), controlPoint2: CGPoint(x: 95.91, y: 249.85))
        bezier30Path.addCurve(to: CGPoint(x: 36, y: 249.85), controlPoint1: CGPoint(x: 65.16, y: 248.41), controlPoint2: CGPoint(x: 50.51, y: 248.17))
        bezier30Path.addCurve(to: CGPoint(x: 36.01, y: 235.49), controlPoint1: CGPoint(x: 35.97, y: 245.07), controlPoint2: CGPoint(x: 36.01, y: 240.28))
        bezier30Path.close()
        fillColor5770.setFill()
        bezier30Path.fill()




        //// #a73331ff
        //// Bezier 31 Drawing
        let bezier31Path = UIBezierPath()
        bezier31Path.move(to: CGPoint(x: 0.77, y: 244))
        bezier31Path.addLine(to: CGPoint(x: 0.83, y: 242.95))
        bezier31Path.addCurve(to: CGPoint(x: 1.17, y: 263.39), controlPoint1: CGPoint(x: 0.61, y: 249.76), controlPoint2: CGPoint(x: 1.08, y: 256.57))
        bezier31Path.addCurve(to: CGPoint(x: 1.68, y: 281.84), controlPoint1: CGPoint(x: 1.29, y: 269.55), controlPoint2: CGPoint(x: 1.55, y: 275.69))
        bezier31Path.addCurve(to: CGPoint(x: 29.52, y: 281.97), controlPoint1: CGPoint(x: 10.95, y: 282.2), controlPoint2: CGPoint(x: 20.24, y: 282.07))
        bezier31Path.addCurve(to: CGPoint(x: 29.64, y: 916.36), controlPoint1: CGPoint(x: 29.71, y: 493.44), controlPoint2: CGPoint(x: 29.45, y: 704.91))
        bezier31Path.addCurve(to: CGPoint(x: 443.69, y: 916.41), controlPoint1: CGPoint(x: 167.65, y: 916.44), controlPoint2: CGPoint(x: 305.68, y: 916.35))
        bezier31Path.addLine(to: CGPoint(x: 443.75, y: 915.25))
        bezier31Path.addCurve(to: CGPoint(x: 443.71, y: 907.64), controlPoint1: CGPoint(x: 443.79, y: 912.71), controlPoint2: CGPoint(x: 443.75, y: 910.16))
        bezier31Path.addCurve(to: CGPoint(x: 443.77, y: 804.64), controlPoint1: CGPoint(x: 444.24, y: 873.31), controlPoint2: CGPoint(x: 443.92, y: 838.97))
        bezier31Path.addCurve(to: CGPoint(x: 443.89, y: 375.33), controlPoint1: CGPoint(x: 443.25, y: 661.55), controlPoint2: CGPoint(x: 443.71, y: 518.44))
        bezier31Path.addCurve(to: CGPoint(x: 443.73, y: 269.71), controlPoint1: CGPoint(x: 443.89, y: 340.12), controlPoint2: CGPoint(x: 444.08, y: 304.91))
        bezier31Path.addCurve(to: CGPoint(x: 443.81, y: 265.97), controlPoint1: CGPoint(x: 443.76, y: 268.77), controlPoint2: CGPoint(x: 443.8, y: 266.91))
        bezier31Path.addCurve(to: CGPoint(x: 473.48, y: 267.96), controlPoint1: CGPoint(x: 453.67, y: 267.35), controlPoint2: CGPoint(x: 463.84, y: 265.16))
        bezier31Path.addCurve(to: CGPoint(x: 473.28, y: 474), controlPoint1: CGPoint(x: 473.01, y: 336.64), controlPoint2: CGPoint(x: 473.41, y: 405.32))
        bezier31Path.addCurve(to: CGPoint(x: 473.28, y: 916.67), controlPoint1: CGPoint(x: 473.29, y: 621.56), controlPoint2: CGPoint(x: 473.28, y: 769.11))
        bezier31Path.addCurve(to: CGPoint(x: 473.12, y: 945.63), controlPoint1: CGPoint(x: 473.24, y: 926.32), controlPoint2: CGPoint(x: 473.45, y: 935.97))
        bezier31Path.addCurve(to: CGPoint(x: 0.41, y: 945.59), controlPoint1: CGPoint(x: 315.55, y: 945.47), controlPoint2: CGPoint(x: 157.97, y: 945.55))
        bezier31Path.addCurve(to: CGPoint(x: 0.45, y: 257.99), controlPoint1: CGPoint(x: 0.51, y: 716.39), controlPoint2: CGPoint(x: 0.4, y: 487.19))
        bezier31Path.addCurve(to: CGPoint(x: 0.77, y: 244), controlPoint1: CGPoint(x: 0.27, y: 253.32), controlPoint2: CGPoint(x: 0.48, y: 248.65))
        bezier31Path.close()
        fillColor5771.setFill()
        bezier31Path.fill()


        //// Bezier 32 Drawing
        let bezier32Path = UIBezierPath()
        bezier32Path.move(to: CGPoint(x: 36.05, y: 284.52))
        bezier32Path.addCurve(to: CGPoint(x: 67.28, y: 283.8), controlPoint1: CGPoint(x: 46.41, y: 283.28), controlPoint2: CGPoint(x: 56.88, y: 282.76))
        bezier32Path.addCurve(to: CGPoint(x: 98.24, y: 283.8), controlPoint1: CGPoint(x: 77.59, y: 284.79), controlPoint2: CGPoint(x: 87.92, y: 283.56))
        bezier32Path.addCurve(to: CGPoint(x: 134.59, y: 283.44), controlPoint1: CGPoint(x: 110.36, y: 284), controlPoint2: CGPoint(x: 122.49, y: 284.36))
        bezier32Path.addCurve(to: CGPoint(x: 167.29, y: 284.12), controlPoint1: CGPoint(x: 145.51, y: 282.56), controlPoint2: CGPoint(x: 156.37, y: 284.71))
        bezier32Path.addCurve(to: CGPoint(x: 212.84, y: 283.85), controlPoint1: CGPoint(x: 182.47, y: 283.25), controlPoint2: CGPoint(x: 197.67, y: 284.49))
        bezier32Path.addCurve(to: CGPoint(x: 237.95, y: 283.79), controlPoint1: CGPoint(x: 221.2, y: 283.27), controlPoint2: CGPoint(x: 229.6, y: 282.92))
        bezier32Path.addCurve(to: CGPoint(x: 269.93, y: 283.81), controlPoint1: CGPoint(x: 248.6, y: 284.81), controlPoint2: CGPoint(x: 259.27, y: 283.48))
        bezier32Path.addCurve(to: CGPoint(x: 305.25, y: 283.44), controlPoint1: CGPoint(x: 281.71, y: 284.03), controlPoint2: CGPoint(x: 293.49, y: 284.32))
        bezier32Path.addCurve(to: CGPoint(x: 338.68, y: 284.09), controlPoint1: CGPoint(x: 316.41, y: 282.56), controlPoint2: CGPoint(x: 327.52, y: 284.77))
        bezier32Path.addCurve(to: CGPoint(x: 394.63, y: 283.28), controlPoint1: CGPoint(x: 357.32, y: 283.25), controlPoint2: CGPoint(x: 376, y: 284.85))
        bezier32Path.addCurve(to: CGPoint(x: 437.67, y: 283.44), controlPoint1: CGPoint(x: 408.97, y: 283.61), controlPoint2: CGPoint(x: 423.33, y: 284.95))
        bezier32Path.addCurve(to: CGPoint(x: 437.92, y: 871.72), controlPoint1: CGPoint(x: 438.01, y: 479.53), controlPoint2: CGPoint(x: 437.59, y: 675.63))
        bezier32Path.addCurve(to: CGPoint(x: 437.24, y: 909.75), controlPoint1: CGPoint(x: 437.16, y: 884.39), controlPoint2: CGPoint(x: 438.24, y: 897.08))
        bezier32Path.addCurve(to: CGPoint(x: 373.33, y: 909.99), controlPoint1: CGPoint(x: 415.95, y: 910.37), controlPoint2: CGPoint(x: 394.64, y: 909.79))
        bezier32Path.addCurve(to: CGPoint(x: 36.08, y: 909.92), controlPoint1: CGPoint(x: 260.92, y: 909.95), controlPoint2: CGPoint(x: 148.49, y: 910.07))
        bezier32Path.addCurve(to: CGPoint(x: 35.61, y: 854.92), controlPoint1: CGPoint(x: 35.64, y: 891.59), controlPoint2: CGPoint(x: 36.36, y: 873.24))
        bezier32Path.addCurve(to: CGPoint(x: 36.03, y: 787.33), controlPoint1: CGPoint(x: 36.57, y: 832.4), controlPoint2: CGPoint(x: 35.79, y: 809.85))
        bezier32Path.addCurve(to: CGPoint(x: 35.68, y: 741.61), controlPoint1: CGPoint(x: 35.95, y: 772.09), controlPoint2: CGPoint(x: 36.04, y: 756.85))
        bezier32Path.addCurve(to: CGPoint(x: 36, y: 647.33), controlPoint1: CGPoint(x: 36.55, y: 710.2), controlPoint2: CGPoint(x: 35.85, y: 678.76))
        bezier32Path.addCurve(to: CGPoint(x: 35.84, y: 553.53), controlPoint1: CGPoint(x: 35.72, y: 616.07), controlPoint2: CGPoint(x: 36.37, y: 584.8))
        bezier32Path.addCurve(to: CGPoint(x: 35.68, y: 481.05), controlPoint1: CGPoint(x: 35.96, y: 529.37), controlPoint2: CGPoint(x: 36.45, y: 505.2))
        bezier32Path.addCurve(to: CGPoint(x: 36.07, y: 410.01), controlPoint1: CGPoint(x: 36.27, y: 457.37), controlPoint2: CGPoint(x: 35.89, y: 433.69))
        bezier32Path.addCurve(to: CGPoint(x: 35.65, y: 393.05), controlPoint1: CGPoint(x: 36.11, y: 404.35), controlPoint2: CGPoint(x: 35.97, y: 398.69))
        bezier32Path.addCurve(to: CGPoint(x: 36.05, y: 284.52), controlPoint1: CGPoint(x: 36.4, y: 356.88), controlPoint2: CGPoint(x: 35.77, y: 320.69))
        bezier32Path.close()
        fillColor5771.setFill()
        bezier32Path.fill()




        //// #ca4340ff
        //// Bezier 33 Drawing
        let bezier33Path = UIBezierPath()
        bezier33Path.move(to: CGPoint(x: 443.97, y: 244.56))
        bezier33Path.addCurve(to: CGPoint(x: 471.51, y: 244.8), controlPoint1: CGPoint(x: 453.11, y: 245.75), controlPoint2: CGPoint(x: 462.35, y: 245.75))
        bezier33Path.addCurve(to: CGPoint(x: 473, y: 255.72), controlPoint1: CGPoint(x: 472.03, y: 248.43), controlPoint2: CGPoint(x: 472.6, y: 252.07))
        bezier33Path.addCurve(to: CGPoint(x: 473.48, y: 267.96), controlPoint1: CGPoint(x: 473.37, y: 259.79), controlPoint2: CGPoint(x: 473.32, y: 263.88))
        bezier33Path.addCurve(to: CGPoint(x: 443.81, y: 265.97), controlPoint1: CGPoint(x: 463.84, y: 265.16), controlPoint2: CGPoint(x: 453.67, y: 267.35))
        bezier33Path.addCurve(to: CGPoint(x: 443.97, y: 244.56), controlPoint1: CGPoint(x: 443.96, y: 258.84), controlPoint2: CGPoint(x: 443.91, y: 251.71))
        bezier33Path.close()
        fillColor5772.setFill()
        bezier33Path.fill()




        //// #ca433fff
        //// Bezier 34 Drawing
        let bezier34Path = UIBezierPath()
        bezier34Path.move(to: CGPoint(x: 36, y: 249.85))
        bezier34Path.addCurve(to: CGPoint(x: 79.72, y: 249.17), controlPoint1: CGPoint(x: 50.51, y: 248.17), controlPoint2: CGPoint(x: 65.16, y: 248.41))
        bezier34Path.addCurve(to: CGPoint(x: 128.27, y: 249.17), controlPoint1: CGPoint(x: 95.91, y: 249.85), controlPoint2: CGPoint(x: 112.09, y: 248.64))
        bezier34Path.addCurve(to: CGPoint(x: 191.51, y: 249.16), controlPoint1: CGPoint(x: 149.35, y: 247.55), controlPoint2: CGPoint(x: 170.43, y: 250.21))
        bezier34Path.addCurve(to: CGPoint(x: 218.64, y: 248.97), controlPoint1: CGPoint(x: 200.55, y: 248.6), controlPoint2: CGPoint(x: 209.6, y: 249.59))
        bezier34Path.addCurve(to: CGPoint(x: 247.67, y: 249.05), controlPoint1: CGPoint(x: 228.31, y: 248.4), controlPoint2: CGPoint(x: 238, y: 248.53))
        bezier34Path.addCurve(to: CGPoint(x: 298.93, y: 249.17), controlPoint1: CGPoint(x: 264.75, y: 249.97), controlPoint2: CGPoint(x: 281.84, y: 248.61))
        bezier34Path.addCurve(to: CGPoint(x: 360.72, y: 249.21), controlPoint1: CGPoint(x: 319.52, y: 247.57), controlPoint2: CGPoint(x: 340.11, y: 250.12))
        bezier34Path.addCurve(to: CGPoint(x: 393.27, y: 248.8), controlPoint1: CGPoint(x: 371.56, y: 248.57), controlPoint2: CGPoint(x: 382.43, y: 249.71))
        bezier34Path.addCurve(to: CGPoint(x: 437.69, y: 248.95), controlPoint1: CGPoint(x: 408.08, y: 247.73), controlPoint2: CGPoint(x: 422.89, y: 250.29))
        bezier34Path.addCurve(to: CGPoint(x: 437.71, y: 263.41), controlPoint1: CGPoint(x: 437.69, y: 253.77), controlPoint2: CGPoint(x: 437.68, y: 258.59))
        bezier34Path.addCurve(to: CGPoint(x: 230.67, y: 263.53), controlPoint1: CGPoint(x: 368.69, y: 263.69), controlPoint2: CGPoint(x: 299.68, y: 263.45))
        bezier34Path.addCurve(to: CGPoint(x: 35.93, y: 263.39), controlPoint1: CGPoint(x: 165.76, y: 263.44), controlPoint2: CGPoint(x: 100.84, y: 263.73))
        bezier34Path.addCurve(to: CGPoint(x: 36, y: 249.85), controlPoint1: CGPoint(x: 36.09, y: 258.88), controlPoint2: CGPoint(x: 36.04, y: 254.36))
        bezier34Path.close()
        fillColor5773.setFill()
        bezier34Path.fill()




        //// #cb806bff
        //// Bezier 35 Drawing
        let bezier35Path = UIBezierPath()
        bezier35Path.move(to: CGPoint(x: 30.15, y: 256))
        bezier35Path.addLine(to: CGPoint(x: 30.24, y: 257.32))
        bezier35Path.addCurve(to: CGPoint(x: 30.4, y: 336.45), controlPoint1: CGPoint(x: 30.25, y: 283.69), controlPoint2: CGPoint(x: 30.13, y: 310.08))
        bezier35Path.addCurve(to: CGPoint(x: 30.48, y: 421.77), controlPoint1: CGPoint(x: 29.96, y: 364.89), controlPoint2: CGPoint(x: 30.41, y: 393.33))
        bezier35Path.addCurve(to: CGPoint(x: 30.67, y: 491.08), controlPoint1: CGPoint(x: 29.96, y: 444.87), controlPoint2: CGPoint(x: 30.69, y: 467.97))
        bezier35Path.addCurve(to: CGPoint(x: 30.8, y: 551.36), controlPoint1: CGPoint(x: 30.39, y: 511.17), controlPoint2: CGPoint(x: 30.77, y: 531.27))
        bezier35Path.addCurve(to: CGPoint(x: 30.85, y: 731.59), controlPoint1: CGPoint(x: 30.68, y: 611.44), controlPoint2: CGPoint(x: 30.61, y: 671.51))
        bezier35Path.addCurve(to: CGPoint(x: 30.65, y: 814.24), controlPoint1: CGPoint(x: 30.72, y: 759.13), controlPoint2: CGPoint(x: 30.37, y: 786.68))
        bezier35Path.addCurve(to: CGPoint(x: 30.49, y: 880.92), controlPoint1: CGPoint(x: 30.73, y: 836.47), controlPoint2: CGPoint(x: 29.81, y: 858.69))
        bezier35Path.addCurve(to: CGPoint(x: 30.49, y: 915.49), controlPoint1: CGPoint(x: 30.69, y: 892.44), controlPoint2: CGPoint(x: 29.95, y: 903.97))
        bezier35Path.addCurve(to: CGPoint(x: 124, y: 915.77), controlPoint1: CGPoint(x: 61.65, y: 916.16), controlPoint2: CGPoint(x: 92.83, y: 915.59))
        bezier35Path.addCurve(to: CGPoint(x: 410.67, y: 915.76), controlPoint1: CGPoint(x: 219.56, y: 915.77), controlPoint2: CGPoint(x: 315.11, y: 915.77))
        bezier35Path.addCurve(to: CGPoint(x: 443.75, y: 915.25), controlPoint1: CGPoint(x: 421.69, y: 915.69), controlPoint2: CGPoint(x: 432.73, y: 916.15))
        bezier35Path.addLine(to: CGPoint(x: 443.69, y: 916.41))
        bezier35Path.addCurve(to: CGPoint(x: 29.64, y: 916.36), controlPoint1: CGPoint(x: 305.68, y: 916.35), controlPoint2: CGPoint(x: 167.65, y: 916.44))
        bezier35Path.addCurve(to: CGPoint(x: 29.52, y: 281.97), controlPoint1: CGPoint(x: 29.45, y: 704.91), controlPoint2: CGPoint(x: 29.71, y: 493.44))
        bezier35Path.addCurve(to: CGPoint(x: 29.53, y: 263.4), controlPoint1: CGPoint(x: 29.56, y: 275.79), controlPoint2: CGPoint(x: 29.36, y: 269.6))
        bezier35Path.addCurve(to: CGPoint(x: 30.15, y: 256), controlPoint1: CGPoint(x: 29.69, y: 260.93), controlPoint2: CGPoint(x: 29.97, y: 258.47))
        bezier35Path.close()
        fillColor5774.setFill()
        bezier35Path.fill()




        //// #b23d38ff
        //// Bezier 36 Drawing
        let bezier36Path = UIBezierPath()
        bezier36Path.move(to: CGPoint(x: 1.17, y: 263.39))
        bezier36Path.addCurve(to: CGPoint(x: 29.53, y: 263.4), controlPoint1: CGPoint(x: 10.63, y: 263.37), controlPoint2: CGPoint(x: 20.08, y: 263.35))
        bezier36Path.addCurve(to: CGPoint(x: 29.52, y: 281.97), controlPoint1: CGPoint(x: 29.36, y: 269.6), controlPoint2: CGPoint(x: 29.56, y: 275.79))
        bezier36Path.addCurve(to: CGPoint(x: 1.68, y: 281.84), controlPoint1: CGPoint(x: 20.24, y: 282.07), controlPoint2: CGPoint(x: 10.95, y: 282.2))
        bezier36Path.addCurve(to: CGPoint(x: 1.17, y: 263.39), controlPoint1: CGPoint(x: 1.55, y: 275.69), controlPoint2: CGPoint(x: 1.29, y: 269.55))
        bezier36Path.close()
        fillColor5775.setFill()
        bezier36Path.fill()


        //// Bezier 37 Drawing
        let bezier37Path = UIBezierPath()
        bezier37Path.move(to: CGPoint(x: 35.93, y: 263.39))
        bezier37Path.addCurve(to: CGPoint(x: 230.67, y: 263.53), controlPoint1: CGPoint(x: 100.84, y: 263.73), controlPoint2: CGPoint(x: 165.76, y: 263.44))
        bezier37Path.addCurve(to: CGPoint(x: 437.71, y: 263.41), controlPoint1: CGPoint(x: 299.68, y: 263.45), controlPoint2: CGPoint(x: 368.69, y: 263.69))
        bezier37Path.addCurve(to: CGPoint(x: 437.67, y: 283.44), controlPoint1: CGPoint(x: 437.75, y: 270.08), controlPoint2: CGPoint(x: 437.69, y: 276.76))
        bezier37Path.addCurve(to: CGPoint(x: 394.63, y: 283.28), controlPoint1: CGPoint(x: 423.33, y: 284.95), controlPoint2: CGPoint(x: 408.97, y: 283.61))
        bezier37Path.addCurve(to: CGPoint(x: 338.68, y: 284.09), controlPoint1: CGPoint(x: 376, y: 284.85), controlPoint2: CGPoint(x: 357.32, y: 283.25))
        bezier37Path.addCurve(to: CGPoint(x: 305.25, y: 283.44), controlPoint1: CGPoint(x: 327.52, y: 284.77), controlPoint2: CGPoint(x: 316.41, y: 282.56))
        bezier37Path.addCurve(to: CGPoint(x: 269.93, y: 283.81), controlPoint1: CGPoint(x: 293.49, y: 284.32), controlPoint2: CGPoint(x: 281.71, y: 284.03))
        bezier37Path.addCurve(to: CGPoint(x: 237.95, y: 283.79), controlPoint1: CGPoint(x: 259.27, y: 283.48), controlPoint2: CGPoint(x: 248.6, y: 284.81))
        bezier37Path.addCurve(to: CGPoint(x: 212.84, y: 283.85), controlPoint1: CGPoint(x: 229.6, y: 282.92), controlPoint2: CGPoint(x: 221.2, y: 283.27))
        bezier37Path.addCurve(to: CGPoint(x: 167.29, y: 284.12), controlPoint1: CGPoint(x: 197.67, y: 284.49), controlPoint2: CGPoint(x: 182.47, y: 283.25))
        bezier37Path.addCurve(to: CGPoint(x: 134.59, y: 283.44), controlPoint1: CGPoint(x: 156.37, y: 284.71), controlPoint2: CGPoint(x: 145.51, y: 282.56))
        bezier37Path.addCurve(to: CGPoint(x: 98.24, y: 283.8), controlPoint1: CGPoint(x: 122.49, y: 284.36), controlPoint2: CGPoint(x: 110.36, y: 284))
        bezier37Path.addCurve(to: CGPoint(x: 67.28, y: 283.8), controlPoint1: CGPoint(x: 87.92, y: 283.56), controlPoint2: CGPoint(x: 77.59, y: 284.79))
        bezier37Path.addCurve(to: CGPoint(x: 36.05, y: 284.52), controlPoint1: CGPoint(x: 56.88, y: 282.76), controlPoint2: CGPoint(x: 46.41, y: 283.28))
        bezier37Path.addCurve(to: CGPoint(x: 35.61, y: 271.72), controlPoint1: CGPoint(x: 36.03, y: 280.24), controlPoint2: CGPoint(x: 35.84, y: 275.97))
        bezier37Path.addCurve(to: CGPoint(x: 35.93, y: 263.39), controlPoint1: CGPoint(x: 35.67, y: 268.93), controlPoint2: CGPoint(x: 35.84, y: 266.16))
        bezier37Path.close()
        fillColor5775.setFill()
        bezier37Path.fill()




        //// #f1ce81ff
        //// Bezier 38 Drawing
        let bezier38Path = UIBezierPath()
        bezier38Path.move(to: CGPoint(x: 442.6, y: 317.27))
        bezier38Path.addCurve(to: CGPoint(x: 443.73, y: 269.71), controlPoint1: CGPoint(x: 443.76, y: 301.43), controlPoint2: CGPoint(x: 442.29, y: 285.53))
        bezier38Path.addCurve(to: CGPoint(x: 443.89, y: 375.33), controlPoint1: CGPoint(x: 444.08, y: 304.91), controlPoint2: CGPoint(x: 443.89, y: 340.12))
        bezier38Path.addCurve(to: CGPoint(x: 443.77, y: 804.64), controlPoint1: CGPoint(x: 443.71, y: 518.44), controlPoint2: CGPoint(x: 443.25, y: 661.55))
        bezier38Path.addLine(to: CGPoint(x: 442.35, y: 804.72))
        bezier38Path.addCurve(to: CGPoint(x: 442.6, y: 736.65), controlPoint1: CGPoint(x: 442.55, y: 782.04), controlPoint2: CGPoint(x: 443.33, y: 759.33))
        bezier38Path.addCurve(to: CGPoint(x: 442.77, y: 650), controlPoint1: CGPoint(x: 442.13, y: 707.77), controlPoint2: CGPoint(x: 442.95, y: 678.89))
        bezier38Path.addCurve(to: CGPoint(x: 442.63, y: 552.67), controlPoint1: CGPoint(x: 442.97, y: 617.56), controlPoint2: CGPoint(x: 442.53, y: 585.11))
        bezier38Path.addCurve(to: CGPoint(x: 442.61, y: 485.99), controlPoint1: CGPoint(x: 443.4, y: 530.44), controlPoint2: CGPoint(x: 441.92, y: 508.21))
        bezier38Path.addCurve(to: CGPoint(x: 442.17, y: 404.04), controlPoint1: CGPoint(x: 443.25, y: 458.68), controlPoint2: CGPoint(x: 442.19, y: 431.36))
        bezier38Path.addCurve(to: CGPoint(x: 438.64, y: 403.09), controlPoint1: CGPoint(x: 441.29, y: 403.8), controlPoint2: CGPoint(x: 439.53, y: 403.33))
        bezier38Path.addCurve(to: CGPoint(x: 438.76, y: 318.24), controlPoint1: CGPoint(x: 437.92, y: 374.81), controlPoint2: CGPoint(x: 439.19, y: 346.52))
        bezier38Path.addCurve(to: CGPoint(x: 442.6, y: 317.27), controlPoint1: CGPoint(x: 439.72, y: 318), controlPoint2: CGPoint(x: 441.64, y: 317.51))
        bezier38Path.close()
        fillColor5776.setFill()
        bezier38Path.fill()




        //// #efc87aff
        //// Bezier 39 Drawing
        let bezier39Path = UIBezierPath()
        bezier39Path.move(to: CGPoint(x: 30.4, y: 336.45))
        bezier39Path.addCurve(to: CGPoint(x: 34.2, y: 337.36), controlPoint1: CGPoint(x: 31.35, y: 336.68), controlPoint2: CGPoint(x: 33.25, y: 337.13))
        bezier39Path.addCurve(to: CGPoint(x: 35.65, y: 393.05), controlPoint1: CGPoint(x: 35.08, y: 355.92), controlPoint2: CGPoint(x: 33.45, y: 374.57))
        bezier39Path.addCurve(to: CGPoint(x: 36.07, y: 410.01), controlPoint1: CGPoint(x: 35.97, y: 398.69), controlPoint2: CGPoint(x: 36.11, y: 404.35))
        bezier39Path.addCurve(to: CGPoint(x: 35.68, y: 481.05), controlPoint1: CGPoint(x: 35.89, y: 433.69), controlPoint2: CGPoint(x: 36.27, y: 457.37))
        bezier39Path.addCurve(to: CGPoint(x: 34.16, y: 422.71), controlPoint1: CGPoint(x: 33.8, y: 461.67), controlPoint2: CGPoint(x: 34.99, y: 442.15))
        bezier39Path.addCurve(to: CGPoint(x: 30.48, y: 421.77), controlPoint1: CGPoint(x: 33.24, y: 422.48), controlPoint2: CGPoint(x: 31.4, y: 422.01))
        bezier39Path.addCurve(to: CGPoint(x: 30.4, y: 336.45), controlPoint1: CGPoint(x: 30.41, y: 393.33), controlPoint2: CGPoint(x: 29.96, y: 364.89))
        bezier39Path.close()
        fillColor5777.setFill()
        bezier39Path.fill()




        //// #e9ba6aff
        //// Bezier 40 Drawing
        let bezier40Path = UIBezierPath()
        bezier40Path.move(to: CGPoint(x: 438.64, y: 403.09))
        bezier40Path.addCurve(to: CGPoint(x: 442.17, y: 404.04), controlPoint1: CGPoint(x: 439.53, y: 403.33), controlPoint2: CGPoint(x: 441.29, y: 403.8))
        bezier40Path.addCurve(to: CGPoint(x: 442.61, y: 485.99), controlPoint1: CGPoint(x: 442.19, y: 431.36), controlPoint2: CGPoint(x: 443.25, y: 458.68))
        bezier40Path.addCurve(to: CGPoint(x: 438.52, y: 485.97), controlPoint1: CGPoint(x: 441.59, y: 485.99), controlPoint2: CGPoint(x: 439.53, y: 485.99))
        bezier40Path.addCurve(to: CGPoint(x: 438.64, y: 403.09), controlPoint1: CGPoint(x: 437.89, y: 458.35), controlPoint2: CGPoint(x: 438.97, y: 430.72))
        bezier40Path.close()
        fillColor5778.setFill()
        bezier40Path.fill()


        //// Bezier 41 Drawing
        let bezier41Path = UIBezierPath()
        bezier41Path.move(to: CGPoint(x: 34.75, y: 764.68))
        bezier41Path.addCurve(to: CGPoint(x: 35.68, y: 741.61), controlPoint1: CGPoint(x: 34.63, y: 756.97), controlPoint2: CGPoint(x: 34.91, y: 749.28))
        bezier41Path.addCurve(to: CGPoint(x: 36.03, y: 787.33), controlPoint1: CGPoint(x: 36.04, y: 756.85), controlPoint2: CGPoint(x: 35.95, y: 772.09))
        bezier41Path.addCurve(to: CGPoint(x: 35.61, y: 854.92), controlPoint1: CGPoint(x: 35.79, y: 809.85), controlPoint2: CGPoint(x: 36.57, y: 832.4))
        bezier41Path.addCurve(to: CGPoint(x: 34.24, y: 879.99), controlPoint1: CGPoint(x: 34.28, y: 863.2), controlPoint2: CGPoint(x: 34.15, y: 871.61))
        bezier41Path.addCurve(to: CGPoint(x: 30.49, y: 880.92), controlPoint1: CGPoint(x: 33.31, y: 880.21), controlPoint2: CGPoint(x: 31.43, y: 880.68))
        bezier41Path.addCurve(to: CGPoint(x: 30.65, y: 814.24), controlPoint1: CGPoint(x: 29.81, y: 858.69), controlPoint2: CGPoint(x: 30.73, y: 836.47))
        bezier41Path.addCurve(to: CGPoint(x: 34.16, y: 813.24), controlPoint1: CGPoint(x: 31.53, y: 813.99), controlPoint2: CGPoint(x: 33.28, y: 813.49))
        bezier41Path.addCurve(to: CGPoint(x: 34.75, y: 764.68), controlPoint1: CGPoint(x: 34.31, y: 797.05), controlPoint2: CGPoint(x: 34.59, y: 780.87))
        bezier41Path.close()
        fillColor5778.setFill()
        bezier41Path.fill()




        //// #e6b365ff
        //// Bezier 42 Drawing
        let bezier42Path = UIBezierPath()
        bezier42Path.move(to: CGPoint(x: 30.48, y: 421.77))
        bezier42Path.addCurve(to: CGPoint(x: 34.16, y: 422.71), controlPoint1: CGPoint(x: 31.4, y: 422.01), controlPoint2: CGPoint(x: 33.24, y: 422.48))
        bezier42Path.addCurve(to: CGPoint(x: 35.68, y: 481.05), controlPoint1: CGPoint(x: 34.99, y: 442.15), controlPoint2: CGPoint(x: 33.8, y: 461.67))
        bezier42Path.addCurve(to: CGPoint(x: 35.84, y: 553.53), controlPoint1: CGPoint(x: 36.45, y: 505.2), controlPoint2: CGPoint(x: 35.96, y: 529.37))
        bezier42Path.addLine(to: CGPoint(x: 34.63, y: 554.45))
        bezier42Path.addCurve(to: CGPoint(x: 34.75, y: 551.41), controlPoint1: CGPoint(x: 34.65, y: 553.69), controlPoint2: CGPoint(x: 34.72, y: 552.17))
        bezier42Path.addCurve(to: CGPoint(x: 34.15, y: 492.05), controlPoint1: CGPoint(x: 35.23, y: 531.63), controlPoint2: CGPoint(x: 34.27, y: 511.84))
        bezier42Path.addCurve(to: CGPoint(x: 30.67, y: 491.08), controlPoint1: CGPoint(x: 33.28, y: 491.81), controlPoint2: CGPoint(x: 31.53, y: 491.32))
        bezier42Path.addCurve(to: CGPoint(x: 30.48, y: 421.77), controlPoint1: CGPoint(x: 30.69, y: 467.97), controlPoint2: CGPoint(x: 29.96, y: 444.87))
        bezier42Path.close()
        fillColor5779.setFill()
        bezier42Path.fill()




        //// #e0a055ff
        //// Bezier 43 Drawing
        let bezier43Path = UIBezierPath()
        bezier43Path.move(to: CGPoint(x: 438.52, y: 485.97))
        bezier43Path.addCurve(to: CGPoint(x: 442.61, y: 485.99), controlPoint1: CGPoint(x: 439.53, y: 485.99), controlPoint2: CGPoint(x: 441.59, y: 485.99))
        bezier43Path.addCurve(to: CGPoint(x: 442.63, y: 552.67), controlPoint1: CGPoint(x: 441.92, y: 508.21), controlPoint2: CGPoint(x: 443.4, y: 530.44))
        bezier43Path.addCurve(to: CGPoint(x: 438.49, y: 552.67), controlPoint1: CGPoint(x: 441.6, y: 552.67), controlPoint2: CGPoint(x: 439.53, y: 552.67))
        bezier43Path.addCurve(to: CGPoint(x: 438.52, y: 485.97), controlPoint1: CGPoint(x: 438, y: 530.44), controlPoint2: CGPoint(x: 438.75, y: 508.2))
        bezier43Path.close()
        fillColor5780.setFill()
        bezier43Path.fill()




        //// #e09f55ff
        //// Bezier 44 Drawing
        let bezier44Path = UIBezierPath()
        bezier44Path.move(to: CGPoint(x: 30.67, y: 491.08))
        bezier44Path.addCurve(to: CGPoint(x: 34.15, y: 492.05), controlPoint1: CGPoint(x: 31.53, y: 491.32), controlPoint2: CGPoint(x: 33.28, y: 491.81))
        bezier44Path.addCurve(to: CGPoint(x: 34.75, y: 551.41), controlPoint1: CGPoint(x: 34.27, y: 511.84), controlPoint2: CGPoint(x: 35.23, y: 531.63))
        bezier44Path.addCurve(to: CGPoint(x: 30.8, y: 551.36), controlPoint1: CGPoint(x: 33.76, y: 551.4), controlPoint2: CGPoint(x: 31.79, y: 551.37))
        bezier44Path.addCurve(to: CGPoint(x: 30.67, y: 491.08), controlPoint1: CGPoint(x: 30.77, y: 531.27), controlPoint2: CGPoint(x: 30.39, y: 511.17))
        bezier44Path.close()
        fillColor5781.setFill()
        bezier44Path.fill()




        //// #d68441ff
        //// Bezier 45 Drawing
        let bezier45Path = UIBezierPath()
        bezier45Path.move(to: CGPoint(x: 30.8, y: 551.36))
        bezier45Path.addCurve(to: CGPoint(x: 34.75, y: 551.41), controlPoint1: CGPoint(x: 31.79, y: 551.37), controlPoint2: CGPoint(x: 33.76, y: 551.4))
        bezier45Path.addCurve(to: CGPoint(x: 34.63, y: 554.45), controlPoint1: CGPoint(x: 34.72, y: 552.17), controlPoint2: CGPoint(x: 34.65, y: 553.69))
        bezier45Path.addCurve(to: CGPoint(x: 34.65, y: 587.32), controlPoint1: CGPoint(x: 33.67, y: 565.39), controlPoint2: CGPoint(x: 34.6, y: 576.37))
        bezier45Path.addCurve(to: CGPoint(x: 34.17, y: 730.56), controlPoint1: CGPoint(x: 35.16, y: 635.07), controlPoint2: CGPoint(x: 34.36, y: 682.81))
        bezier45Path.addCurve(to: CGPoint(x: 30.85, y: 731.59), controlPoint1: CGPoint(x: 33.35, y: 730.81), controlPoint2: CGPoint(x: 31.69, y: 731.33))
        bezier45Path.addCurve(to: CGPoint(x: 30.8, y: 551.36), controlPoint1: CGPoint(x: 30.61, y: 671.51), controlPoint2: CGPoint(x: 30.68, y: 611.44))
        bezier45Path.close()
        fillColor5782.setFill()
        bezier45Path.fill()


        //// Bezier 46 Drawing
        let bezier46Path = UIBezierPath()
        bezier46Path.move(to: CGPoint(x: 438.49, y: 552.67))
        bezier46Path.addCurve(to: CGPoint(x: 442.63, y: 552.67), controlPoint1: CGPoint(x: 439.53, y: 552.67), controlPoint2: CGPoint(x: 441.6, y: 552.67))
        bezier46Path.addCurve(to: CGPoint(x: 442.77, y: 650), controlPoint1: CGPoint(x: 442.53, y: 585.11), controlPoint2: CGPoint(x: 442.97, y: 617.56))
        bezier46Path.addCurve(to: CGPoint(x: 442.6, y: 736.65), controlPoint1: CGPoint(x: 442.95, y: 678.89), controlPoint2: CGPoint(x: 442.13, y: 707.77))
        bezier46Path.addCurve(to: CGPoint(x: 438.51, y: 736.67), controlPoint1: CGPoint(x: 441.59, y: 736.67), controlPoint2: CGPoint(x: 439.53, y: 736.67))
        bezier46Path.addCurve(to: CGPoint(x: 438.49, y: 552.67), controlPoint1: CGPoint(x: 438.4, y: 675.33), controlPoint2: CGPoint(x: 438.19, y: 614))
        bezier46Path.close()
        fillColor5782.setFill()
        bezier46Path.fill()




        //// #df9f54ff
        //// Bezier 47 Drawing
        let bezier47Path = UIBezierPath()
        bezier47Path.move(to: CGPoint(x: 34.63, y: 554.45))
        bezier47Path.addLine(to: CGPoint(x: 35.84, y: 553.53))
        bezier47Path.addCurve(to: CGPoint(x: 36, y: 647.33), controlPoint1: CGPoint(x: 36.37, y: 584.8), controlPoint2: CGPoint(x: 35.72, y: 616.07))
        bezier47Path.addCurve(to: CGPoint(x: 35.68, y: 741.61), controlPoint1: CGPoint(x: 35.85, y: 678.76), controlPoint2: CGPoint(x: 36.55, y: 710.2))
        bezier47Path.addCurve(to: CGPoint(x: 34.75, y: 764.68), controlPoint1: CGPoint(x: 34.91, y: 749.28), controlPoint2: CGPoint(x: 34.63, y: 756.97))
        bezier47Path.addCurve(to: CGPoint(x: 34.16, y: 813.24), controlPoint1: CGPoint(x: 34.59, y: 780.87), controlPoint2: CGPoint(x: 34.31, y: 797.05))
        bezier47Path.addCurve(to: CGPoint(x: 30.65, y: 814.24), controlPoint1: CGPoint(x: 33.28, y: 813.49), controlPoint2: CGPoint(x: 31.53, y: 813.99))
        bezier47Path.addCurve(to: CGPoint(x: 30.85, y: 731.59), controlPoint1: CGPoint(x: 30.37, y: 786.68), controlPoint2: CGPoint(x: 30.72, y: 759.13))
        bezier47Path.addCurve(to: CGPoint(x: 34.17, y: 730.56), controlPoint1: CGPoint(x: 31.69, y: 731.33), controlPoint2: CGPoint(x: 33.35, y: 730.81))
        bezier47Path.addCurve(to: CGPoint(x: 34.65, y: 587.32), controlPoint1: CGPoint(x: 34.36, y: 682.81), controlPoint2: CGPoint(x: 35.16, y: 635.07))
        bezier47Path.addCurve(to: CGPoint(x: 34.63, y: 554.45), controlPoint1: CGPoint(x: 34.6, y: 576.37), controlPoint2: CGPoint(x: 33.67, y: 565.39))
        bezier47Path.close()
        fillColor5783.setFill()
        bezier47Path.fill()




        //// #e1a458ff
        //// Bezier 48 Drawing
        let bezier48Path = UIBezierPath()
        bezier48Path.move(to: CGPoint(x: 438.51, y: 736.67))
        bezier48Path.addCurve(to: CGPoint(x: 442.6, y: 736.65), controlPoint1: CGPoint(x: 439.53, y: 736.67), controlPoint2: CGPoint(x: 441.59, y: 736.67))
        bezier48Path.addCurve(to: CGPoint(x: 442.35, y: 804.72), controlPoint1: CGPoint(x: 443.33, y: 759.33), controlPoint2: CGPoint(x: 442.55, y: 782.04))
        bezier48Path.addCurve(to: CGPoint(x: 442.19, y: 829.27), controlPoint1: CGPoint(x: 442.28, y: 812.91), controlPoint2: CGPoint(x: 442.24, y: 821.08))
        bezier48Path.addCurve(to: CGPoint(x: 438.65, y: 830.25), controlPoint1: CGPoint(x: 441.31, y: 829.52), controlPoint2: CGPoint(x: 439.53, y: 830.01))
        bezier48Path.addCurve(to: CGPoint(x: 438.51, y: 736.67), controlPoint1: CGPoint(x: 438.84, y: 799.07), controlPoint2: CGPoint(x: 437.91, y: 767.87))
        bezier48Path.close()
        fillColor5784.setFill()
        bezier48Path.fill()




        //// #ecc171ff
        //// Bezier 49 Drawing
        let bezier49Path = UIBezierPath()
        bezier49Path.move(to: CGPoint(x: 442.35, y: 804.72))
        bezier49Path.addLine(to: CGPoint(x: 443.77, y: 804.64))
        bezier49Path.addCurve(to: CGPoint(x: 443.71, y: 907.64), controlPoint1: CGPoint(x: 443.92, y: 838.97), controlPoint2: CGPoint(x: 444.24, y: 873.31))
        bezier49Path.addCurve(to: CGPoint(x: 442.69, y: 884.91), controlPoint1: CGPoint(x: 443.37, y: 900.05), controlPoint2: CGPoint(x: 442.83, y: 892.48))
        bezier49Path.addCurve(to: CGPoint(x: 438.77, y: 884.89), controlPoint1: CGPoint(x: 441.71, y: 884.91), controlPoint2: CGPoint(x: 439.76, y: 884.89))
        bezier49Path.addCurve(to: CGPoint(x: 438.37, y: 909.63), controlPoint1: CGPoint(x: 438.24, y: 893.13), controlPoint2: CGPoint(x: 438.35, y: 901.39))
        bezier49Path.addLine(to: CGPoint(x: 437.24, y: 909.75))
        bezier49Path.addCurve(to: CGPoint(x: 437.92, y: 871.72), controlPoint1: CGPoint(x: 438.24, y: 897.08), controlPoint2: CGPoint(x: 437.16, y: 884.39))
        bezier49Path.addCurve(to: CGPoint(x: 438.65, y: 830.25), controlPoint1: CGPoint(x: 439.28, y: 857.92), controlPoint2: CGPoint(x: 437.69, y: 844.07))
        bezier49Path.addCurve(to: CGPoint(x: 442.19, y: 829.27), controlPoint1: CGPoint(x: 439.53, y: 830.01), controlPoint2: CGPoint(x: 441.31, y: 829.52))
        bezier49Path.addCurve(to: CGPoint(x: 442.35, y: 804.72), controlPoint1: CGPoint(x: 442.24, y: 821.08), controlPoint2: CGPoint(x: 442.28, y: 812.91))
        bezier49Path.close()
        fillColor5785.setFill()
        bezier49Path.fill()




        //// #f3d987ff
        //// Bezier 50 Drawing
        let bezier50Path = UIBezierPath()
        bezier50Path.move(to: CGPoint(x: 34.24, y: 879.99))
        bezier50Path.addCurve(to: CGPoint(x: 35.61, y: 854.92), controlPoint1: CGPoint(x: 34.15, y: 871.61), controlPoint2: CGPoint(x: 34.28, y: 863.2))
        bezier50Path.addCurve(to: CGPoint(x: 36.08, y: 909.92), controlPoint1: CGPoint(x: 36.36, y: 873.24), controlPoint2: CGPoint(x: 35.64, y: 891.59))
        bezier50Path.addCurve(to: CGPoint(x: 373.33, y: 909.99), controlPoint1: CGPoint(x: 148.49, y: 910.07), controlPoint2: CGPoint(x: 260.92, y: 909.95))
        bezier50Path.addCurve(to: CGPoint(x: 437.24, y: 909.75), controlPoint1: CGPoint(x: 394.64, y: 909.79), controlPoint2: CGPoint(x: 415.95, y: 910.37))
        bezier50Path.addLine(to: CGPoint(x: 438.37, y: 909.63))
        bezier50Path.addCurve(to: CGPoint(x: 438.77, y: 884.89), controlPoint1: CGPoint(x: 438.35, y: 901.39), controlPoint2: CGPoint(x: 438.24, y: 893.13))
        bezier50Path.addCurve(to: CGPoint(x: 442.69, y: 884.91), controlPoint1: CGPoint(x: 439.76, y: 884.89), controlPoint2: CGPoint(x: 441.71, y: 884.91))
        bezier50Path.addCurve(to: CGPoint(x: 443.71, y: 907.64), controlPoint1: CGPoint(x: 442.83, y: 892.48), controlPoint2: CGPoint(x: 443.37, y: 900.05))
        bezier50Path.addCurve(to: CGPoint(x: 443.75, y: 915.25), controlPoint1: CGPoint(x: 443.75, y: 910.16), controlPoint2: CGPoint(x: 443.79, y: 912.71))
        bezier50Path.addCurve(to: CGPoint(x: 410.67, y: 915.76), controlPoint1: CGPoint(x: 432.73, y: 916.15), controlPoint2: CGPoint(x: 421.69, y: 915.69))
        bezier50Path.addCurve(to: CGPoint(x: 124, y: 915.77), controlPoint1: CGPoint(x: 315.11, y: 915.77), controlPoint2: CGPoint(x: 219.56, y: 915.77))
        bezier50Path.addCurve(to: CGPoint(x: 30.49, y: 915.49), controlPoint1: CGPoint(x: 92.83, y: 915.59), controlPoint2: CGPoint(x: 61.65, y: 916.16))
        bezier50Path.addCurve(to: CGPoint(x: 30.49, y: 880.92), controlPoint1: CGPoint(x: 29.95, y: 903.97), controlPoint2: CGPoint(x: 30.69, y: 892.44))
        bezier50Path.addCurve(to: CGPoint(x: 34.24, y: 879.99), controlPoint1: CGPoint(x: 31.43, y: 880.68), controlPoint2: CGPoint(x: 33.31, y: 880.21))
        bezier50Path.close()
        fillColor5786.setFill()
        bezier50Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBadge3(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 473, height: 969), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 473, height: 969), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 473, y: resizedFrame.height / 969)


        //// Color Declarations
        let fillColor3417 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor5749 = UIColor(red: 0.667, green: 0.200, blue: 0.192, alpha: 1.000)
        let fillColor5752 = UIColor(red: 0.796, green: 0.282, blue: 0.235, alpha: 1.000)
        let fillColor5756 = UIColor(red: 0.839, green: 0.459, blue: 0.451, alpha: 1.000)
        let fillColor5757 = UIColor(red: 0.824, green: 0.404, blue: 0.357, alpha: 1.000)
        let fillColor5763 = UIColor(red: 0.820, green: 0.384, blue: 0.345, alpha: 1.000)
        let fillColor5771 = UIColor(red: 0.655, green: 0.200, blue: 0.192, alpha: 1.000)
        let fillColor5780 = UIColor(red: 0.878, green: 0.627, blue: 0.333, alpha: 1.000)
        let fillColor5782 = UIColor(red: 0.839, green: 0.518, blue: 0.255, alpha: 1.000)
        let fillColor5787 = UIColor(red: 0.871, green: 0.553, blue: 0.294, alpha: 1.000)
        let fillColor5788 = UIColor(red: 0.863, green: 0.537, blue: 0.282, alpha: 1.000)
        let fillColor5789 = UIColor(red: 0.910, green: 0.686, blue: 0.439, alpha: 1.000)
        let fillColor5790 = UIColor(red: 0.933, green: 0.757, blue: 0.518, alpha: 1.000)
        let fillColor5791 = UIColor(red: 0.796, green: 0.290, blue: 0.243, alpha: 1.000)
        let fillColor5792 = UIColor(red: 0.824, green: 0.408, blue: 0.361, alpha: 1.000)
        let fillColor5793 = UIColor(red: 0.816, green: 0.373, blue: 0.322, alpha: 1.000)
        let fillColor5794 = UIColor(red: 0.827, green: 0.420, blue: 0.380, alpha: 1.000)
        let fillColor5795 = UIColor(red: 0.976, green: 0.890, blue: 0.643, alpha: 1.000)
        let fillColor5796 = UIColor(red: 0.976, green: 0.902, blue: 0.686, alpha: 1.000)
        let fillColor5797 = UIColor(red: 0.820, green: 0.384, blue: 0.349, alpha: 1.000)
        let fillColor5798 = UIColor(red: 0.969, green: 0.875, blue: 0.580, alpha: 1.000)
        let fillColor5799 = UIColor(red: 0.796, green: 0.290, blue: 0.271, alpha: 1.000)
        let fillColor5800 = UIColor(red: 0.804, green: 0.314, blue: 0.290, alpha: 1.000)
        let fillColor5801 = UIColor(red: 0.796, green: 0.282, blue: 0.263, alpha: 1.000)
        let fillColor5802 = UIColor(red: 0.788, green: 0.259, blue: 0.247, alpha: 1.000)
        let fillColor5803 = UIColor(red: 0.953, green: 0.843, blue: 0.537, alpha: 1.000)
        let fillColor5804 = UIColor(red: 0.706, green: 0.239, blue: 0.224, alpha: 1.000)
        let fillColor5805 = UIColor(red: 0.694, green: 0.235, blue: 0.220, alpha: 1.000)
        let fillColor5806 = UIColor(red: 0.941, green: 0.808, blue: 0.498, alpha: 1.000)
        let fillColor5807 = UIColor(red: 0.925, green: 0.765, blue: 0.447, alpha: 1.000)
        let fillColor5808 = UIColor(red: 0.910, green: 0.722, blue: 0.412, alpha: 1.000)
        let fillColor5809 = UIColor(red: 0.886, green: 0.647, blue: 0.345, alpha: 1.000)
        let fillColor5810 = UIColor(red: 0.843, green: 0.525, blue: 0.255, alpha: 1.000)
        let fillColor5811 = UIColor(red: 0.886, green: 0.655, blue: 0.357, alpha: 1.000)
        let fillColor5812 = UIColor(red: 0.906, green: 0.706, blue: 0.400, alpha: 1.000)
        let fillColor5813 = UIColor(red: 0.937, green: 0.784, blue: 0.471, alpha: 1.000)

        //// #ffffffff
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 0, y: -36))
        bezierPath.addLine(to: CGPoint(x: 472.67, y: -36))
        bezierPath.addLine(to: CGPoint(x: 472.67, y: 988))
        bezierPath.addLine(to: CGPoint(x: 0, y: 988))
        bezierPath.addLine(to: CGPoint(x: 0, y: -36))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 46.48, y: 3.03))
        bezierPath.addCurve(to: CGPoint(x: 46.79, y: 30.01), controlPoint1: CGPoint(x: 46.72, y: 12.03), controlPoint2: CGPoint(x: 46.03, y: 21.05))
        bezierPath.addCurve(to: CGPoint(x: 46.48, y: 41.35), controlPoint1: CGPoint(x: 46.49, y: 33.77), controlPoint2: CGPoint(x: 46.35, y: 37.56))
        bezierPath.addCurve(to: CGPoint(x: 46.54, y: 182.67), controlPoint1: CGPoint(x: 46.64, y: 88.45), controlPoint2: CGPoint(x: 46.5, y: 135.56))
        bezierPath.addCurve(to: CGPoint(x: 46.8, y: 204.68), controlPoint1: CGPoint(x: 46.57, y: 190.01), controlPoint2: CGPoint(x: 46.22, y: 197.36))
        bezierPath.addCurve(to: CGPoint(x: 46.56, y: 234.67), controlPoint1: CGPoint(x: 46.25, y: 214.67), controlPoint2: CGPoint(x: 46.74, y: 224.67))
        bezierPath.addCurve(to: CGPoint(x: 46.63, y: 778.23), controlPoint1: CGPoint(x: 46.59, y: 415.85), controlPoint2: CGPoint(x: 46.45, y: 597.04))
        bezierPath.addCurve(to: CGPoint(x: 155.39, y: 887.11), controlPoint1: CGPoint(x: 82.81, y: 814.63), controlPoint2: CGPoint(x: 119.14, y: 850.8))
        bezierPath.addCurve(to: CGPoint(x: 234.54, y: 966.08), controlPoint1: CGPoint(x: 181.79, y: 913.39), controlPoint2: CGPoint(x: 207.98, y: 940.05))
        bezierPath.addCurve(to: CGPoint(x: 242.93, y: 958.91), controlPoint1: CGPoint(x: 237.82, y: 964.75), controlPoint2: CGPoint(x: 240.2, y: 961.37))
        bezierPath.addCurve(to: CGPoint(x: 427.36, y: 778.36), controlPoint1: CGPoint(x: 304.37, y: 898.67), controlPoint2: CGPoint(x: 365.91, y: 838.6))
        bezierPath.addCurve(to: CGPoint(x: 427.51, y: 686.67), controlPoint1: CGPoint(x: 427.73, y: 747.8), controlPoint2: CGPoint(x: 427.4, y: 717.23))
        bezierPath.addCurve(to: CGPoint(x: 427.61, y: 223.29), controlPoint1: CGPoint(x: 427.58, y: 532.21), controlPoint2: CGPoint(x: 427.38, y: 377.75))
        bezierPath.addCurve(to: CGPoint(x: 427.27, y: 201.65), controlPoint1: CGPoint(x: 427.37, y: 216.09), controlPoint2: CGPoint(x: 427.94, y: 208.84))
        bezierPath.addCurve(to: CGPoint(x: 427.24, y: 169.67), controlPoint1: CGPoint(x: 427.6, y: 191.01), controlPoint2: CGPoint(x: 427.87, y: 180.29))
        bezierPath.addCurve(to: CGPoint(x: 427.51, y: 130.68), controlPoint1: CGPoint(x: 427.92, y: 156.69), controlPoint2: CGPoint(x: 427.32, y: 143.67))
        bezierPath.addCurve(to: CGPoint(x: 427.27, y: 45), controlPoint1: CGPoint(x: 427.33, y: 102.12), controlPoint2: CGPoint(x: 427.82, y: 73.55))
        bezierPath.addCurve(to: CGPoint(x: 427.68, y: 32.67), controlPoint1: CGPoint(x: 427.8, y: 40.93), controlPoint2: CGPoint(x: 427.59, y: 36.77))
        bezierPath.addCurve(to: CGPoint(x: 427.54, y: 20.48), controlPoint1: CGPoint(x: 427.6, y: 28.6), controlPoint2: CGPoint(x: 427.57, y: 24.53))
        bezierPath.addCurve(to: CGPoint(x: 427.61, y: 3.47), controlPoint1: CGPoint(x: 427.56, y: 14.8), controlPoint2: CGPoint(x: 427.56, y: 9.13))
        bezierPath.addCurve(to: CGPoint(x: 398.57, y: 3.08), controlPoint1: CGPoint(x: 417.96, y: 2.52), controlPoint2: CGPoint(x: 408.24, y: 3.23))
        bezierPath.addCurve(to: CGPoint(x: 75.32, y: 3.08), controlPoint1: CGPoint(x: 290.81, y: 3.09), controlPoint2: CGPoint(x: 183.06, y: 3.09))
        bezierPath.addCurve(to: CGPoint(x: 46.48, y: 3.03), controlPoint1: CGPoint(x: 65.7, y: 2.96), controlPoint2: CGPoint(x: 56.1, y: 3.03))
        bezierPath.close()
        fillColor3417.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 70.45, y: 221.92))
        bezier2Path.addLine(to: CGPoint(x: 70.49, y: 220.81))
        bezier2Path.addCurve(to: CGPoint(x: 70.7, y: 279.68), controlPoint1: CGPoint(x: 70.69, y: 240.44), controlPoint2: CGPoint(x: 70.27, y: 260.07))
        bezier2Path.addCurve(to: CGPoint(x: 70.65, y: 397.03), controlPoint1: CGPoint(x: 70.63, y: 318.8), controlPoint2: CGPoint(x: 70.29, y: 357.92))
        bezier2Path.addCurve(to: CGPoint(x: 70.63, y: 489.03), controlPoint1: CGPoint(x: 70.55, y: 427.69), controlPoint2: CGPoint(x: 70.33, y: 458.36))
        bezier2Path.addCurve(to: CGPoint(x: 70.61, y: 555.69), controlPoint1: CGPoint(x: 70.46, y: 511.24), controlPoint2: CGPoint(x: 70.4, y: 533.47))
        bezier2Path.addCurve(to: CGPoint(x: 70.59, y: 750.96), controlPoint1: CGPoint(x: 70.38, y: 620.79), controlPoint2: CGPoint(x: 70.45, y: 685.87))
        bezier2Path.addCurve(to: CGPoint(x: 70.47, y: 764.19), controlPoint1: CGPoint(x: 70.59, y: 755.36), controlPoint2: CGPoint(x: 70.55, y: 759.77))
        bezier2Path.addCurve(to: CGPoint(x: 70.27, y: 620), controlPoint1: CGPoint(x: 69.99, y: 716.13), controlPoint2: CGPoint(x: 70.4, y: 668.07))
        bezier2Path.addCurve(to: CGPoint(x: 70.22, y: 233.35), controlPoint1: CGPoint(x: 70.22, y: 491.12), controlPoint2: CGPoint(x: 70.41, y: 362.23))
        bezier2Path.addCurve(to: CGPoint(x: 70.45, y: 221.92), controlPoint1: CGPoint(x: 70.23, y: 229.53), controlPoint2: CGPoint(x: 70.36, y: 225.73))
        bezier2Path.close()
        fillColor3417.setFill()
        bezier2Path.fill()




        //// #de8d4bff
        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: -0.31, y: 3.03))
        bezier3Path.addCurve(to: CGPoint(x: 35.48, y: 3.08), controlPoint1: CGPoint(x: 11.63, y: 3.03), controlPoint2: CGPoint(x: 23.55, y: 2.96))
        bezier3Path.addCurve(to: CGPoint(x: 35, y: 17.04), controlPoint1: CGPoint(x: 35.36, y: 7.73), controlPoint2: CGPoint(x: 35.21, y: 12.39))
        bezier3Path.addCurve(to: CGPoint(x: 29, y: 37.61), controlPoint1: CGPoint(x: 34.25, y: 24.16), controlPoint2: CGPoint(x: 33.91, y: 31.91))
        bezier3Path.addCurve(to: CGPoint(x: 28.93, y: 34.84), controlPoint1: CGPoint(x: 28.99, y: 36.92), controlPoint2: CGPoint(x: 28.95, y: 35.53))
        bezier3Path.addCurve(to: CGPoint(x: 28.92, y: 21.29), controlPoint1: CGPoint(x: 28.79, y: 30.32), controlPoint2: CGPoint(x: 28.79, y: 25.81))
        bezier3Path.addCurve(to: CGPoint(x: 28.87, y: 3.95), controlPoint1: CGPoint(x: 29.12, y: 15.52), controlPoint2: CGPoint(x: 29.09, y: 9.73))
        bezier3Path.addCurve(to: CGPoint(x: 0.57, y: 3.97), controlPoint1: CGPoint(x: 19.44, y: 3.48), controlPoint2: CGPoint(x: 10, y: 3.43))
        bezier3Path.addCurve(to: CGPoint(x: 0.4, y: 21.31), controlPoint1: CGPoint(x: 0.28, y: 9.75), controlPoint2: CGPoint(x: 0.28, y: 15.53))
        bezier3Path.addCurve(to: CGPoint(x: 0.2, y: 31.08), controlPoint1: CGPoint(x: 0.31, y: 24.57), controlPoint2: CGPoint(x: 0.33, y: 27.83))
        bezier3Path.addLine(to: CGPoint(x: 0.08, y: 30.01))
        bezier3Path.addCurve(to: CGPoint(x: -0.31, y: 3.03), controlPoint1: CGPoint(x: -0.87, y: 21.05), controlPoint2: CGPoint(x: -0.01, y: 12.03))
        bezier3Path.close()
        fillColor5787.setFill()
        bezier3Path.fill()




        //// #aa3331ff
        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 35.48, y: 3.08))
        bezier4Path.addCurve(to: CGPoint(x: 436.69, y: 3.08), controlPoint1: CGPoint(x: 169.21, y: 3.09), controlPoint2: CGPoint(x: 302.95, y: 3.09))
        bezier4Path.addCurve(to: CGPoint(x: 436.84, y: 20.01), controlPoint1: CGPoint(x: 436.57, y: 8.72), controlPoint2: CGPoint(x: 436.55, y: 14.37))
        bezier4Path.addCurve(to: CGPoint(x: 410, y: 20.44), controlPoint1: CGPoint(x: 427.91, y: 20.59), controlPoint2: CGPoint(x: 418.95, y: 20.51))
        bezier4Path.addCurve(to: CGPoint(x: 62, y: 20.45), controlPoint1: CGPoint(x: 294, y: 20.45), controlPoint2: CGPoint(x: 178, y: 20.45))
        bezier4Path.addCurve(to: CGPoint(x: 35.01, y: 19.96), controlPoint1: CGPoint(x: 53, y: 20.52), controlPoint2: CGPoint(x: 43.99, y: 20.63))
        bezier4Path.addCurve(to: CGPoint(x: 35, y: 17.04), controlPoint1: CGPoint(x: 35.01, y: 19.23), controlPoint2: CGPoint(x: 35.01, y: 17.76))
        bezier4Path.addCurve(to: CGPoint(x: 35.48, y: 3.08), controlPoint1: CGPoint(x: 35.21, y: 12.39), controlPoint2: CGPoint(x: 35.36, y: 7.73))
        bezier4Path.close()
        fillColor5749.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 0.57, y: 3.97))
        bezier5Path.addCurve(to: CGPoint(x: 28.87, y: 3.95), controlPoint1: CGPoint(x: 10, y: 3.43), controlPoint2: CGPoint(x: 19.44, y: 3.48))
        bezier5Path.addCurve(to: CGPoint(x: 28.92, y: 21.29), controlPoint1: CGPoint(x: 29.09, y: 9.73), controlPoint2: CGPoint(x: 29.12, y: 15.52))
        bezier5Path.addCurve(to: CGPoint(x: 0.4, y: 21.31), controlPoint1: CGPoint(x: 19.41, y: 21.36), controlPoint2: CGPoint(x: 9.91, y: 21.35))
        bezier5Path.addCurve(to: CGPoint(x: 0.57, y: 3.97), controlPoint1: CGPoint(x: 0.28, y: 15.53), controlPoint2: CGPoint(x: 0.28, y: 9.75))
        bezier5Path.close()
        fillColor5749.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 443.73, y: 3.83))
        bezier6Path.addCurve(to: CGPoint(x: 472.75, y: 3.47), controlPoint1: CGPoint(x: 453.4, y: 3.13), controlPoint2: CGPoint(x: 463.08, y: 3.65))
        bezier6Path.addCurve(to: CGPoint(x: 472.65, y: 20.48), controlPoint1: CGPoint(x: 472.68, y: 9.13), controlPoint2: CGPoint(x: 472.68, y: 14.8))
        bezier6Path.addCurve(to: CGPoint(x: 443.24, y: 21.29), controlPoint1: CGPoint(x: 462.88, y: 21.65), controlPoint2: CGPoint(x: 453.04, y: 21.31))
        bezier6Path.addCurve(to: CGPoint(x: 442.73, y: 12.87), controlPoint1: CGPoint(x: 443.07, y: 18.49), controlPoint2: CGPoint(x: 442.83, y: 15.68))
        bezier6Path.addCurve(to: CGPoint(x: 443.73, y: 3.83), controlPoint1: CGPoint(x: 443.04, y: 9.85), controlPoint2: CGPoint(x: 443.36, y: 6.84))
        bezier6Path.close()
        fillColor5749.setFill()
        bezier6Path.fill()




        //// #dc8948ff
        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 436.69, y: 3.08))
        bezier7Path.addCurve(to: CGPoint(x: 472.75, y: 3.47), controlPoint1: CGPoint(x: 448.71, y: 3.23), controlPoint2: CGPoint(x: 460.76, y: 2.52))
        bezier7Path.addCurve(to: CGPoint(x: 443.73, y: 3.83), controlPoint1: CGPoint(x: 463.08, y: 3.65), controlPoint2: CGPoint(x: 453.4, y: 3.13))
        bezier7Path.addCurve(to: CGPoint(x: 442.73, y: 12.87), controlPoint1: CGPoint(x: 443.36, y: 6.84), controlPoint2: CGPoint(x: 443.04, y: 9.85))
        bezier7Path.addCurve(to: CGPoint(x: 441.31, y: 30.37), controlPoint1: CGPoint(x: 441.93, y: 18.67), controlPoint2: CGPoint(x: 441.45, y: 24.52))
        bezier7Path.addCurve(to: CGPoint(x: 438.96, y: 30.12), controlPoint1: CGPoint(x: 440.72, y: 30.31), controlPoint2: CGPoint(x: 439.55, y: 30.19))
        bezier7Path.addCurve(to: CGPoint(x: 436.99, y: 22.4), controlPoint1: CGPoint(x: 438.24, y: 27.56), controlPoint2: CGPoint(x: 437.56, y: 24.99))
        bezier7Path.addCurve(to: CGPoint(x: 436.84, y: 20.01), controlPoint1: CGPoint(x: 436.95, y: 21.8), controlPoint2: CGPoint(x: 436.88, y: 20.61))
        bezier7Path.addCurve(to: CGPoint(x: 436.69, y: 3.08), controlPoint1: CGPoint(x: 436.55, y: 14.37), controlPoint2: CGPoint(x: 436.57, y: 8.72))
        bezier7Path.close()
        fillColor5788.setFill()
        bezier7Path.fill()




        //// #e8af70ff
        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 441.31, y: 30.37))
        bezier8Path.addCurve(to: CGPoint(x: 442.73, y: 12.87), controlPoint1: CGPoint(x: 441.45, y: 24.52), controlPoint2: CGPoint(x: 441.93, y: 18.67))
        bezier8Path.addCurve(to: CGPoint(x: 443.24, y: 21.29), controlPoint1: CGPoint(x: 442.83, y: 15.68), controlPoint2: CGPoint(x: 443.07, y: 18.49))
        bezier8Path.addCurve(to: CGPoint(x: 443.33, y: 34.71), controlPoint1: CGPoint(x: 443.49, y: 25.76), controlPoint2: CGPoint(x: 443.57, y: 30.24))
        bezier8Path.addCurve(to: CGPoint(x: 442.85, y: 40.96), controlPoint1: CGPoint(x: 443.2, y: 36.79), controlPoint2: CGPoint(x: 443.01, y: 38.88))
        bezier8Path.addCurve(to: CGPoint(x: 441.32, y: 58.51), controlPoint1: CGPoint(x: 442.15, y: 46.79), controlPoint2: CGPoint(x: 441.6, y: 52.64))
        bezier8Path.addCurve(to: CGPoint(x: 438.85, y: 58.48), controlPoint1: CGPoint(x: 440.71, y: 58.49), controlPoint2: CGPoint(x: 439.47, y: 58.48))
        bezier8Path.addCurve(to: CGPoint(x: 437.16, y: 47.59), controlPoint1: CGPoint(x: 438.27, y: 54.85), controlPoint2: CGPoint(x: 437.65, y: 51.23))
        bezier8Path.addCurve(to: CGPoint(x: 436.65, y: 40.07), controlPoint1: CGPoint(x: 436.99, y: 45.08), controlPoint2: CGPoint(x: 436.76, y: 42.57))
        bezier8Path.addCurve(to: CGPoint(x: 436.61, y: 34.59), controlPoint1: CGPoint(x: 436.61, y: 38.24), controlPoint2: CGPoint(x: 436.6, y: 36.41))
        bezier8Path.addCurve(to: CGPoint(x: 436.99, y: 22.4), controlPoint1: CGPoint(x: 436.73, y: 30.52), controlPoint2: CGPoint(x: 436.97, y: 26.45))
        bezier8Path.addCurve(to: CGPoint(x: 438.96, y: 30.12), controlPoint1: CGPoint(x: 437.56, y: 24.99), controlPoint2: CGPoint(x: 438.24, y: 27.56))
        bezier8Path.addCurve(to: CGPoint(x: 441.31, y: 30.37), controlPoint1: CGPoint(x: 439.55, y: 30.19), controlPoint2: CGPoint(x: 440.72, y: 30.31))
        bezier8Path.close()
        fillColor5789.setFill()
        bezier8Path.fill()




        //// #eec184ff
        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 29, y: 37.61))
        bezier9Path.addCurve(to: CGPoint(x: 35, y: 17.04), controlPoint1: CGPoint(x: 33.91, y: 31.91), controlPoint2: CGPoint(x: 34.25, y: 24.16))
        bezier9Path.addCurve(to: CGPoint(x: 35.01, y: 19.96), controlPoint1: CGPoint(x: 35.01, y: 17.76), controlPoint2: CGPoint(x: 35.01, y: 19.23))
        bezier9Path.addCurve(to: CGPoint(x: 35.32, y: 34.57), controlPoint1: CGPoint(x: 35.09, y: 24.83), controlPoint2: CGPoint(x: 35.29, y: 29.71))
        bezier9Path.addCurve(to: CGPoint(x: 35.36, y: 40.04), controlPoint1: CGPoint(x: 35.33, y: 36.4), controlPoint2: CGPoint(x: 35.35, y: 38.21))
        bezier9Path.addCurve(to: CGPoint(x: 35.49, y: 54.63), controlPoint1: CGPoint(x: 35.39, y: 44.91), controlPoint2: CGPoint(x: 35.52, y: 49.76))
        bezier9Path.addCurve(to: CGPoint(x: 35.08, y: 66.25), controlPoint1: CGPoint(x: 35.41, y: 58.51), controlPoint2: CGPoint(x: 35.28, y: 62.39))
        bezier9Path.addCurve(to: CGPoint(x: 30.84, y: 80.77), controlPoint1: CGPoint(x: 34.44, y: 71.29), controlPoint2: CGPoint(x: 32.59, y: 76.04))
        bezier9Path.addCurve(to: CGPoint(x: 29.51, y: 98.65), controlPoint1: CGPoint(x: 28.72, y: 86.49), controlPoint2: CGPoint(x: 29.53, y: 92.69))
        bezier9Path.addCurve(to: CGPoint(x: 29.73, y: 165.08), controlPoint1: CGPoint(x: 29.68, y: 120.8), controlPoint2: CGPoint(x: 29.35, y: 142.93))
        bezier9Path.addCurve(to: CGPoint(x: 29.49, y: 220.81), controlPoint1: CGPoint(x: 29.12, y: 183.65), controlPoint2: CGPoint(x: 30.36, y: 202.25))
        bezier9Path.addLine(to: CGPoint(x: 29.44, y: 221.92))
        bezier9Path.addCurve(to: CGPoint(x: 29.32, y: 218.92), controlPoint1: CGPoint(x: 29.41, y: 221.17), controlPoint2: CGPoint(x: 29.36, y: 219.67))
        bezier9Path.addCurve(to: CGPoint(x: 29.01, y: 193.36), controlPoint1: CGPoint(x: 28.89, y: 210.4), controlPoint2: CGPoint(x: 29.15, y: 201.88))
        bezier9Path.addCurve(to: CGPoint(x: 29.04, y: 164.35), controlPoint1: CGPoint(x: 29.11, y: 183.68), controlPoint2: CGPoint(x: 29.12, y: 174.01))
        bezier9Path.addCurve(to: CGPoint(x: 29, y: 50.65), controlPoint1: CGPoint(x: 29.19, y: 126.45), controlPoint2: CGPoint(x: 29.15, y: 88.56))
        bezier9Path.addCurve(to: CGPoint(x: 29, y: 37.61), controlPoint1: CGPoint(x: 28.97, y: 46.31), controlPoint2: CGPoint(x: 29.03, y: 41.96))
        bezier9Path.close()
        fillColor5790.setFill()
        bezier9Path.fill()




        //// #cb483cff
        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 35.01, y: 19.96))
        bezier10Path.addCurve(to: CGPoint(x: 62, y: 20.45), controlPoint1: CGPoint(x: 43.99, y: 20.63), controlPoint2: CGPoint(x: 53, y: 20.52))
        bezier10Path.addCurve(to: CGPoint(x: 410, y: 20.44), controlPoint1: CGPoint(x: 178, y: 20.45), controlPoint2: CGPoint(x: 294, y: 20.45))
        bezier10Path.addCurve(to: CGPoint(x: 436.84, y: 20.01), controlPoint1: CGPoint(x: 418.95, y: 20.51), controlPoint2: CGPoint(x: 427.91, y: 20.59))
        bezier10Path.addCurve(to: CGPoint(x: 436.99, y: 22.4), controlPoint1: CGPoint(x: 436.88, y: 20.61), controlPoint2: CGPoint(x: 436.95, y: 21.8))
        bezier10Path.addCurve(to: CGPoint(x: 436.61, y: 34.59), controlPoint1: CGPoint(x: 436.97, y: 26.45), controlPoint2: CGPoint(x: 436.73, y: 30.52))
        bezier10Path.addCurve(to: CGPoint(x: 242, y: 34.39), controlPoint1: CGPoint(x: 371.75, y: 34.15), controlPoint2: CGPoint(x: 306.87, y: 34.52))
        bezier10Path.addCurve(to: CGPoint(x: 35.32, y: 34.57), controlPoint1: CGPoint(x: 173.11, y: 34.52), controlPoint2: CGPoint(x: 104.21, y: 34.15))
        bezier10Path.addCurve(to: CGPoint(x: 35.01, y: 19.96), controlPoint1: CGPoint(x: 35.29, y: 29.71), controlPoint2: CGPoint(x: 35.09, y: 24.83))
        bezier10Path.close()
        fillColor5752.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 443.24, y: 21.29))
        bezier11Path.addCurve(to: CGPoint(x: 472.65, y: 20.48), controlPoint1: CGPoint(x: 453.04, y: 21.31), controlPoint2: CGPoint(x: 462.88, y: 21.65))
        bezier11Path.addCurve(to: CGPoint(x: 472.83, y: 32.67), controlPoint1: CGPoint(x: 472.69, y: 24.53), controlPoint2: CGPoint(x: 472.73, y: 28.6))
        bezier11Path.addCurve(to: CGPoint(x: 443.33, y: 34.71), controlPoint1: CGPoint(x: 463.48, y: 36.61), controlPoint2: CGPoint(x: 453.15, y: 34.16))
        bezier11Path.addCurve(to: CGPoint(x: 443.24, y: 21.29), controlPoint1: CGPoint(x: 443.57, y: 30.24), controlPoint2: CGPoint(x: 443.49, y: 25.76))
        bezier11Path.close()
        fillColor5752.setFill()
        bezier11Path.fill()




        //// #cb4a3eff
        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 0.4, y: 21.31))
        bezier12Path.addCurve(to: CGPoint(x: 28.92, y: 21.29), controlPoint1: CGPoint(x: 9.91, y: 21.35), controlPoint2: CGPoint(x: 19.41, y: 21.36))
        bezier12Path.addCurve(to: CGPoint(x: 28.93, y: 34.84), controlPoint1: CGPoint(x: 28.79, y: 25.81), controlPoint2: CGPoint(x: 28.79, y: 30.32))
        bezier12Path.addCurve(to: CGPoint(x: 0.41, y: 34.73), controlPoint1: CGPoint(x: 19.43, y: 34.85), controlPoint2: CGPoint(x: 9.92, y: 34.85))
        bezier12Path.addCurve(to: CGPoint(x: 0.2, y: 31.08), controlPoint1: CGPoint(x: 0.36, y: 33.81), controlPoint2: CGPoint(x: 0.25, y: 32))
        bezier12Path.addCurve(to: CGPoint(x: 0.4, y: 21.31), controlPoint1: CGPoint(x: 0.33, y: 27.83), controlPoint2: CGPoint(x: 0.31, y: 24.57))
        bezier12Path.close()
        fillColor5791.setFill()
        bezier12Path.fill()




        //// #d67573ff
        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: 0.08, y: 30.01))
        bezier13Path.addLine(to: CGPoint(x: 0.2, y: 31.08))
        bezier13Path.addCurve(to: CGPoint(x: 0.41, y: 34.73), controlPoint1: CGPoint(x: 0.25, y: 32), controlPoint2: CGPoint(x: 0.36, y: 33.81))
        bezier13Path.addCurve(to: CGPoint(x: 0.91, y: 50.51), controlPoint1: CGPoint(x: 0.57, y: 39.99), controlPoint2: CGPoint(x: 0.69, y: 45.25))
        bezier13Path.addCurve(to: CGPoint(x: 29, y: 50.65), controlPoint1: CGPoint(x: 10.27, y: 51.03), controlPoint2: CGPoint(x: 19.64, y: 50.81))
        bezier13Path.addCurve(to: CGPoint(x: 29.04, y: 164.35), controlPoint1: CGPoint(x: 29.15, y: 88.56), controlPoint2: CGPoint(x: 29.19, y: 126.45))
        bezier13Path.addCurve(to: CGPoint(x: 1.03, y: 164.03), controlPoint1: CGPoint(x: 19.71, y: 165.59), controlPoint2: CGPoint(x: 10.36, y: 163.92))
        bezier13Path.addCurve(to: CGPoint(x: 0.56, y: 193.35), controlPoint1: CGPoint(x: 0.39, y: 173.79), controlPoint2: CGPoint(x: 0.43, y: 183.57))
        bezier13Path.addCurve(to: CGPoint(x: 0.16, y: 203.6), controlPoint1: CGPoint(x: 0.52, y: 196.76), controlPoint2: CGPoint(x: 0.33, y: 200.17))
        bezier13Path.addLine(to: CGPoint(x: 0.09, y: 204.68))
        bezier13Path.addCurve(to: CGPoint(x: -0.24, y: 182.67), controlPoint1: CGPoint(x: -0.63, y: 197.36), controlPoint2: CGPoint(x: -0.2, y: 190.01))
        bezier13Path.addCurve(to: CGPoint(x: -0.31, y: 41.35), controlPoint1: CGPoint(x: -0.28, y: 135.56), controlPoint2: CGPoint(x: -0.11, y: 88.45))
        bezier13Path.addCurve(to: CGPoint(x: 0.08, y: 30.01), controlPoint1: CGPoint(x: -0.47, y: 37.56), controlPoint2: CGPoint(x: -0.29, y: 33.77))
        bezier13Path.close()
        fillColor5756.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 471, y: 50.39))
        bezier14Path.addCurve(to: CGPoint(x: 472.32, y: 45), controlPoint1: CGPoint(x: 471.47, y: 48.6), controlPoint2: CGPoint(x: 471.93, y: 46.81))
        bezier14Path.addCurve(to: CGPoint(x: 472.61, y: 130.68), controlPoint1: CGPoint(x: 473, y: 73.55), controlPoint2: CGPoint(x: 472.4, y: 102.12))
        bezier14Path.addCurve(to: CGPoint(x: 472.28, y: 169.67), controlPoint1: CGPoint(x: 472.39, y: 143.67), controlPoint2: CGPoint(x: 473.13, y: 156.69))
        bezier14Path.addCurve(to: CGPoint(x: 470.99, y: 164.23), controlPoint1: CGPoint(x: 471.89, y: 167.84), controlPoint2: CGPoint(x: 471.44, y: 166.03))
        bezier14Path.addCurve(to: CGPoint(x: 443.31, y: 165.44), controlPoint1: CGPoint(x: 461.73, y: 163.51), controlPoint2: CGPoint(x: 452.51, y: 164.56))
        bezier14Path.addCurve(to: CGPoint(x: 442.99, y: 50.68), controlPoint1: CGPoint(x: 443.33, y: 127.19), controlPoint2: CGPoint(x: 443.29, y: 88.93))
        bezier14Path.addCurve(to: CGPoint(x: 471, y: 50.39), controlPoint1: CGPoint(x: 452.32, y: 50.76), controlPoint2: CGPoint(x: 461.68, y: 51.04))
        bezier14Path.close()
        fillColor5756.setFill()
        bezier14Path.fill()


        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: 35.49, y: 54.63))
        bezier15Path.addCurve(to: CGPoint(x: 437.11, y: 54.61), controlPoint1: CGPoint(x: 169.36, y: 54.47), controlPoint2: CGPoint(x: 303.23, y: 54.49))
        bezier15Path.addCurve(to: CGPoint(x: 436.92, y: 164.05), controlPoint1: CGPoint(x: 436.96, y: 91.09), controlPoint2: CGPoint(x: 437.04, y: 127.57))
        bezier15Path.addCurve(to: CGPoint(x: 417.33, y: 163.55), controlPoint1: CGPoint(x: 430.37, y: 164.09), controlPoint2: CGPoint(x: 423.85, y: 163.87))
        bezier15Path.addCurve(to: CGPoint(x: 392.61, y: 163.91), controlPoint1: CGPoint(x: 409.08, y: 163.11), controlPoint2: CGPoint(x: 400.85, y: 164.32))
        bezier15Path.addCurve(to: CGPoint(x: 350, y: 163.99), controlPoint1: CGPoint(x: 378.41, y: 163.17), controlPoint2: CGPoint(x: 364.19, y: 163.29))
        bezier15Path.addCurve(to: CGPoint(x: 321.67, y: 163.63), controlPoint1: CGPoint(x: 340.55, y: 164.41), controlPoint2: CGPoint(x: 331.12, y: 162.96))
        bezier15Path.addCurve(to: CGPoint(x: 283.12, y: 163.45), controlPoint1: CGPoint(x: 308.83, y: 164.57), controlPoint2: CGPoint(x: 295.99, y: 163.01))
        bezier15Path.addCurve(to: CGPoint(x: 249.97, y: 163.71), controlPoint1: CGPoint(x: 272.07, y: 163.41), controlPoint2: CGPoint(x: 261.01, y: 164.61))
        bezier15Path.addCurve(to: CGPoint(x: 220.59, y: 163.87), controlPoint1: CGPoint(x: 240.17, y: 162.87), controlPoint2: CGPoint(x: 230.39, y: 164.41))
        bezier15Path.addCurve(to: CGPoint(x: 179.35, y: 163.99), controlPoint1: CGPoint(x: 206.84, y: 163.16), controlPoint2: CGPoint(x: 193.08, y: 163.33))
        bezier15Path.addCurve(to: CGPoint(x: 155.24, y: 163.47), controlPoint1: CGPoint(x: 171.29, y: 164.36), controlPoint2: CGPoint(x: 163.28, y: 163.36))
        bezier15Path.addCurve(to: CGPoint(x: 99.41, y: 163.79), controlPoint1: CGPoint(x: 136.64, y: 164.71), controlPoint2: CGPoint(x: 118.03, y: 162.55))
        bezier15Path.addCurve(to: CGPoint(x: 63.36, y: 163.73), controlPoint1: CGPoint(x: 87.4, y: 164.77), controlPoint2: CGPoint(x: 75.37, y: 162.79))
        bezier15Path.addCurve(to: CGPoint(x: 35.36, y: 162.81), controlPoint1: CGPoint(x: 54.01, y: 164.36), controlPoint2: CGPoint(x: 44.64, y: 163.89))
        bezier15Path.addCurve(to: CGPoint(x: 35.08, y: 66.25), controlPoint1: CGPoint(x: 35.28, y: 130.63), controlPoint2: CGPoint(x: 35.56, y: 98.44))
        bezier15Path.addCurve(to: CGPoint(x: 35.49, y: 54.63), controlPoint1: CGPoint(x: 35.28, y: 62.39), controlPoint2: CGPoint(x: 35.41, y: 58.51))
        bezier15Path.close()
        fillColor5756.setFill()
        bezier15Path.fill()




        //// #d2675bff
        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 443.33, y: 34.71))
        bezier16Path.addCurve(to: CGPoint(x: 472.83, y: 32.67), controlPoint1: CGPoint(x: 453.15, y: 34.16), controlPoint2: CGPoint(x: 463.48, y: 36.61))
        bezier16Path.addCurve(to: CGPoint(x: 472.32, y: 45), controlPoint1: CGPoint(x: 472.72, y: 36.77), controlPoint2: CGPoint(x: 472.97, y: 40.93))
        bezier16Path.addCurve(to: CGPoint(x: 471, y: 50.39), controlPoint1: CGPoint(x: 471.93, y: 46.81), controlPoint2: CGPoint(x: 471.47, y: 48.6))
        bezier16Path.addCurve(to: CGPoint(x: 442.99, y: 50.68), controlPoint1: CGPoint(x: 461.68, y: 51.04), controlPoint2: CGPoint(x: 452.32, y: 50.76))
        bezier16Path.addCurve(to: CGPoint(x: 442.85, y: 40.96), controlPoint1: CGPoint(x: 442.92, y: 47.44), controlPoint2: CGPoint(x: 442.83, y: 44.2))
        bezier16Path.addCurve(to: CGPoint(x: 443.33, y: 34.71), controlPoint1: CGPoint(x: 443.01, y: 38.88), controlPoint2: CGPoint(x: 443.2, y: 36.79))
        bezier16Path.close()
        fillColor5757.setFill()
        bezier16Path.fill()




        //// #d2685cff
        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 0.41, y: 34.73))
        bezier17Path.addCurve(to: CGPoint(x: 28.93, y: 34.84), controlPoint1: CGPoint(x: 9.92, y: 34.85), controlPoint2: CGPoint(x: 19.43, y: 34.85))
        bezier17Path.addCurve(to: CGPoint(x: 29, y: 37.61), controlPoint1: CGPoint(x: 28.95, y: 35.53), controlPoint2: CGPoint(x: 28.99, y: 36.92))
        bezier17Path.addCurve(to: CGPoint(x: 29, y: 50.65), controlPoint1: CGPoint(x: 29.03, y: 41.96), controlPoint2: CGPoint(x: 28.97, y: 46.31))
        bezier17Path.addCurve(to: CGPoint(x: 0.91, y: 50.51), controlPoint1: CGPoint(x: 19.64, y: 50.81), controlPoint2: CGPoint(x: 10.27, y: 51.03))
        bezier17Path.addCurve(to: CGPoint(x: 0.41, y: 34.73), controlPoint1: CGPoint(x: 0.69, y: 45.25), controlPoint2: CGPoint(x: 0.57, y: 39.99))
        bezier17Path.close()
        fillColor5792.setFill()
        bezier17Path.fill()




        //// #d05f52ff
        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: 35.32, y: 34.57))
        bezier18Path.addCurve(to: CGPoint(x: 242, y: 34.39), controlPoint1: CGPoint(x: 104.21, y: 34.15), controlPoint2: CGPoint(x: 173.11, y: 34.52))
        bezier18Path.addCurve(to: CGPoint(x: 436.61, y: 34.59), controlPoint1: CGPoint(x: 306.87, y: 34.52), controlPoint2: CGPoint(x: 371.75, y: 34.15))
        bezier18Path.addCurve(to: CGPoint(x: 436.65, y: 40.07), controlPoint1: CGPoint(x: 436.6, y: 36.41), controlPoint2: CGPoint(x: 436.61, y: 38.24))
        bezier18Path.addCurve(to: CGPoint(x: 35.36, y: 40.04), controlPoint1: CGPoint(x: 302.89, y: 40.2), controlPoint2: CGPoint(x: 169.12, y: 40.24))
        bezier18Path.addCurve(to: CGPoint(x: 35.32, y: 34.57), controlPoint1: CGPoint(x: 35.35, y: 38.21), controlPoint2: CGPoint(x: 35.33, y: 36.4))
        bezier18Path.close()
        fillColor5793.setFill()
        bezier18Path.fill()




        //// #d36b61ff
        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: 35.36, y: 40.04))
        bezier19Path.addCurve(to: CGPoint(x: 436.65, y: 40.07), controlPoint1: CGPoint(x: 169.12, y: 40.24), controlPoint2: CGPoint(x: 302.89, y: 40.2))
        bezier19Path.addCurve(to: CGPoint(x: 437.16, y: 47.59), controlPoint1: CGPoint(x: 436.76, y: 42.57), controlPoint2: CGPoint(x: 436.99, y: 45.08))
        bezier19Path.addCurve(to: CGPoint(x: 437.11, y: 54.61), controlPoint1: CGPoint(x: 437.2, y: 49.93), controlPoint2: CGPoint(x: 437.13, y: 52.28))
        bezier19Path.addCurve(to: CGPoint(x: 35.49, y: 54.63), controlPoint1: CGPoint(x: 303.23, y: 54.49), controlPoint2: CGPoint(x: 169.36, y: 54.47))
        bezier19Path.addCurve(to: CGPoint(x: 35.36, y: 40.04), controlPoint1: CGPoint(x: 35.52, y: 49.76), controlPoint2: CGPoint(x: 35.39, y: 44.91))
        bezier19Path.close()
        fillColor5794.setFill()
        bezier19Path.fill()




        //// #f9e3a4ff
        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: 441.32, y: 58.51))
        bezier20Path.addCurve(to: CGPoint(x: 442.85, y: 40.96), controlPoint1: CGPoint(x: 441.6, y: 52.64), controlPoint2: CGPoint(x: 442.15, y: 46.79))
        bezier20Path.addCurve(to: CGPoint(x: 442.99, y: 50.68), controlPoint1: CGPoint(x: 442.83, y: 44.2), controlPoint2: CGPoint(x: 442.92, y: 47.44))
        bezier20Path.addCurve(to: CGPoint(x: 443.31, y: 165.44), controlPoint1: CGPoint(x: 443.29, y: 88.93), controlPoint2: CGPoint(x: 443.33, y: 127.19))
        bezier20Path.addCurve(to: CGPoint(x: 443.29, y: 194.53), controlPoint1: CGPoint(x: 443.25, y: 175.13), controlPoint2: CGPoint(x: 443.11, y: 184.83))
        bezier20Path.addCurve(to: CGPoint(x: 442.97, y: 213.04), controlPoint1: CGPoint(x: 443.32, y: 200.69), controlPoint2: CGPoint(x: 443.04, y: 206.87))
        bezier20Path.addCurve(to: CGPoint(x: 440.75, y: 230.69), controlPoint1: CGPoint(x: 442.73, y: 218.95), controlPoint2: CGPoint(x: 443.08, y: 225.11))
        bezier20Path.addCurve(to: CGPoint(x: 438.28, y: 241.24), controlPoint1: CGPoint(x: 439.41, y: 234.07), controlPoint2: CGPoint(x: 438.15, y: 237.56))
        bezier20Path.addCurve(to: CGPoint(x: 438.03, y: 321.33), controlPoint1: CGPoint(x: 438.64, y: 267.93), controlPoint2: CGPoint(x: 438.07, y: 294.64))
        bezier20Path.addCurve(to: CGPoint(x: 438.31, y: 360.59), controlPoint1: CGPoint(x: 438.08, y: 334.41), controlPoint2: CGPoint(x: 437.39, y: 347.51))
        bezier20Path.addCurve(to: CGPoint(x: 438.05, y: 468.96), controlPoint1: CGPoint(x: 438.44, y: 396.71), controlPoint2: CGPoint(x: 437.16, y: 432.84))
        bezier20Path.addCurve(to: CGPoint(x: 438.05, y: 543.68), controlPoint1: CGPoint(x: 438.55, y: 493.87), controlPoint2: CGPoint(x: 437.19, y: 518.77))
        bezier20Path.addCurve(to: CGPoint(x: 438.24, y: 753.41), controlPoint1: CGPoint(x: 437.73, y: 613.59), controlPoint2: CGPoint(x: 437.4, y: 683.51))
        bezier20Path.addCurve(to: CGPoint(x: 435.83, y: 763.6), controlPoint1: CGPoint(x: 438.29, y: 756.96), controlPoint2: CGPoint(x: 437.12, y: 760.35))
        bezier20Path.addCurve(to: CGPoint(x: 437.16, y: 733.33), controlPoint1: CGPoint(x: 438.01, y: 753.64), controlPoint2: CGPoint(x: 437.08, y: 743.43))
        bezier20Path.addCurve(to: CGPoint(x: 437.09, y: 284), controlPoint1: CGPoint(x: 437.16, y: 583.56), controlPoint2: CGPoint(x: 437.12, y: 433.79))
        bezier20Path.addCurve(to: CGPoint(x: 436.93, y: 234.79), controlPoint1: CGPoint(x: 437.04, y: 267.6), controlPoint2: CGPoint(x: 437.2, y: 251.2))
        bezier20Path.addCurve(to: CGPoint(x: 437, y: 223.89), controlPoint1: CGPoint(x: 436.92, y: 231.16), controlPoint2: CGPoint(x: 436.96, y: 227.52))
        bezier20Path.addCurve(to: CGPoint(x: 436.97, y: 205.36), controlPoint1: CGPoint(x: 437.07, y: 217.72), controlPoint2: CGPoint(x: 437.03, y: 211.53))
        bezier20Path.addCurve(to: CGPoint(x: 436.99, y: 193.28), controlPoint1: CGPoint(x: 436.95, y: 201.33), controlPoint2: CGPoint(x: 436.95, y: 197.31))
        bezier20Path.addCurve(to: CGPoint(x: 436.92, y: 164.05), controlPoint1: CGPoint(x: 437.16, y: 183.55), controlPoint2: CGPoint(x: 436.93, y: 173.8))
        bezier20Path.addCurve(to: CGPoint(x: 437.11, y: 54.61), controlPoint1: CGPoint(x: 437.04, y: 127.57), controlPoint2: CGPoint(x: 436.96, y: 91.09))
        bezier20Path.addCurve(to: CGPoint(x: 437.16, y: 47.59), controlPoint1: CGPoint(x: 437.13, y: 52.28), controlPoint2: CGPoint(x: 437.2, y: 49.93))
        bezier20Path.addCurve(to: CGPoint(x: 438.85, y: 58.48), controlPoint1: CGPoint(x: 437.65, y: 51.23), controlPoint2: CGPoint(x: 438.27, y: 54.85))
        bezier20Path.addCurve(to: CGPoint(x: 441.32, y: 58.51), controlPoint1: CGPoint(x: 439.47, y: 58.48), controlPoint2: CGPoint(x: 440.71, y: 58.49))
        bezier20Path.close()
        fillColor5795.setFill()
        bezier20Path.fill()




        //// #f9e6afff
        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 30.84, y: 80.77))
        bezier21Path.addCurve(to: CGPoint(x: 35.08, y: 66.25), controlPoint1: CGPoint(x: 32.59, y: 76.04), controlPoint2: CGPoint(x: 34.44, y: 71.29))
        bezier21Path.addCurve(to: CGPoint(x: 35.36, y: 162.81), controlPoint1: CGPoint(x: 35.56, y: 98.44), controlPoint2: CGPoint(x: 35.28, y: 130.63))
        bezier21Path.addCurve(to: CGPoint(x: 35.33, y: 193.27), controlPoint1: CGPoint(x: 35.44, y: 172.96), controlPoint2: CGPoint(x: 35.28, y: 183.12))
        bezier21Path.addCurve(to: CGPoint(x: 35.35, y: 205.36), controlPoint1: CGPoint(x: 35.36, y: 197.29), controlPoint2: CGPoint(x: 35.35, y: 201.32))
        bezier21Path.addCurve(to: CGPoint(x: 35.19, y: 223.89), controlPoint1: CGPoint(x: 35.35, y: 211.53), controlPoint2: CGPoint(x: 35.37, y: 217.72))
        bezier21Path.addCurve(to: CGPoint(x: 35, y: 231.05), controlPoint1: CGPoint(x: 35.11, y: 226.28), controlPoint2: CGPoint(x: 35.01, y: 228.67))
        bezier21Path.addCurve(to: CGPoint(x: 33.87, y: 217.32), controlPoint1: CGPoint(x: 34.47, y: 226.49), controlPoint2: CGPoint(x: 33.91, y: 221.92))
        bezier21Path.addCurve(to: CGPoint(x: 33.49, y: 166.12), controlPoint1: CGPoint(x: 33.85, y: 200.25), controlPoint2: CGPoint(x: 33.99, y: 183.19))
        bezier21Path.addCurve(to: CGPoint(x: 29.73, y: 165.08), controlPoint1: CGPoint(x: 32.56, y: 165.87), controlPoint2: CGPoint(x: 30.68, y: 165.33))
        bezier21Path.addCurve(to: CGPoint(x: 29.51, y: 98.65), controlPoint1: CGPoint(x: 29.35, y: 142.93), controlPoint2: CGPoint(x: 29.68, y: 120.8))
        bezier21Path.addCurve(to: CGPoint(x: 30.84, y: 80.77), controlPoint1: CGPoint(x: 29.53, y: 92.69), controlPoint2: CGPoint(x: 28.72, y: 86.49))
        bezier21Path.close()
        fillColor5796.setFill()
        bezier21Path.fill()




        //// #d16259ff
        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        bezier22Path.move(to: CGPoint(x: 35.36, y: 162.81))
        bezier22Path.addCurve(to: CGPoint(x: 63.36, y: 163.73), controlPoint1: CGPoint(x: 44.64, y: 163.89), controlPoint2: CGPoint(x: 54.01, y: 164.36))
        bezier22Path.addCurve(to: CGPoint(x: 99.41, y: 163.79), controlPoint1: CGPoint(x: 75.37, y: 162.79), controlPoint2: CGPoint(x: 87.4, y: 164.77))
        bezier22Path.addCurve(to: CGPoint(x: 155.24, y: 163.47), controlPoint1: CGPoint(x: 118.03, y: 162.55), controlPoint2: CGPoint(x: 136.64, y: 164.71))
        bezier22Path.addCurve(to: CGPoint(x: 179.35, y: 163.99), controlPoint1: CGPoint(x: 163.28, y: 163.36), controlPoint2: CGPoint(x: 171.29, y: 164.36))
        bezier22Path.addCurve(to: CGPoint(x: 220.59, y: 163.87), controlPoint1: CGPoint(x: 193.08, y: 163.33), controlPoint2: CGPoint(x: 206.84, y: 163.16))
        bezier22Path.addCurve(to: CGPoint(x: 249.97, y: 163.71), controlPoint1: CGPoint(x: 230.39, y: 164.41), controlPoint2: CGPoint(x: 240.17, y: 162.87))
        bezier22Path.addCurve(to: CGPoint(x: 283.12, y: 163.45), controlPoint1: CGPoint(x: 261.01, y: 164.61), controlPoint2: CGPoint(x: 272.07, y: 163.41))
        bezier22Path.addCurve(to: CGPoint(x: 321.67, y: 163.63), controlPoint1: CGPoint(x: 295.99, y: 163.01), controlPoint2: CGPoint(x: 308.83, y: 164.57))
        bezier22Path.addCurve(to: CGPoint(x: 350, y: 163.99), controlPoint1: CGPoint(x: 331.12, y: 162.96), controlPoint2: CGPoint(x: 340.55, y: 164.41))
        bezier22Path.addCurve(to: CGPoint(x: 392.61, y: 163.91), controlPoint1: CGPoint(x: 364.19, y: 163.29), controlPoint2: CGPoint(x: 378.41, y: 163.17))
        bezier22Path.addCurve(to: CGPoint(x: 417.33, y: 163.55), controlPoint1: CGPoint(x: 400.85, y: 164.32), controlPoint2: CGPoint(x: 409.08, y: 163.11))
        bezier22Path.addCurve(to: CGPoint(x: 436.92, y: 164.05), controlPoint1: CGPoint(x: 423.85, y: 163.87), controlPoint2: CGPoint(x: 430.37, y: 164.09))
        bezier22Path.addCurve(to: CGPoint(x: 436.99, y: 193.28), controlPoint1: CGPoint(x: 436.93, y: 173.8), controlPoint2: CGPoint(x: 437.16, y: 183.55))
        bezier22Path.addCurve(to: CGPoint(x: 243.33, y: 193.16), controlPoint1: CGPoint(x: 372.43, y: 192.99), controlPoint2: CGPoint(x: 307.88, y: 193.24))
        bezier22Path.addCurve(to: CGPoint(x: 35.33, y: 193.27), controlPoint1: CGPoint(x: 174, y: 193.24), controlPoint2: CGPoint(x: 104.67, y: 193))
        bezier22Path.addCurve(to: CGPoint(x: 35.36, y: 162.81), controlPoint1: CGPoint(x: 35.28, y: 183.12), controlPoint2: CGPoint(x: 35.44, y: 172.96))
        bezier22Path.close()
        fillColor5797.setFill()
        bezier22Path.fill()




        //// #d16258ff
        //// Bezier 23 Drawing
        let bezier23Path = UIBezierPath()
        bezier23Path.move(to: CGPoint(x: 1.03, y: 164.03))
        bezier23Path.addCurve(to: CGPoint(x: 29.04, y: 164.35), controlPoint1: CGPoint(x: 10.36, y: 163.92), controlPoint2: CGPoint(x: 19.71, y: 165.59))
        bezier23Path.addCurve(to: CGPoint(x: 29.01, y: 193.36), controlPoint1: CGPoint(x: 29.12, y: 174.01), controlPoint2: CGPoint(x: 29.11, y: 183.68))
        bezier23Path.addCurve(to: CGPoint(x: 0.56, y: 193.35), controlPoint1: CGPoint(x: 19.53, y: 193.39), controlPoint2: CGPoint(x: 10.04, y: 193.39))
        bezier23Path.addCurve(to: CGPoint(x: 1.03, y: 164.03), controlPoint1: CGPoint(x: 0.43, y: 183.57), controlPoint2: CGPoint(x: 0.39, y: 173.79))
        bezier23Path.close()
        fillColor5763.setFill()
        bezier23Path.fill()


        //// Bezier 24 Drawing
        let bezier24Path = UIBezierPath()
        bezier24Path.move(to: CGPoint(x: 443.31, y: 165.44))
        bezier24Path.addCurve(to: CGPoint(x: 470.99, y: 164.23), controlPoint1: CGPoint(x: 452.51, y: 164.56), controlPoint2: CGPoint(x: 461.73, y: 163.51))
        bezier24Path.addCurve(to: CGPoint(x: 472.28, y: 169.67), controlPoint1: CGPoint(x: 471.44, y: 166.03), controlPoint2: CGPoint(x: 471.89, y: 167.84))
        bezier24Path.addCurve(to: CGPoint(x: 472.32, y: 201.65), controlPoint1: CGPoint(x: 473.07, y: 180.29), controlPoint2: CGPoint(x: 472.73, y: 191.01))
        bezier24Path.addCurve(to: CGPoint(x: 470.61, y: 194.19), controlPoint1: CGPoint(x: 471.83, y: 199.15), controlPoint2: CGPoint(x: 471.21, y: 196.67))
        bezier24Path.addCurve(to: CGPoint(x: 443.29, y: 194.53), controlPoint1: CGPoint(x: 461.53, y: 192.89), controlPoint2: CGPoint(x: 452.33, y: 193.21))
        bezier24Path.addCurve(to: CGPoint(x: 443.31, y: 165.44), controlPoint1: CGPoint(x: 443.11, y: 184.83), controlPoint2: CGPoint(x: 443.25, y: 175.13))
        bezier24Path.close()
        fillColor5763.setFill()
        bezier24Path.fill()




        //// #f7df94ff
        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 29.73, y: 165.08))
        bezier25Path.addCurve(to: CGPoint(x: 33.49, y: 166.12), controlPoint1: CGPoint(x: 30.68, y: 165.33), controlPoint2: CGPoint(x: 32.56, y: 165.87))
        bezier25Path.addCurve(to: CGPoint(x: 33.87, y: 217.32), controlPoint1: CGPoint(x: 33.99, y: 183.19), controlPoint2: CGPoint(x: 33.85, y: 200.25))
        bezier25Path.addCurve(to: CGPoint(x: 35, y: 231.05), controlPoint1: CGPoint(x: 33.91, y: 221.92), controlPoint2: CGPoint(x: 34.47, y: 226.49))
        bezier25Path.addCurve(to: CGPoint(x: 35.28, y: 235.91), controlPoint1: CGPoint(x: 35.11, y: 232.67), controlPoint2: CGPoint(x: 35.2, y: 234.28))
        bezier25Path.addCurve(to: CGPoint(x: 34.99, y: 344.39), controlPoint1: CGPoint(x: 35.21, y: 272.07), controlPoint2: CGPoint(x: 35.68, y: 308.24))
        bezier25Path.addCurve(to: CGPoint(x: 33.47, y: 280.81), controlPoint1: CGPoint(x: 32.6, y: 323.29), controlPoint2: CGPoint(x: 34.48, y: 301.99))
        bezier25Path.addCurve(to: CGPoint(x: 29.75, y: 279.68), controlPoint1: CGPoint(x: 32.53, y: 280.53), controlPoint2: CGPoint(x: 30.68, y: 279.96))
        bezier25Path.addCurve(to: CGPoint(x: 29.49, y: 220.81), controlPoint1: CGPoint(x: 29.21, y: 260.07), controlPoint2: CGPoint(x: 29.73, y: 240.44))
        bezier25Path.addCurve(to: CGPoint(x: 29.73, y: 165.08), controlPoint1: CGPoint(x: 30.36, y: 202.25), controlPoint2: CGPoint(x: 29.12, y: 183.65))
        bezier25Path.close()
        fillColor5798.setFill()
        bezier25Path.fill()




        //// #cb4a45ff
        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        bezier26Path.move(to: CGPoint(x: 0.56, y: 193.35))
        bezier26Path.addCurve(to: CGPoint(x: 29.01, y: 193.36), controlPoint1: CGPoint(x: 10.04, y: 193.39), controlPoint2: CGPoint(x: 19.53, y: 193.39))
        bezier26Path.addCurve(to: CGPoint(x: 29.32, y: 218.92), controlPoint1: CGPoint(x: 29.15, y: 201.88), controlPoint2: CGPoint(x: 28.89, y: 210.4))
        bezier26Path.addCurve(to: CGPoint(x: 0.43, y: 218.73), controlPoint1: CGPoint(x: 19.69, y: 218.64), controlPoint2: CGPoint(x: 10.05, y: 218.79))
        bezier26Path.addCurve(to: CGPoint(x: 0.16, y: 203.6), controlPoint1: CGPoint(x: 0.29, y: 213.69), controlPoint2: CGPoint(x: 0.13, y: 208.64))
        bezier26Path.addCurve(to: CGPoint(x: 0.56, y: 193.35), controlPoint1: CGPoint(x: 0.33, y: 200.17), controlPoint2: CGPoint(x: 0.52, y: 196.76))
        bezier26Path.close()
        fillColor5799.setFill()
        bezier26Path.fill()




        //// #cd504aff
        //// Bezier 27 Drawing
        let bezier27Path = UIBezierPath()
        bezier27Path.move(to: CGPoint(x: 35.33, y: 193.27))
        bezier27Path.addCurve(to: CGPoint(x: 243.33, y: 193.16), controlPoint1: CGPoint(x: 104.67, y: 193), controlPoint2: CGPoint(x: 174, y: 193.24))
        bezier27Path.addCurve(to: CGPoint(x: 436.99, y: 193.28), controlPoint1: CGPoint(x: 307.88, y: 193.24), controlPoint2: CGPoint(x: 372.43, y: 192.99))
        bezier27Path.addCurve(to: CGPoint(x: 436.97, y: 205.36), controlPoint1: CGPoint(x: 436.95, y: 197.31), controlPoint2: CGPoint(x: 436.95, y: 201.33))
        bezier27Path.addCurve(to: CGPoint(x: 35.35, y: 205.36), controlPoint1: CGPoint(x: 303.09, y: 205.44), controlPoint2: CGPoint(x: 169.23, y: 205.44))
        bezier27Path.addCurve(to: CGPoint(x: 35.33, y: 193.27), controlPoint1: CGPoint(x: 35.35, y: 201.32), controlPoint2: CGPoint(x: 35.36, y: 197.29))
        bezier27Path.close()
        fillColor5800.setFill()
        bezier27Path.fill()




        //// #cb4843ff
        //// Bezier 28 Drawing
        let bezier28Path = UIBezierPath()
        bezier28Path.move(to: CGPoint(x: 443.29, y: 194.53))
        bezier28Path.addCurve(to: CGPoint(x: 470.61, y: 194.19), controlPoint1: CGPoint(x: 452.33, y: 193.21), controlPoint2: CGPoint(x: 461.53, y: 192.89))
        bezier28Path.addCurve(to: CGPoint(x: 472.32, y: 201.65), controlPoint1: CGPoint(x: 471.21, y: 196.67), controlPoint2: CGPoint(x: 471.83, y: 199.15))
        bezier28Path.addCurve(to: CGPoint(x: 472.75, y: 223.29), controlPoint1: CGPoint(x: 473.15, y: 208.84), controlPoint2: CGPoint(x: 472.44, y: 216.09))
        bezier28Path.addCurve(to: CGPoint(x: 443.24, y: 221.48), controlPoint1: CGPoint(x: 463.21, y: 220.08), controlPoint2: CGPoint(x: 453.05, y: 222.12))
        bezier28Path.addCurve(to: CGPoint(x: 442.97, y: 213.04), controlPoint1: CGPoint(x: 443.13, y: 218.65), controlPoint2: CGPoint(x: 443, y: 215.85))
        bezier28Path.addCurve(to: CGPoint(x: 443.29, y: 194.53), controlPoint1: CGPoint(x: 443.04, y: 206.87), controlPoint2: CGPoint(x: 443.32, y: 200.69))
        bezier28Path.close()
        fillColor5801.setFill()
        bezier28Path.fill()




        //// #a73331ff
        //// Bezier 29 Drawing
        let bezier29Path = UIBezierPath()
        bezier29Path.move(to: CGPoint(x: 0.09, y: 204.68))
        bezier29Path.addLine(to: CGPoint(x: 0.16, y: 203.6))
        bezier29Path.addCurve(to: CGPoint(x: 0.43, y: 218.73), controlPoint1: CGPoint(x: 0.13, y: 208.64), controlPoint2: CGPoint(x: 0.29, y: 213.69))
        bezier29Path.addCurve(to: CGPoint(x: 1.04, y: 233.16), controlPoint1: CGPoint(x: 0.55, y: 223.55), controlPoint2: CGPoint(x: 0.77, y: 228.35))
        bezier29Path.addCurve(to: CGPoint(x: 29.16, y: 233.35), controlPoint1: CGPoint(x: 10.4, y: 233.68), controlPoint2: CGPoint(x: 19.79, y: 233.47))
        bezier29Path.addCurve(to: CGPoint(x: 29.21, y: 620), controlPoint1: CGPoint(x: 29.39, y: 362.23), controlPoint2: CGPoint(x: 29.16, y: 491.12))
        bezier29Path.addCurve(to: CGPoint(x: 29.47, y: 764.19), controlPoint1: CGPoint(x: 29.37, y: 668.07), controlPoint2: CGPoint(x: 28.87, y: 716.13))
        bezier29Path.addCurve(to: CGPoint(x: 95.12, y: 817.16), controlPoint1: CGPoint(x: 51.25, y: 781.96), controlPoint2: CGPoint(x: 73.16, y: 799.59))
        bezier29Path.addCurve(to: CGPoint(x: 152.37, y: 863.13), controlPoint1: CGPoint(x: 114.28, y: 832.39), controlPoint2: CGPoint(x: 133.07, y: 848.09))
        bezier29Path.addCurve(to: CGPoint(x: 212.04, y: 911.31), controlPoint1: CGPoint(x: 172.23, y: 879.23), controlPoint2: CGPoint(x: 192.08, y: 895.33))
        bezier29Path.addCurve(to: CGPoint(x: 233.88, y: 928.52), controlPoint1: CGPoint(x: 219.32, y: 917.04), controlPoint2: CGPoint(x: 226.17, y: 923.33))
        bezier29Path.addCurve(to: CGPoint(x: 290.31, y: 884.31), controlPoint1: CGPoint(x: 253, y: 914.2), controlPoint2: CGPoint(x: 271.44, y: 898.97))
        bezier29Path.addCurve(to: CGPoint(x: 337.12, y: 847.17), controlPoint1: CGPoint(x: 305.89, y: 871.89), controlPoint2: CGPoint(x: 321.65, y: 859.71))
        bezier29Path.addCurve(to: CGPoint(x: 389.55, y: 806.21), controlPoint1: CGPoint(x: 354.96, y: 833.99), controlPoint2: CGPoint(x: 372, y: 819.76))
        bezier29Path.addCurve(to: CGPoint(x: 440.56, y: 765.76), controlPoint1: CGPoint(x: 406.48, y: 792.63), controlPoint2: CGPoint(x: 423.76, y: 779.48))
        bezier29Path.addCurve(to: CGPoint(x: 442.05, y: 764.21), controlPoint1: CGPoint(x: 440.93, y: 765.37), controlPoint2: CGPoint(x: 441.68, y: 764.6))
        bezier29Path.addCurve(to: CGPoint(x: 443.36, y: 742.67), controlPoint1: CGPoint(x: 444.31, y: 757.25), controlPoint2: CGPoint(x: 443.32, y: 749.84))
        bezier29Path.addCurve(to: CGPoint(x: 443.37, y: 545.33), controlPoint1: CGPoint(x: 443.15, y: 676.89), controlPoint2: CGPoint(x: 443.07, y: 611.11))
        bezier29Path.addCurve(to: CGPoint(x: 442.87, y: 501.8), controlPoint1: CGPoint(x: 443.15, y: 530.83), controlPoint2: CGPoint(x: 443.96, y: 516.28))
        bezier29Path.addCurve(to: CGPoint(x: 443.24, y: 368.23), controlPoint1: CGPoint(x: 443.51, y: 457.28), controlPoint2: CGPoint(x: 443.29, y: 412.75))
        bezier29Path.addCurve(to: CGPoint(x: 443.24, y: 221.48), controlPoint1: CGPoint(x: 443.01, y: 319.31), controlPoint2: CGPoint(x: 443.43, y: 270.39))
        bezier29Path.addCurve(to: CGPoint(x: 472.75, y: 223.29), controlPoint1: CGPoint(x: 453.05, y: 222.12), controlPoint2: CGPoint(x: 463.21, y: 220.08))
        bezier29Path.addCurve(to: CGPoint(x: 472.61, y: 686.67), controlPoint1: CGPoint(x: 472.45, y: 377.75), controlPoint2: CGPoint(x: 472.71, y: 532.21))
        bezier29Path.addCurve(to: CGPoint(x: 472.43, y: 778.36), controlPoint1: CGPoint(x: 472.48, y: 717.23), controlPoint2: CGPoint(x: 472.89, y: 747.8))
        bezier29Path.addCurve(to: CGPoint(x: 243.52, y: 958.91), controlPoint1: CGPoint(x: 396.16, y: 838.6), controlPoint2: CGPoint(x: 319.77, y: 898.67))
        bezier29Path.addCurve(to: CGPoint(x: 233.11, y: 966.08), controlPoint1: CGPoint(x: 240.13, y: 961.37), controlPoint2: CGPoint(x: 237.17, y: 964.75))
        bezier29Path.addCurve(to: CGPoint(x: 134.87, y: 887.11), controlPoint1: CGPoint(x: 200.15, y: 940.05), controlPoint2: CGPoint(x: 167.64, y: 913.39))
        bezier29Path.addCurve(to: CGPoint(x: -0.12, y: 778.23), controlPoint1: CGPoint(x: 89.88, y: 850.8), controlPoint2: CGPoint(x: 44.79, y: 814.63))
        bezier29Path.addCurve(to: CGPoint(x: -0.21, y: 234.67), controlPoint1: CGPoint(x: -0.35, y: 597.04), controlPoint2: CGPoint(x: -0.17, y: 415.85))
        bezier29Path.addCurve(to: CGPoint(x: 0.09, y: 204.68), controlPoint1: CGPoint(x: 0.01, y: 224.67), controlPoint2: CGPoint(x: -0.6, y: 214.67))
        bezier29Path.close()
        fillColor5771.setFill()
        bezier29Path.fill()


        //// Bezier 30 Drawing
        let bezier30Path = UIBezierPath()
        bezier30Path.move(to: CGPoint(x: 35.28, y: 235.91))
        bezier30Path.addCurve(to: CGPoint(x: 53.92, y: 235.76), controlPoint1: CGPoint(x: 41.48, y: 235.28), controlPoint2: CGPoint(x: 47.71, y: 235.31))
        bezier30Path.addCurve(to: CGPoint(x: 89.51, y: 235.15), controlPoint1: CGPoint(x: 65.79, y: 236.57), controlPoint2: CGPoint(x: 77.65, y: 235.39))
        bezier30Path.addCurve(to: CGPoint(x: 122.03, y: 235.73), controlPoint1: CGPoint(x: 100.36, y: 234.83), controlPoint2: CGPoint(x: 111.17, y: 236.69))
        bezier30Path.addCurve(to: CGPoint(x: 152.67, y: 236), controlPoint1: CGPoint(x: 132.24, y: 234.83), controlPoint2: CGPoint(x: 142.45, y: 236.36))
        bezier30Path.addCurve(to: CGPoint(x: 190.11, y: 235.64), controlPoint1: CGPoint(x: 165.15, y: 235.63), controlPoint2: CGPoint(x: 177.64, y: 234.48))
        bezier30Path.addCurve(to: CGPoint(x: 223.31, y: 235.69), controlPoint1: CGPoint(x: 201.17, y: 236.76), controlPoint2: CGPoint(x: 212.24, y: 234.77))
        bezier30Path.addCurve(to: CGPoint(x: 275.44, y: 235.64), controlPoint1: CGPoint(x: 240.68, y: 237), controlPoint2: CGPoint(x: 258.07, y: 234))
        bezier30Path.addCurve(to: CGPoint(x: 308.64, y: 235.69), controlPoint1: CGPoint(x: 286.49, y: 236.77), controlPoint2: CGPoint(x: 297.57, y: 234.77))
        bezier30Path.addCurve(to: CGPoint(x: 358.72, y: 235.51), controlPoint1: CGPoint(x: 325.33, y: 236.97), controlPoint2: CGPoint(x: 342.03, y: 234.17))
        bezier30Path.addCurve(to: CGPoint(x: 379.23, y: 235.67), controlPoint1: CGPoint(x: 365.55, y: 236.08), controlPoint2: CGPoint(x: 372.4, y: 236.15))
        bezier30Path.addCurve(to: CGPoint(x: 410.03, y: 235.95), controlPoint1: CGPoint(x: 389.49, y: 234.88), controlPoint2: CGPoint(x: 399.76, y: 236.49))
        bezier30Path.addCurve(to: CGPoint(x: 436.93, y: 234.79), controlPoint1: CGPoint(x: 419, y: 235.49), controlPoint2: CGPoint(x: 427.99, y: 235.45))
        bezier30Path.addCurve(to: CGPoint(x: 437.09, y: 284), controlPoint1: CGPoint(x: 437.2, y: 251.2), controlPoint2: CGPoint(x: 437.04, y: 267.6))
        bezier30Path.addCurve(to: CGPoint(x: 437.16, y: 733.33), controlPoint1: CGPoint(x: 437.12, y: 433.79), controlPoint2: CGPoint(x: 437.16, y: 583.56))
        bezier30Path.addCurve(to: CGPoint(x: 435.83, y: 763.6), controlPoint1: CGPoint(x: 437.08, y: 743.43), controlPoint2: CGPoint(x: 438.01, y: 753.64))
        bezier30Path.addCurve(to: CGPoint(x: 416.52, y: 777.19), controlPoint1: CGPoint(x: 428.55, y: 766.83), controlPoint2: CGPoint(x: 422.71, y: 772.33))
        bezier30Path.addCurve(to: CGPoint(x: 330.65, y: 844.91), controlPoint1: CGPoint(x: 387.91, y: 799.77), controlPoint2: CGPoint(x: 359.16, y: 822.19))
        bezier30Path.addCurve(to: CGPoint(x: 239.12, y: 917.19), controlPoint1: CGPoint(x: 300.27, y: 869.16), controlPoint2: CGPoint(x: 269.44, y: 892.85))
        bezier30Path.addCurve(to: CGPoint(x: 231.04, y: 919.07), controlPoint1: CGPoint(x: 236.83, y: 918.75), controlPoint2: CGPoint(x: 233.61, y: 921.92))
        bezier30Path.addCurve(to: CGPoint(x: 159.53, y: 861.4), controlPoint1: CGPoint(x: 207.24, y: 899.8), controlPoint2: CGPoint(x: 183.37, y: 880.61))
        bezier30Path.addCurve(to: CGPoint(x: 101.2, y: 814.36), controlPoint1: CGPoint(x: 140.17, y: 845.61), controlPoint2: CGPoint(x: 120.68, y: 830))
        bezier30Path.addCurve(to: CGPoint(x: 40.47, y: 765.51), controlPoint1: CGPoint(x: 81.08, y: 797.92), controlPoint2: CGPoint(x: 60.88, y: 781.59))
        bezier30Path.addCurve(to: CGPoint(x: 35.57, y: 758.61), controlPoint1: CGPoint(x: 38.39, y: 763.61), controlPoint2: CGPoint(x: 35.71, y: 761.68))
        bezier30Path.addCurve(to: CGPoint(x: 35.39, y: 741.33), controlPoint1: CGPoint(x: 34.93, y: 752.87), controlPoint2: CGPoint(x: 35.41, y: 747.08))
        bezier30Path.addCurve(to: CGPoint(x: 35.28, y: 630.67), controlPoint1: CGPoint(x: 35.45, y: 704.44), controlPoint2: CGPoint(x: 35.32, y: 667.56))
        bezier30Path.addCurve(to: CGPoint(x: 35.01, y: 545.73), controlPoint1: CGPoint(x: 35.04, y: 602.36), controlPoint2: CGPoint(x: 35.96, y: 574.03))
        bezier30Path.addCurve(to: CGPoint(x: 34.99, y: 459.05), controlPoint1: CGPoint(x: 35.47, y: 516.84), controlPoint2: CGPoint(x: 35.72, y: 487.93))
        bezier30Path.addCurve(to: CGPoint(x: 35.35, y: 373.33), controlPoint1: CGPoint(x: 35.67, y: 430.49), controlPoint2: CGPoint(x: 35.23, y: 401.91))
        bezier30Path.addCurve(to: CGPoint(x: 34.99, y: 344.39), controlPoint1: CGPoint(x: 35.36, y: 363.68), controlPoint2: CGPoint(x: 35.56, y: 354.03))
        bezier30Path.addCurve(to: CGPoint(x: 35.28, y: 235.91), controlPoint1: CGPoint(x: 35.68, y: 308.24), controlPoint2: CGPoint(x: 35.21, y: 272.07))
        bezier30Path.close()
        fillColor5771.setFill()
        bezier30Path.fill()




        //// #c9423fff
        //// Bezier 31 Drawing
        let bezier31Path = UIBezierPath()
        bezier31Path.move(to: CGPoint(x: 35.35, y: 205.36))
        bezier31Path.addCurve(to: CGPoint(x: 436.97, y: 205.36), controlPoint1: CGPoint(x: 169.23, y: 205.44), controlPoint2: CGPoint(x: 303.09, y: 205.44))
        bezier31Path.addCurve(to: CGPoint(x: 437, y: 223.89), controlPoint1: CGPoint(x: 437.03, y: 211.53), controlPoint2: CGPoint(x: 437.07, y: 217.72))
        bezier31Path.addCurve(to: CGPoint(x: 106.01, y: 223.72), controlPoint1: CGPoint(x: 326.67, y: 223.49), controlPoint2: CGPoint(x: 216.33, y: 223.84))
        bezier31Path.addCurve(to: CGPoint(x: 35.19, y: 223.89), controlPoint1: CGPoint(x: 82.4, y: 223.84), controlPoint2: CGPoint(x: 58.79, y: 223.48))
        bezier31Path.addCurve(to: CGPoint(x: 35.35, y: 205.36), controlPoint1: CGPoint(x: 35.37, y: 217.72), controlPoint2: CGPoint(x: 35.35, y: 211.53))
        bezier31Path.close()
        fillColor5802.setFill()
        bezier31Path.fill()




        //// #f3d789ff
        //// Bezier 32 Drawing
        let bezier32Path = UIBezierPath()
        bezier32Path.move(to: CGPoint(x: 440.75, y: 230.69))
        bezier32Path.addCurve(to: CGPoint(x: 442.97, y: 213.04), controlPoint1: CGPoint(x: 443.08, y: 225.11), controlPoint2: CGPoint(x: 442.73, y: 218.95))
        bezier32Path.addCurve(to: CGPoint(x: 443.24, y: 221.48), controlPoint1: CGPoint(x: 443, y: 215.85), controlPoint2: CGPoint(x: 443.13, y: 218.65))
        bezier32Path.addCurve(to: CGPoint(x: 443.24, y: 368.23), controlPoint1: CGPoint(x: 443.43, y: 270.39), controlPoint2: CGPoint(x: 443.01, y: 319.31))
        bezier32Path.addCurve(to: CGPoint(x: 438.31, y: 360.59), controlPoint1: CGPoint(x: 442.35, y: 365.24), controlPoint2: CGPoint(x: 440.47, y: 362.75))
        bezier32Path.addCurve(to: CGPoint(x: 438.03, y: 321.33), controlPoint1: CGPoint(x: 437.39, y: 347.51), controlPoint2: CGPoint(x: 438.08, y: 334.41))
        bezier32Path.addCurve(to: CGPoint(x: 438.28, y: 241.24), controlPoint1: CGPoint(x: 438.07, y: 294.64), controlPoint2: CGPoint(x: 438.64, y: 267.93))
        bezier32Path.addCurve(to: CGPoint(x: 440.75, y: 230.69), controlPoint1: CGPoint(x: 438.15, y: 237.56), controlPoint2: CGPoint(x: 439.41, y: 234.07))
        bezier32Path.close()
        fillColor5803.setFill()
        bezier32Path.fill()




        //// #b43d39ff
        //// Bezier 33 Drawing
        let bezier33Path = UIBezierPath()
        bezier33Path.move(to: CGPoint(x: 0.43, y: 218.73))
        bezier33Path.addCurve(to: CGPoint(x: 29.32, y: 218.92), controlPoint1: CGPoint(x: 10.05, y: 218.79), controlPoint2: CGPoint(x: 19.69, y: 218.64))
        bezier33Path.addCurve(to: CGPoint(x: 29.44, y: 221.92), controlPoint1: CGPoint(x: 29.36, y: 219.67), controlPoint2: CGPoint(x: 29.41, y: 221.17))
        bezier33Path.addCurve(to: CGPoint(x: 29.16, y: 233.35), controlPoint1: CGPoint(x: 29.33, y: 225.73), controlPoint2: CGPoint(x: 29.17, y: 229.53))
        bezier33Path.addCurve(to: CGPoint(x: 1.04, y: 233.16), controlPoint1: CGPoint(x: 19.79, y: 233.47), controlPoint2: CGPoint(x: 10.4, y: 233.68))
        bezier33Path.addCurve(to: CGPoint(x: 0.43, y: 218.73), controlPoint1: CGPoint(x: 0.77, y: 228.35), controlPoint2: CGPoint(x: 0.55, y: 223.55))
        bezier33Path.close()
        fillColor5804.setFill()
        bezier33Path.fill()




        //// #b13c38ff
        //// Bezier 34 Drawing
        let bezier34Path = UIBezierPath()
        bezier34Path.move(to: CGPoint(x: 35.19, y: 223.89))
        bezier34Path.addCurve(to: CGPoint(x: 106.01, y: 223.72), controlPoint1: CGPoint(x: 58.79, y: 223.48), controlPoint2: CGPoint(x: 82.4, y: 223.84))
        bezier34Path.addCurve(to: CGPoint(x: 437, y: 223.89), controlPoint1: CGPoint(x: 216.33, y: 223.84), controlPoint2: CGPoint(x: 326.67, y: 223.49))
        bezier34Path.addCurve(to: CGPoint(x: 436.93, y: 234.79), controlPoint1: CGPoint(x: 436.96, y: 227.52), controlPoint2: CGPoint(x: 436.92, y: 231.16))
        bezier34Path.addCurve(to: CGPoint(x: 410.03, y: 235.95), controlPoint1: CGPoint(x: 427.99, y: 235.45), controlPoint2: CGPoint(x: 419, y: 235.49))
        bezier34Path.addCurve(to: CGPoint(x: 379.23, y: 235.67), controlPoint1: CGPoint(x: 399.76, y: 236.49), controlPoint2: CGPoint(x: 389.49, y: 234.88))
        bezier34Path.addCurve(to: CGPoint(x: 358.72, y: 235.51), controlPoint1: CGPoint(x: 372.4, y: 236.15), controlPoint2: CGPoint(x: 365.55, y: 236.08))
        bezier34Path.addCurve(to: CGPoint(x: 308.64, y: 235.69), controlPoint1: CGPoint(x: 342.03, y: 234.17), controlPoint2: CGPoint(x: 325.33, y: 236.97))
        bezier34Path.addCurve(to: CGPoint(x: 275.44, y: 235.64), controlPoint1: CGPoint(x: 297.57, y: 234.77), controlPoint2: CGPoint(x: 286.49, y: 236.77))
        bezier34Path.addCurve(to: CGPoint(x: 223.31, y: 235.69), controlPoint1: CGPoint(x: 258.07, y: 234), controlPoint2: CGPoint(x: 240.68, y: 237))
        bezier34Path.addCurve(to: CGPoint(x: 190.11, y: 235.64), controlPoint1: CGPoint(x: 212.24, y: 234.77), controlPoint2: CGPoint(x: 201.17, y: 236.76))
        bezier34Path.addCurve(to: CGPoint(x: 152.67, y: 236), controlPoint1: CGPoint(x: 177.64, y: 234.48), controlPoint2: CGPoint(x: 165.15, y: 235.63))
        bezier34Path.addCurve(to: CGPoint(x: 122.03, y: 235.73), controlPoint1: CGPoint(x: 142.45, y: 236.36), controlPoint2: CGPoint(x: 132.24, y: 234.83))
        bezier34Path.addCurve(to: CGPoint(x: 89.51, y: 235.15), controlPoint1: CGPoint(x: 111.17, y: 236.69), controlPoint2: CGPoint(x: 100.36, y: 234.83))
        bezier34Path.addCurve(to: CGPoint(x: 53.92, y: 235.76), controlPoint1: CGPoint(x: 77.65, y: 235.39), controlPoint2: CGPoint(x: 65.79, y: 236.57))
        bezier34Path.addCurve(to: CGPoint(x: 35.28, y: 235.91), controlPoint1: CGPoint(x: 47.71, y: 235.31), controlPoint2: CGPoint(x: 41.48, y: 235.28))
        bezier34Path.addCurve(to: CGPoint(x: 35, y: 231.05), controlPoint1: CGPoint(x: 35.2, y: 234.28), controlPoint2: CGPoint(x: 35.11, y: 232.67))
        bezier34Path.addCurve(to: CGPoint(x: 35.19, y: 223.89), controlPoint1: CGPoint(x: 35.01, y: 228.67), controlPoint2: CGPoint(x: 35.11, y: 226.28))
        bezier34Path.close()
        fillColor5805.setFill()
        bezier34Path.fill()




        //// #f0ce7fff
        //// Bezier 35 Drawing
        let bezier35Path = UIBezierPath()
        bezier35Path.move(to: CGPoint(x: 29.75, y: 279.68))
        bezier35Path.addCurve(to: CGPoint(x: 33.47, y: 280.81), controlPoint1: CGPoint(x: 30.68, y: 279.96), controlPoint2: CGPoint(x: 32.53, y: 280.53))
        bezier35Path.addCurve(to: CGPoint(x: 34.99, y: 344.39), controlPoint1: CGPoint(x: 34.48, y: 301.99), controlPoint2: CGPoint(x: 32.6, y: 323.29))
        bezier35Path.addCurve(to: CGPoint(x: 35.35, y: 373.33), controlPoint1: CGPoint(x: 35.56, y: 354.03), controlPoint2: CGPoint(x: 35.36, y: 363.68))
        bezier35Path.addCurve(to: CGPoint(x: 34.99, y: 459.05), controlPoint1: CGPoint(x: 35.23, y: 401.91), controlPoint2: CGPoint(x: 35.67, y: 430.49))
        bezier35Path.addCurve(to: CGPoint(x: 33.43, y: 398.15), controlPoint1: CGPoint(x: 32.92, y: 438.83), controlPoint2: CGPoint(x: 34.28, y: 418.44))
        bezier35Path.addCurve(to: CGPoint(x: 29.69, y: 397.03), controlPoint1: CGPoint(x: 32.49, y: 397.87), controlPoint2: CGPoint(x: 30.63, y: 397.31))
        bezier35Path.addCurve(to: CGPoint(x: 29.75, y: 279.68), controlPoint1: CGPoint(x: 29.24, y: 357.92), controlPoint2: CGPoint(x: 29.67, y: 318.8))
        bezier35Path.close()
        fillColor5806.setFill()
        bezier35Path.fill()




        //// #ecc372ff
        //// Bezier 36 Drawing
        let bezier36Path = UIBezierPath()
        bezier36Path.move(to: CGPoint(x: 438.31, y: 360.59))
        bezier36Path.addCurve(to: CGPoint(x: 443.24, y: 368.23), controlPoint1: CGPoint(x: 440.47, y: 362.75), controlPoint2: CGPoint(x: 442.35, y: 365.24))
        bezier36Path.addCurve(to: CGPoint(x: 442.87, y: 501.8), controlPoint1: CGPoint(x: 443.29, y: 412.75), controlPoint2: CGPoint(x: 443.51, y: 457.28))
        bezier36Path.addCurve(to: CGPoint(x: 441.45, y: 470.15), controlPoint1: CGPoint(x: 440.71, y: 491.36), controlPoint2: CGPoint(x: 441.89, y: 480.71))
        bezier36Path.addCurve(to: CGPoint(x: 438.05, y: 468.96), controlPoint1: CGPoint(x: 440.61, y: 469.85), controlPoint2: CGPoint(x: 438.91, y: 469.25))
        bezier36Path.addCurve(to: CGPoint(x: 438.31, y: 360.59), controlPoint1: CGPoint(x: 437.16, y: 432.84), controlPoint2: CGPoint(x: 438.44, y: 396.71))
        bezier36Path.close()
        fillColor5807.setFill()
        bezier36Path.fill()




        //// #e8b869ff
        //// Bezier 37 Drawing
        let bezier37Path = UIBezierPath()
        bezier37Path.move(to: CGPoint(x: 29.69, y: 397.03))
        bezier37Path.addCurve(to: CGPoint(x: 33.43, y: 398.15), controlPoint1: CGPoint(x: 30.63, y: 397.31), controlPoint2: CGPoint(x: 32.49, y: 397.87))
        bezier37Path.addCurve(to: CGPoint(x: 34.99, y: 459.05), controlPoint1: CGPoint(x: 34.28, y: 418.44), controlPoint2: CGPoint(x: 32.92, y: 438.83))
        bezier37Path.addCurve(to: CGPoint(x: 35.01, y: 545.73), controlPoint1: CGPoint(x: 35.72, y: 487.93), controlPoint2: CGPoint(x: 35.47, y: 516.84))
        bezier37Path.addCurve(to: CGPoint(x: 33.43, y: 490.15), controlPoint1: CGPoint(x: 33.15, y: 527.27), controlPoint2: CGPoint(x: 34.19, y: 508.67))
        bezier37Path.addCurve(to: CGPoint(x: 29.67, y: 489.03), controlPoint1: CGPoint(x: 32.48, y: 489.87), controlPoint2: CGPoint(x: 30.6, y: 489.31))
        bezier37Path.addCurve(to: CGPoint(x: 29.69, y: 397.03), controlPoint1: CGPoint(x: 29.29, y: 458.36), controlPoint2: CGPoint(x: 29.56, y: 427.69))
        bezier37Path.close()
        fillColor5808.setFill()
        bezier37Path.fill()




        //// #e2a558ff
        //// Bezier 38 Drawing
        let bezier38Path = UIBezierPath()
        bezier38Path.move(to: CGPoint(x: 438.05, y: 468.96))
        bezier38Path.addCurve(to: CGPoint(x: 441.45, y: 470.15), controlPoint1: CGPoint(x: 438.91, y: 469.25), controlPoint2: CGPoint(x: 440.61, y: 469.85))
        bezier38Path.addCurve(to: CGPoint(x: 442.87, y: 501.8), controlPoint1: CGPoint(x: 441.89, y: 480.71), controlPoint2: CGPoint(x: 440.71, y: 491.36))
        bezier38Path.addCurve(to: CGPoint(x: 443.37, y: 545.33), controlPoint1: CGPoint(x: 443.96, y: 516.28), controlPoint2: CGPoint(x: 443.15, y: 530.83))
        bezier38Path.addCurve(to: CGPoint(x: 443.36, y: 742.67), controlPoint1: CGPoint(x: 443.07, y: 611.11), controlPoint2: CGPoint(x: 443.15, y: 676.89))
        bezier38Path.addCurve(to: CGPoint(x: 442.05, y: 764.21), controlPoint1: CGPoint(x: 443.32, y: 749.84), controlPoint2: CGPoint(x: 444.31, y: 757.25))
        bezier38Path.addCurve(to: CGPoint(x: 441.85, y: 673.35), controlPoint1: CGPoint(x: 440.88, y: 733.95), controlPoint2: CGPoint(x: 441.91, y: 703.63))
        bezier38Path.addCurve(to: CGPoint(x: 441.41, y: 544.95), controlPoint1: CGPoint(x: 442.24, y: 630.53), controlPoint2: CGPoint(x: 441.73, y: 587.73))
        bezier38Path.addCurve(to: CGPoint(x: 438.05, y: 543.68), controlPoint1: CGPoint(x: 440.57, y: 544.63), controlPoint2: CGPoint(x: 438.89, y: 544))
        bezier38Path.addCurve(to: CGPoint(x: 438.05, y: 468.96), controlPoint1: CGPoint(x: 437.19, y: 518.77), controlPoint2: CGPoint(x: 438.55, y: 493.87))
        bezier38Path.close()
        fillColor5809.setFill()
        bezier38Path.fill()




        //// #e0a055ff
        //// Bezier 39 Drawing
        let bezier39Path = UIBezierPath()
        bezier39Path.move(to: CGPoint(x: 29.67, y: 489.03))
        bezier39Path.addCurve(to: CGPoint(x: 33.43, y: 490.15), controlPoint1: CGPoint(x: 30.6, y: 489.31), controlPoint2: CGPoint(x: 32.48, y: 489.87))
        bezier39Path.addCurve(to: CGPoint(x: 35.01, y: 545.73), controlPoint1: CGPoint(x: 34.19, y: 508.67), controlPoint2: CGPoint(x: 33.15, y: 527.27))
        bezier39Path.addCurve(to: CGPoint(x: 35.28, y: 630.67), controlPoint1: CGPoint(x: 35.96, y: 574.03), controlPoint2: CGPoint(x: 35.04, y: 602.36))
        bezier39Path.addCurve(to: CGPoint(x: 35.39, y: 741.33), controlPoint1: CGPoint(x: 35.32, y: 667.56), controlPoint2: CGPoint(x: 35.45, y: 704.44))
        bezier39Path.addCurve(to: CGPoint(x: 35.57, y: 758.61), controlPoint1: CGPoint(x: 35.41, y: 747.08), controlPoint2: CGPoint(x: 34.93, y: 752.87))
        bezier39Path.addCurve(to: CGPoint(x: 40.47, y: 765.51), controlPoint1: CGPoint(x: 35.71, y: 761.68), controlPoint2: CGPoint(x: 38.39, y: 763.61))
        bezier39Path.addCurve(to: CGPoint(x: 101.2, y: 814.36), controlPoint1: CGPoint(x: 60.88, y: 781.59), controlPoint2: CGPoint(x: 81.08, y: 797.92))
        bezier39Path.addCurve(to: CGPoint(x: 95.12, y: 817.16), controlPoint1: CGPoint(x: 99.17, y: 815.29), controlPoint2: CGPoint(x: 97.15, y: 816.21))
        bezier39Path.addCurve(to: CGPoint(x: 29.47, y: 764.19), controlPoint1: CGPoint(x: 73.16, y: 799.59), controlPoint2: CGPoint(x: 51.25, y: 781.96))
        bezier39Path.addCurve(to: CGPoint(x: 29.61, y: 750.96), controlPoint1: CGPoint(x: 29.56, y: 759.77), controlPoint2: CGPoint(x: 29.61, y: 755.36))
        bezier39Path.addCurve(to: CGPoint(x: 33.44, y: 749.85), controlPoint1: CGPoint(x: 30.56, y: 750.68), controlPoint2: CGPoint(x: 32.48, y: 750.13))
        bezier39Path.addCurve(to: CGPoint(x: 33.44, y: 556.81), controlPoint1: CGPoint(x: 33.84, y: 685.51), controlPoint2: CGPoint(x: 34.71, y: 621.15))
        bezier39Path.addCurve(to: CGPoint(x: 29.64, y: 555.69), controlPoint1: CGPoint(x: 32.49, y: 556.53), controlPoint2: CGPoint(x: 30.59, y: 555.97))
        bezier39Path.addCurve(to: CGPoint(x: 29.67, y: 489.03), controlPoint1: CGPoint(x: 29.37, y: 533.47), controlPoint2: CGPoint(x: 29.45, y: 511.24))
        bezier39Path.close()
        fillColor5780.setFill()
        bezier39Path.fill()




        //// #d78641ff
        //// Bezier 40 Drawing
        let bezier40Path = UIBezierPath()
        bezier40Path.move(to: CGPoint(x: 438.05, y: 543.68))
        bezier40Path.addCurve(to: CGPoint(x: 441.41, y: 544.95), controlPoint1: CGPoint(x: 438.89, y: 544), controlPoint2: CGPoint(x: 440.57, y: 544.63))
        bezier40Path.addCurve(to: CGPoint(x: 441.85, y: 673.35), controlPoint1: CGPoint(x: 441.73, y: 587.73), controlPoint2: CGPoint(x: 442.24, y: 630.53))
        bezier40Path.addCurve(to: CGPoint(x: 442.05, y: 764.21), controlPoint1: CGPoint(x: 441.91, y: 703.63), controlPoint2: CGPoint(x: 440.88, y: 733.95))
        bezier40Path.addCurve(to: CGPoint(x: 440.56, y: 765.76), controlPoint1: CGPoint(x: 441.68, y: 764.6), controlPoint2: CGPoint(x: 440.93, y: 765.37))
        bezier40Path.addCurve(to: CGPoint(x: 435.83, y: 763.6), controlPoint1: CGPoint(x: 438.96, y: 765.08), controlPoint2: CGPoint(x: 437.39, y: 764.35))
        bezier40Path.addCurve(to: CGPoint(x: 438.24, y: 753.41), controlPoint1: CGPoint(x: 437.12, y: 760.35), controlPoint2: CGPoint(x: 438.29, y: 756.96))
        bezier40Path.addCurve(to: CGPoint(x: 438.05, y: 543.68), controlPoint1: CGPoint(x: 437.4, y: 683.51), controlPoint2: CGPoint(x: 437.73, y: 613.59))
        bezier40Path.close()
        fillColor5810.setFill()
        bezier40Path.fill()




        //// #d68441ff
        //// Bezier 41 Drawing
        let bezier41Path = UIBezierPath()
        bezier41Path.move(to: CGPoint(x: 29.64, y: 555.69))
        bezier41Path.addCurve(to: CGPoint(x: 33.44, y: 556.81), controlPoint1: CGPoint(x: 30.59, y: 555.97), controlPoint2: CGPoint(x: 32.49, y: 556.53))
        bezier41Path.addCurve(to: CGPoint(x: 33.44, y: 749.85), controlPoint1: CGPoint(x: 34.71, y: 621.15), controlPoint2: CGPoint(x: 33.84, y: 685.51))
        bezier41Path.addCurve(to: CGPoint(x: 29.61, y: 750.96), controlPoint1: CGPoint(x: 32.48, y: 750.13), controlPoint2: CGPoint(x: 30.56, y: 750.68))
        bezier41Path.addCurve(to: CGPoint(x: 29.64, y: 555.69), controlPoint1: CGPoint(x: 29.44, y: 685.87), controlPoint2: CGPoint(x: 29.36, y: 620.79))
        bezier41Path.close()
        fillColor5782.setFill()
        bezier41Path.fill()




        //// #e2a75bff
        //// Bezier 42 Drawing
        let bezier42Path = UIBezierPath()
        bezier42Path.move(to: CGPoint(x: 416.52, y: 777.19))
        bezier42Path.addCurve(to: CGPoint(x: 435.83, y: 763.6), controlPoint1: CGPoint(x: 422.71, y: 772.33), controlPoint2: CGPoint(x: 428.55, y: 766.83))
        bezier42Path.addCurve(to: CGPoint(x: 440.56, y: 765.76), controlPoint1: CGPoint(x: 437.39, y: 764.35), controlPoint2: CGPoint(x: 438.96, y: 765.08))
        bezier42Path.addCurve(to: CGPoint(x: 389.55, y: 806.21), controlPoint1: CGPoint(x: 423.76, y: 779.48), controlPoint2: CGPoint(x: 406.48, y: 792.63))
        bezier42Path.addCurve(to: CGPoint(x: 337.12, y: 847.17), controlPoint1: CGPoint(x: 372, y: 819.76), controlPoint2: CGPoint(x: 354.96, y: 833.99))
        bezier42Path.addCurve(to: CGPoint(x: 330.69, y: 847.96), controlPoint1: CGPoint(x: 334.99, y: 847.48), controlPoint2: CGPoint(x: 332.84, y: 847.71))
        bezier42Path.addCurve(to: CGPoint(x: 330.65, y: 844.91), controlPoint1: CGPoint(x: 330.68, y: 847.19), controlPoint2: CGPoint(x: 330.67, y: 845.67))
        bezier42Path.addCurve(to: CGPoint(x: 416.52, y: 777.19), controlPoint1: CGPoint(x: 359.16, y: 822.19), controlPoint2: CGPoint(x: 387.91, y: 799.77))
        bezier42Path.close()
        fillColor5811.setFill()
        bezier42Path.fill()




        //// #e7b466ff
        //// Bezier 43 Drawing
        let bezier43Path = UIBezierPath()
        bezier43Path.move(to: CGPoint(x: 101.2, y: 814.36))
        bezier43Path.addCurve(to: CGPoint(x: 159.53, y: 861.4), controlPoint1: CGPoint(x: 120.68, y: 830), controlPoint2: CGPoint(x: 140.17, y: 845.61))
        bezier43Path.addCurve(to: CGPoint(x: 152.37, y: 863.13), controlPoint1: CGPoint(x: 157.15, y: 861.97), controlPoint2: CGPoint(x: 154.76, y: 862.55))
        bezier43Path.addCurve(to: CGPoint(x: 95.12, y: 817.16), controlPoint1: CGPoint(x: 133.07, y: 848.09), controlPoint2: CGPoint(x: 114.28, y: 832.39))
        bezier43Path.addCurve(to: CGPoint(x: 101.2, y: 814.36), controlPoint1: CGPoint(x: 97.15, y: 816.21), controlPoint2: CGPoint(x: 99.17, y: 815.29))
        bezier43Path.close()
        fillColor5812.setFill()
        bezier43Path.fill()




        //// #efc878ff
        //// Bezier 44 Drawing
        let bezier44Path = UIBezierPath()
        bezier44Path.move(to: CGPoint(x: 239.12, y: 917.19))
        bezier44Path.addCurve(to: CGPoint(x: 330.65, y: 844.91), controlPoint1: CGPoint(x: 269.44, y: 892.85), controlPoint2: CGPoint(x: 300.27, y: 869.16))
        bezier44Path.addCurve(to: CGPoint(x: 330.69, y: 847.96), controlPoint1: CGPoint(x: 330.67, y: 845.67), controlPoint2: CGPoint(x: 330.68, y: 847.19))
        bezier44Path.addCurve(to: CGPoint(x: 337.12, y: 847.17), controlPoint1: CGPoint(x: 332.84, y: 847.71), controlPoint2: CGPoint(x: 334.99, y: 847.48))
        bezier44Path.addCurve(to: CGPoint(x: 290.31, y: 884.31), controlPoint1: CGPoint(x: 321.65, y: 859.71), controlPoint2: CGPoint(x: 305.89, y: 871.89))
        bezier44Path.addCurve(to: CGPoint(x: 233.88, y: 928.52), controlPoint1: CGPoint(x: 271.44, y: 898.97), controlPoint2: CGPoint(x: 253, y: 914.2))
        bezier44Path.addCurve(to: CGPoint(x: 212.04, y: 911.31), controlPoint1: CGPoint(x: 226.17, y: 923.33), controlPoint2: CGPoint(x: 219.32, y: 917.04))
        bezier44Path.addCurve(to: CGPoint(x: 152.37, y: 863.13), controlPoint1: CGPoint(x: 192.08, y: 895.33), controlPoint2: CGPoint(x: 172.23, y: 879.23))
        bezier44Path.addCurve(to: CGPoint(x: 159.53, y: 861.4), controlPoint1: CGPoint(x: 154.76, y: 862.55), controlPoint2: CGPoint(x: 157.15, y: 861.97))
        bezier44Path.addCurve(to: CGPoint(x: 231.04, y: 919.07), controlPoint1: CGPoint(x: 183.37, y: 880.61), controlPoint2: CGPoint(x: 207.24, y: 899.8))
        bezier44Path.addCurve(to: CGPoint(x: 239.12, y: 917.19), controlPoint1: CGPoint(x: 233.61, y: 921.92), controlPoint2: CGPoint(x: 236.83, y: 918.75))
        bezier44Path.close()
        fillColor5813.setFill()
        bezier44Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawBadge4(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 472, height: 928), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 472, height: 928), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 472, y: resizedFrame.height / 928)


        //// Color Declarations
        let fillColor5746 = UIColor(red: 0.820, green: 0.388, blue: 0.349, alpha: 1.000)
        let fillColor5749 = UIColor(red: 0.667, green: 0.200, blue: 0.192, alpha: 1.000)
        let fillColor5756 = UIColor(red: 0.839, green: 0.459, blue: 0.451, alpha: 1.000)
        let fillColor5761 = UIColor(red: 0.831, green: 0.435, blue: 0.412, alpha: 1.000)
        let fillColor5763 = UIColor(red: 0.820, green: 0.384, blue: 0.345, alpha: 1.000)
        let fillColor5769 = UIColor(red: 0.796, green: 0.286, blue: 0.267, alpha: 1.000)
        let fillColor5771 = UIColor(red: 0.655, green: 0.200, blue: 0.192, alpha: 1.000)
        let fillColor5782 = UIColor(red: 0.839, green: 0.518, blue: 0.255, alpha: 1.000)
        let fillColor5784 = UIColor(red: 0.882, green: 0.643, blue: 0.345, alpha: 1.000)
        let fillColor5813 = UIColor(red: 0.937, green: 0.784, blue: 0.471, alpha: 1.000)
        let fillColor5814 = UIColor(red: 0.875, green: 0.561, blue: 0.298, alpha: 1.000)
        let fillColor5815 = UIColor(red: 0.871, green: 0.557, blue: 0.294, alpha: 1.000)
        let fillColor5816 = UIColor(red: 0.800, green: 0.302, blue: 0.255, alpha: 1.000)
        let fillColor5817 = UIColor(red: 0.800, green: 0.298, blue: 0.251, alpha: 1.000)
        let fillColor5818 = UIColor(red: 0.800, green: 0.302, blue: 0.251, alpha: 1.000)
        let fillColor5819 = UIColor(red: 0.922, green: 0.722, blue: 0.478, alpha: 1.000)
        let fillColor5820 = UIColor(red: 0.827, green: 0.408, blue: 0.365, alpha: 1.000)
        let fillColor5821 = UIColor(red: 0.922, green: 0.718, blue: 0.471, alpha: 1.000)
        let fillColor5822 = UIColor(red: 0.824, green: 0.408, blue: 0.357, alpha: 1.000)
        let fillColor5823 = UIColor(red: 0.973, green: 0.886, blue: 0.627, alpha: 1.000)
        let fillColor5824 = UIColor(red: 0.973, green: 0.890, blue: 0.639, alpha: 1.000)
        let fillColor5825 = UIColor(red: 0.804, green: 0.325, blue: 0.294, alpha: 1.000)
        let fillColor5826 = UIColor(red: 0.788, green: 0.255, blue: 0.243, alpha: 1.000)
        let fillColor5827 = UIColor(red: 0.702, green: 0.239, blue: 0.224, alpha: 1.000)
        let fillColor5828 = UIColor(red: 0.702, green: 0.239, blue: 0.220, alpha: 1.000)
        let fillColor5829 = UIColor(red: 0.690, green: 0.235, blue: 0.220, alpha: 1.000)
        let fillColor5830 = UIColor(red: 0.953, green: 0.835, blue: 0.522, alpha: 1.000)
        let fillColor5831 = UIColor(red: 0.941, green: 0.800, blue: 0.490, alpha: 1.000)
        let fillColor5832 = UIColor(red: 0.922, green: 0.749, blue: 0.431, alpha: 1.000)
        let fillColor5833 = UIColor(red: 0.894, green: 0.675, blue: 0.373, alpha: 1.000)
        let fillColor5834 = UIColor(red: 0.839, green: 0.510, blue: 0.251, alpha: 1.000)
        let fillColor5835 = UIColor(red: 0.871, green: 0.604, blue: 0.314, alpha: 1.000)
        let fillColor5836 = UIColor(red: 0.886, green: 0.655, blue: 0.353, alpha: 1.000)
        let fillColor5837 = UIColor(red: 0.902, green: 0.690, blue: 0.388, alpha: 1.000)
        let fillColor5838 = UIColor(red: 0.894, green: 0.678, blue: 0.373, alpha: 1.000)
        let fillColor5839 = UIColor(red: 0.937, green: 0.788, blue: 0.475, alpha: 1.000)

        //// #ffffffff


        //// #df8f4cff
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -0.39, y: 0.73))
        bezierPath.addCurve(to: CGPoint(x: 34.75, y: 0.36), controlPoint1: CGPoint(x: 11.31, y: -0.05), controlPoint2: CGPoint(x: 23.03, y: 0.51))
        bezierPath.addCurve(to: CGPoint(x: 34.84, y: 2.56), controlPoint1: CGPoint(x: 34.77, y: 0.91), controlPoint2: CGPoint(x: 34.81, y: 2.01))
        bezierPath.addCurve(to: CGPoint(x: 35.03, y: 29.41), controlPoint1: CGPoint(x: 35.07, y: 11.51), controlPoint2: CGPoint(x: 34.77, y: 20.45))
        bezierPath.addCurve(to: CGPoint(x: 31.44, y: 28.56), controlPoint1: CGPoint(x: 34.13, y: 29.2), controlPoint2: CGPoint(x: 32.33, y: 28.77))
        bezierPath.addCurve(to: CGPoint(x: 29.52, y: 19.65), controlPoint1: CGPoint(x: 30.72, y: 25.6), controlPoint2: CGPoint(x: 30.05, y: 22.64))
        bezierPath.addLine(to: CGPoint(x: 29.47, y: 18.4))
        bezierPath.addCurve(to: CGPoint(x: 29.28, y: 1.04), controlPoint1: CGPoint(x: 29.28, y: 12.61), controlPoint2: CGPoint(x: 29.29, y: 6.83))
        bezierPath.addCurve(to: CGPoint(x: -0.39, y: 0.73), controlPoint1: CGPoint(x: 19.4, y: 0.68), controlPoint2: CGPoint(x: 9.51, y: 0.87))
        bezierPath.close()
        fillColor5814.setFill()
        bezierPath.fill()




        //// #aa3331ff
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 34.75, y: 0.36))
        bezier2Path.addCurve(to: CGPoint(x: 437.44, y: 0.43), controlPoint1: CGPoint(x: 168.97, y: 0.49), controlPoint2: CGPoint(x: 303.2, y: 0.37))
        bezier2Path.addCurve(to: CGPoint(x: 437.07, y: 7.65), controlPoint1: CGPoint(x: 437.32, y: 2.83), controlPoint2: CGPoint(x: 437.19, y: 5.24))
        bezier2Path.addCurve(to: CGPoint(x: 435.8, y: 18.36), controlPoint1: CGPoint(x: 436.76, y: 11.23), controlPoint2: CGPoint(x: 436.27, y: 14.8))
        bezier2Path.addCurve(to: CGPoint(x: 36.24, y: 18.37), controlPoint1: CGPoint(x: 302.61, y: 18.47), controlPoint2: CGPoint(x: 169.43, y: 18.41))
        bezier2Path.addCurve(to: CGPoint(x: 34.84, y: 2.56), controlPoint1: CGPoint(x: 35.73, y: 13.11), controlPoint2: CGPoint(x: 35.17, y: 7.84))
        bezier2Path.addCurve(to: CGPoint(x: 34.75, y: 0.36), controlPoint1: CGPoint(x: 34.81, y: 2.01), controlPoint2: CGPoint(x: 34.77, y: 0.91))
        bezier2Path.close()
        fillColor5749.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: -0.39, y: 0.73))
        bezier3Path.addCurve(to: CGPoint(x: 29.28, y: 1.04), controlPoint1: CGPoint(x: 9.51, y: 0.87), controlPoint2: CGPoint(x: 19.4, y: 0.68))
        bezier3Path.addCurve(to: CGPoint(x: 29.47, y: 18.4), controlPoint1: CGPoint(x: 29.29, y: 6.83), controlPoint2: CGPoint(x: 29.28, y: 12.61))
        bezier3Path.addCurve(to: CGPoint(x: -0.36, y: 18.49), controlPoint1: CGPoint(x: 19.52, y: 18.39), controlPoint2: CGPoint(x: 9.59, y: 18.37))
        bezier3Path.addCurve(to: CGPoint(x: -0.39, y: 0.73), controlPoint1: CGPoint(x: -0.43, y: 12.57), controlPoint2: CGPoint(x: -0.41, y: 6.65))
        bezier3Path.close()
        fillColor5749.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 442.67, y: 1.04))
        bezier4Path.addCurve(to: CGPoint(x: 472.43, y: 0.73), controlPoint1: CGPoint(x: 452.57, y: 0.69), controlPoint2: CGPoint(x: 462.49, y: 0.87))
        bezier4Path.addCurve(to: CGPoint(x: 472.33, y: 17.61), controlPoint1: CGPoint(x: 472.45, y: 6.36), controlPoint2: CGPoint(x: 472.45, y: 11.99))
        bezier4Path.addCurve(to: CGPoint(x: 442.77, y: 18.52), controlPoint1: CGPoint(x: 462.51, y: 18.51), controlPoint2: CGPoint(x: 452.63, y: 18.41))
        bezier4Path.addCurve(to: CGPoint(x: 442.67, y: 1.04), controlPoint1: CGPoint(x: 442.76, y: 12.69), controlPoint2: CGPoint(x: 442.65, y: 6.87))
        bezier4Path.close()
        fillColor5749.setFill()
        bezier4Path.fill()




        //// #de8e4bff
        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 437.44, y: 0.43))
        bezier5Path.addCurve(to: CGPoint(x: 472.43, y: 0.73), controlPoint1: CGPoint(x: 449.09, y: 0.44), controlPoint2: CGPoint(x: 460.77, y: -0.01))
        bezier5Path.addCurve(to: CGPoint(x: 442.67, y: 1.04), controlPoint1: CGPoint(x: 462.49, y: 0.87), controlPoint2: CGPoint(x: 452.57, y: 0.69))
        bezier5Path.addCurve(to: CGPoint(x: 442.77, y: 18.52), controlPoint1: CGPoint(x: 442.65, y: 6.87), controlPoint2: CGPoint(x: 442.76, y: 12.69))
        bezier5Path.addLine(to: CGPoint(x: 442.73, y: 19.85))
        bezier5Path.addCurve(to: CGPoint(x: 437.65, y: 27.48), controlPoint1: CGPoint(x: 441.47, y: 22.67), controlPoint2: CGPoint(x: 439.79, y: 25.25))
        bezier5Path.addCurve(to: CGPoint(x: 437.07, y: 19.65), controlPoint1: CGPoint(x: 437.51, y: 24.87), controlPoint2: CGPoint(x: 437.2, y: 22.27))
        bezier5Path.addCurve(to: CGPoint(x: 437.07, y: 7.65), controlPoint1: CGPoint(x: 437.03, y: 15.65), controlPoint2: CGPoint(x: 436.95, y: 11.65))
        bezier5Path.addCurve(to: CGPoint(x: 437.44, y: 0.43), controlPoint1: CGPoint(x: 437.19, y: 5.24), controlPoint2: CGPoint(x: 437.32, y: 2.83))
        bezier5Path.close()
        fillColor5815.setFill()
        bezier5Path.fill()




        //// #cc4d41ff
        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 34.84, y: 2.56))
        bezier6Path.addCurve(to: CGPoint(x: 36.24, y: 18.37), controlPoint1: CGPoint(x: 35.17, y: 7.84), controlPoint2: CGPoint(x: 35.73, y: 13.11))
        bezier6Path.addCurve(to: CGPoint(x: 435.8, y: 18.36), controlPoint1: CGPoint(x: 169.43, y: 18.41), controlPoint2: CGPoint(x: 302.61, y: 18.47))
        bezier6Path.addCurve(to: CGPoint(x: 437.07, y: 7.65), controlPoint1: CGPoint(x: 436.27, y: 14.8), controlPoint2: CGPoint(x: 436.76, y: 11.23))
        bezier6Path.addCurve(to: CGPoint(x: 437.07, y: 19.65), controlPoint1: CGPoint(x: 436.95, y: 11.65), controlPoint2: CGPoint(x: 437.03, y: 15.65))
        bezier6Path.addCurve(to: CGPoint(x: 435.69, y: 33.15), controlPoint1: CGPoint(x: 436.77, y: 24.16), controlPoint2: CGPoint(x: 436.19, y: 28.65))
        bezier6Path.addCurve(to: CGPoint(x: 46.67, y: 33.25), controlPoint1: CGPoint(x: 306.03, y: 33.37), controlPoint2: CGPoint(x: 176.35, y: 33.16))
        bezier6Path.addCurve(to: CGPoint(x: 35.37, y: 33.52), controlPoint1: CGPoint(x: 42.91, y: 33.31), controlPoint2: CGPoint(x: 39.13, y: 33.48))
        bezier6Path.addCurve(to: CGPoint(x: 35.07, y: 30.53), controlPoint1: CGPoint(x: 35.29, y: 32.77), controlPoint2: CGPoint(x: 35.13, y: 31.28))
        bezier6Path.addLine(to: CGPoint(x: 35.03, y: 29.41))
        bezier6Path.addCurve(to: CGPoint(x: 34.84, y: 2.56), controlPoint1: CGPoint(x: 34.77, y: 20.45), controlPoint2: CGPoint(x: 35.07, y: 11.51))
        bezier6Path.close()
        fillColor5816.setFill()
        bezier6Path.fill()




        //// #cc4c40ff
        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 442.77, y: 18.52))
        bezier7Path.addCurve(to: CGPoint(x: 472.33, y: 17.61), controlPoint1: CGPoint(x: 452.63, y: 18.41), controlPoint2: CGPoint(x: 462.51, y: 18.51))
        bezier7Path.addCurve(to: CGPoint(x: 472.4, y: 32.03), controlPoint1: CGPoint(x: 472.4, y: 22.43), controlPoint2: CGPoint(x: 472.41, y: 27.23))
        bezier7Path.addCurve(to: CGPoint(x: 442.6, y: 32.04), controlPoint1: CGPoint(x: 462.47, y: 32.08), controlPoint2: CGPoint(x: 452.53, y: 32.07))
        bezier7Path.addCurve(to: CGPoint(x: 442.73, y: 19.85), controlPoint1: CGPoint(x: 442.55, y: 27.97), controlPoint2: CGPoint(x: 442.6, y: 23.92))
        bezier7Path.addLine(to: CGPoint(x: 442.77, y: 18.52))
        bezier7Path.close()
        fillColor5817.setFill()
        bezier7Path.fill()




        //// #cc4d40ff
        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: -0.36, y: 18.49))
        bezier8Path.addCurve(to: CGPoint(x: 29.47, y: 18.4), controlPoint1: CGPoint(x: 9.59, y: 18.37), controlPoint2: CGPoint(x: 19.52, y: 18.39))
        bezier8Path.addLine(to: CGPoint(x: 29.52, y: 19.65))
        bezier8Path.addCurve(to: CGPoint(x: 29.35, y: 32.04), controlPoint1: CGPoint(x: 29.57, y: 23.79), controlPoint2: CGPoint(x: 29.43, y: 27.92))
        bezier8Path.addCurve(to: CGPoint(x: -0.37, y: 32.03), controlPoint1: CGPoint(x: 19.44, y: 32.11), controlPoint2: CGPoint(x: 9.53, y: 32.11))
        bezier8Path.addCurve(to: CGPoint(x: -0.36, y: 18.49), controlPoint1: CGPoint(x: -0.36, y: 27.52), controlPoint2: CGPoint(x: -0.36, y: 23.01))
        bezier8Path.close()
        fillColor5818.setFill()
        bezier8Path.fill()




        //// #ebb87aff
        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 29.52, y: 19.65))
        bezier9Path.addCurve(to: CGPoint(x: 31.44, y: 28.56), controlPoint1: CGPoint(x: 30.05, y: 22.64), controlPoint2: CGPoint(x: 30.72, y: 25.6))
        bezier9Path.addCurve(to: CGPoint(x: 35.03, y: 29.41), controlPoint1: CGPoint(x: 32.33, y: 28.77), controlPoint2: CGPoint(x: 34.13, y: 29.2))
        bezier9Path.addLine(to: CGPoint(x: 35.07, y: 30.53))
        bezier9Path.addCurve(to: CGPoint(x: 34.63, y: 60.73), controlPoint1: CGPoint(x: 34.88, y: 40.6), controlPoint2: CGPoint(x: 35.05, y: 50.68))
        bezier9Path.addCurve(to: CGPoint(x: 29.32, y: 54.61), controlPoint1: CGPoint(x: 32.81, y: 58.73), controlPoint2: CGPoint(x: 30.88, y: 56.83))
        bezier9Path.addCurve(to: CGPoint(x: 29.17, y: 46.72), controlPoint1: CGPoint(x: 29.2, y: 51.99), controlPoint2: CGPoint(x: 29.16, y: 49.36))
        bezier9Path.addCurve(to: CGPoint(x: 29.35, y: 32.04), controlPoint1: CGPoint(x: 29.2, y: 41.83), controlPoint2: CGPoint(x: 29.23, y: 36.93))
        bezier9Path.addCurve(to: CGPoint(x: 29.52, y: 19.65), controlPoint1: CGPoint(x: 29.43, y: 27.92), controlPoint2: CGPoint(x: 29.57, y: 23.79))
        bezier9Path.close()
        fillColor5819.setFill()
        bezier9Path.fill()




        //// #d3685dff
        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 435.69, y: 33.15))
        bezier10Path.addCurve(to: CGPoint(x: 437.07, y: 19.65), controlPoint1: CGPoint(x: 436.19, y: 28.65), controlPoint2: CGPoint(x: 436.77, y: 24.16))
        bezier10Path.addCurve(to: CGPoint(x: 437.65, y: 27.48), controlPoint1: CGPoint(x: 437.2, y: 22.27), controlPoint2: CGPoint(x: 437.51, y: 24.87))
        bezier10Path.addCurve(to: CGPoint(x: 437.2, y: 35.65), controlPoint1: CGPoint(x: 437.64, y: 30.2), controlPoint2: CGPoint(x: 437.39, y: 32.93))
        bezier10Path.addCurve(to: CGPoint(x: 435.59, y: 46.56), controlPoint1: CGPoint(x: 436.76, y: 39.31), controlPoint2: CGPoint(x: 436.15, y: 42.93))
        bezier10Path.addCurve(to: CGPoint(x: 313.33, y: 46.8), controlPoint1: CGPoint(x: 394.84, y: 47.13), controlPoint2: CGPoint(x: 354.08, y: 46.64))
        bezier10Path.addCurve(to: CGPoint(x: 64, y: 46.8), controlPoint1: CGPoint(x: 230.23, y: 46.8), controlPoint2: CGPoint(x: 147.11, y: 46.81))
        bezier10Path.addCurve(to: CGPoint(x: 36.43, y: 46.59), controlPoint1: CGPoint(x: 54.8, y: 46.88), controlPoint2: CGPoint(x: 45.61, y: 46.88))
        bezier10Path.addCurve(to: CGPoint(x: 35.37, y: 33.52), controlPoint1: CGPoint(x: 35.97, y: 42.24), controlPoint2: CGPoint(x: 35.65, y: 37.88))
        bezier10Path.addCurve(to: CGPoint(x: 46.67, y: 33.25), controlPoint1: CGPoint(x: 39.13, y: 33.48), controlPoint2: CGPoint(x: 42.91, y: 33.31))
        bezier10Path.addCurve(to: CGPoint(x: 435.69, y: 33.15), controlPoint1: CGPoint(x: 176.35, y: 33.16), controlPoint2: CGPoint(x: 306.03, y: 33.37))
        bezier10Path.close()
        fillColor5820.setFill()
        bezier10Path.fill()




        //// #ebb778ff
        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 437.65, y: 27.48))
        bezier11Path.addCurve(to: CGPoint(x: 442.73, y: 19.85), controlPoint1: CGPoint(x: 439.79, y: 25.25), controlPoint2: CGPoint(x: 441.47, y: 22.67))
        bezier11Path.addCurve(to: CGPoint(x: 442.6, y: 32.04), controlPoint1: CGPoint(x: 442.6, y: 23.92), controlPoint2: CGPoint(x: 442.55, y: 27.97))
        bezier11Path.addCurve(to: CGPoint(x: 442.81, y: 46.72), controlPoint1: CGPoint(x: 442.67, y: 36.93), controlPoint2: CGPoint(x: 442.81, y: 41.83))
        bezier11Path.addCurve(to: CGPoint(x: 442.69, y: 56.09), controlPoint1: CGPoint(x: 442.8, y: 49.84), controlPoint2: CGPoint(x: 442.73, y: 52.97))
        bezier11Path.addCurve(to: CGPoint(x: 437.36, y: 60.41), controlPoint1: CGPoint(x: 440.92, y: 57.56), controlPoint2: CGPoint(x: 439.15, y: 59))
        bezier11Path.addCurve(to: CGPoint(x: 437.2, y: 35.65), controlPoint1: CGPoint(x: 437.2, y: 52.16), controlPoint2: CGPoint(x: 436.63, y: 43.91))
        bezier11Path.addCurve(to: CGPoint(x: 437.65, y: 27.48), controlPoint1: CGPoint(x: 437.39, y: 32.93), controlPoint2: CGPoint(x: 437.64, y: 30.2))
        bezier11Path.close()
        fillColor5821.setFill()
        bezier11Path.fill()




        //// #d67573ff
        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 35.07, y: 30.53))
        bezier12Path.addCurve(to: CGPoint(x: 35.37, y: 33.52), controlPoint1: CGPoint(x: 35.13, y: 31.28), controlPoint2: CGPoint(x: 35.29, y: 32.77))
        bezier12Path.addCurve(to: CGPoint(x: 36.43, y: 46.59), controlPoint1: CGPoint(x: 35.65, y: 37.88), controlPoint2: CGPoint(x: 35.97, y: 42.24))
        bezier12Path.addCurve(to: CGPoint(x: 64, y: 46.8), controlPoint1: CGPoint(x: 45.61, y: 46.88), controlPoint2: CGPoint(x: 54.8, y: 46.88))
        bezier12Path.addCurve(to: CGPoint(x: 313.33, y: 46.8), controlPoint1: CGPoint(x: 147.11, y: 46.81), controlPoint2: CGPoint(x: 230.23, y: 46.8))
        bezier12Path.addCurve(to: CGPoint(x: 435.59, y: 46.56), controlPoint1: CGPoint(x: 354.08, y: 46.64), controlPoint2: CGPoint(x: 394.84, y: 47.13))
        bezier12Path.addCurve(to: CGPoint(x: 437.2, y: 35.65), controlPoint1: CGPoint(x: 436.15, y: 42.93), controlPoint2: CGPoint(x: 436.76, y: 39.31))
        bezier12Path.addCurve(to: CGPoint(x: 437.36, y: 60.41), controlPoint1: CGPoint(x: 436.63, y: 43.91), controlPoint2: CGPoint(x: 437.2, y: 52.16))
        bezier12Path.addCurve(to: CGPoint(x: 437.28, y: 168), controlPoint1: CGPoint(x: 436.85, y: 96.27), controlPoint2: CGPoint(x: 436.87, y: 132.13))
        bezier12Path.addCurve(to: CGPoint(x: 436.96, y: 185.67), controlPoint1: CGPoint(x: 437.32, y: 173.88), controlPoint2: CGPoint(x: 437, y: 179.77))
        bezier12Path.addCurve(to: CGPoint(x: 436.55, y: 178.69), controlPoint1: CGPoint(x: 436.84, y: 183.33), controlPoint2: CGPoint(x: 436.67, y: 181.01))
        bezier12Path.addCurve(to: CGPoint(x: 436.13, y: 156.92), controlPoint1: CGPoint(x: 436.17, y: 171.44), controlPoint2: CGPoint(x: 436.37, y: 164.17))
        bezier12Path.addCurve(to: CGPoint(x: 435.75, y: 146.81), controlPoint1: CGPoint(x: 436.03, y: 153.55), controlPoint2: CGPoint(x: 435.88, y: 150.19))
        bezier12Path.addCurve(to: CGPoint(x: 264, y: 146.67), controlPoint1: CGPoint(x: 378.49, y: 146.45), controlPoint2: CGPoint(x: 321.24, y: 146.79))
        bezier12Path.addCurve(to: CGPoint(x: 36.28, y: 146.8), controlPoint1: CGPoint(x: 188.09, y: 146.77), controlPoint2: CGPoint(x: 112.19, y: 146.48))
        bezier12Path.addCurve(to: CGPoint(x: 35.91, y: 156.39), controlPoint1: CGPoint(x: 36.15, y: 150), controlPoint2: CGPoint(x: 36.01, y: 153.19))
        bezier12Path.addCurve(to: CGPoint(x: 35.67, y: 178.67), controlPoint1: CGPoint(x: 35.68, y: 163.81), controlPoint2: CGPoint(x: 35.67, y: 171.24))
        bezier12Path.addCurve(to: CGPoint(x: 35.41, y: 197.12), controlPoint1: CGPoint(x: 35.69, y: 184.81), controlPoint2: CGPoint(x: 35.69, y: 190.97))
        bezier12Path.addCurve(to: CGPoint(x: 35.15, y: 204.35), controlPoint1: CGPoint(x: 35.31, y: 199.52), controlPoint2: CGPoint(x: 35.19, y: 201.93))
        bezier12Path.addCurve(to: CGPoint(x: 35.01, y: 150.67), controlPoint1: CGPoint(x: 34.31, y: 186.47), controlPoint2: CGPoint(x: 35.04, y: 168.56))
        bezier12Path.addCurve(to: CGPoint(x: 34.63, y: 60.73), controlPoint1: CGPoint(x: 35.07, y: 120.69), controlPoint2: CGPoint(x: 35.36, y: 90.71))
        bezier12Path.addCurve(to: CGPoint(x: 35.07, y: 30.53), controlPoint1: CGPoint(x: 35.05, y: 50.68), controlPoint2: CGPoint(x: 34.88, y: 40.6))
        bezier12Path.close()
        fillColor5756.setFill()
        bezier12Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: -0.32, y: 46.71))
        bezier13Path.addCurve(to: CGPoint(x: 29.17, y: 46.72), controlPoint1: CGPoint(x: 9.51, y: 46.77), controlPoint2: CGPoint(x: 19.33, y: 46.81))
        bezier13Path.addCurve(to: CGPoint(x: 29.32, y: 54.61), controlPoint1: CGPoint(x: 29.16, y: 49.36), controlPoint2: CGPoint(x: 29.2, y: 51.99))
        bezier13Path.addCurve(to: CGPoint(x: 29.25, y: 155.97), controlPoint1: CGPoint(x: 29.4, y: 88.4), controlPoint2: CGPoint(x: 29.2, y: 122.19))
        bezier13Path.addCurve(to: CGPoint(x: -0.28, y: 155.96), controlPoint1: CGPoint(x: 19.41, y: 155.91), controlPoint2: CGPoint(x: 9.57, y: 155.91))
        bezier13Path.addCurve(to: CGPoint(x: -0.32, y: 46.71), controlPoint1: CGPoint(x: -0.56, y: 119.55), controlPoint2: CGPoint(x: -0.47, y: 83.12))
        bezier13Path.close()
        fillColor5756.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 442.81, y: 46.72))
        bezier14Path.addCurve(to: CGPoint(x: 472.35, y: 46.71), controlPoint1: CGPoint(x: 452.65, y: 46.81), controlPoint2: CGPoint(x: 462.49, y: 46.77))
        bezier14Path.addCurve(to: CGPoint(x: 472.31, y: 155.97), controlPoint1: CGPoint(x: 472.48, y: 83.12), controlPoint2: CGPoint(x: 472.57, y: 119.55))
        bezier14Path.addCurve(to: CGPoint(x: 442.73, y: 155.96), controlPoint1: CGPoint(x: 462.44, y: 155.92), controlPoint2: CGPoint(x: 452.59, y: 155.89))
        bezier14Path.addCurve(to: CGPoint(x: 442.69, y: 56.09), controlPoint1: CGPoint(x: 442.81, y: 122.68), controlPoint2: CGPoint(x: 442.56, y: 89.39))
        bezier14Path.addCurve(to: CGPoint(x: 442.81, y: 46.72), controlPoint1: CGPoint(x: 442.73, y: 52.97), controlPoint2: CGPoint(x: 442.8, y: 49.84))
        bezier14Path.close()
        fillColor5756.setFill()
        bezier14Path.fill()




        //// #d2685bff
        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: -0.37, y: 32.03))
        bezier15Path.addCurve(to: CGPoint(x: 29.35, y: 32.04), controlPoint1: CGPoint(x: 9.53, y: 32.11), controlPoint2: CGPoint(x: 19.44, y: 32.11))
        bezier15Path.addCurve(to: CGPoint(x: 29.17, y: 46.72), controlPoint1: CGPoint(x: 29.23, y: 36.93), controlPoint2: CGPoint(x: 29.2, y: 41.83))
        bezier15Path.addCurve(to: CGPoint(x: -0.32, y: 46.71), controlPoint1: CGPoint(x: 19.33, y: 46.81), controlPoint2: CGPoint(x: 9.51, y: 46.77))
        bezier15Path.addCurve(to: CGPoint(x: -0.37, y: 32.03), controlPoint1: CGPoint(x: -0.37, y: 41.81), controlPoint2: CGPoint(x: -0.41, y: 36.92))
        bezier15Path.close()
        fillColor5822.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 442.6, y: 32.04))
        bezier16Path.addCurve(to: CGPoint(x: 472.4, y: 32.03), controlPoint1: CGPoint(x: 452.53, y: 32.07), controlPoint2: CGPoint(x: 462.47, y: 32.08))
        bezier16Path.addCurve(to: CGPoint(x: 472.35, y: 46.71), controlPoint1: CGPoint(x: 472.43, y: 36.92), controlPoint2: CGPoint(x: 472.4, y: 41.81))
        bezier16Path.addCurve(to: CGPoint(x: 442.81, y: 46.72), controlPoint1: CGPoint(x: 462.49, y: 46.77), controlPoint2: CGPoint(x: 452.65, y: 46.81))
        bezier16Path.addCurve(to: CGPoint(x: 442.6, y: 32.04), controlPoint1: CGPoint(x: 442.81, y: 41.83), controlPoint2: CGPoint(x: 442.67, y: 36.93))
        bezier16Path.close()
        fillColor5822.setFill()
        bezier16Path.fill()




        //// #f8e2a0ff
        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 29.32, y: 54.61))
        bezier17Path.addCurve(to: CGPoint(x: 34.63, y: 60.73), controlPoint1: CGPoint(x: 30.88, y: 56.83), controlPoint2: CGPoint(x: 32.81, y: 58.73))
        bezier17Path.addCurve(to: CGPoint(x: 35.01, y: 150.67), controlPoint1: CGPoint(x: 35.36, y: 90.71), controlPoint2: CGPoint(x: 35.07, y: 120.69))
        bezier17Path.addCurve(to: CGPoint(x: 35.15, y: 204.35), controlPoint1: CGPoint(x: 35.04, y: 168.56), controlPoint2: CGPoint(x: 34.31, y: 186.47))
        bezier17Path.addCurve(to: CGPoint(x: 35.25, y: 209.01), controlPoint1: CGPoint(x: 35.16, y: 205.89), controlPoint2: CGPoint(x: 35.2, y: 207.45))
        bezier17Path.addCurve(to: CGPoint(x: 34.92, y: 259.81), controlPoint1: CGPoint(x: 34.84, y: 225.95), controlPoint2: CGPoint(x: 34.88, y: 242.88))
        bezier17Path.addCurve(to: CGPoint(x: 30.97, y: 260.57), controlPoint1: CGPoint(x: 33.93, y: 260), controlPoint2: CGPoint(x: 31.96, y: 260.39))
        bezier17Path.addCurve(to: CGPoint(x: 29.63, y: 292.36), controlPoint1: CGPoint(x: 30.85, y: 271.19), controlPoint2: CGPoint(x: 30.96, y: 281.81))
        bezier17Path.addCurve(to: CGPoint(x: 29.32, y: 224.12), controlPoint1: CGPoint(x: 28.97, y: 269.61), controlPoint2: CGPoint(x: 29.6, y: 246.87))
        bezier17Path.addCurve(to: CGPoint(x: 29.33, y: 209.33), controlPoint1: CGPoint(x: 29.31, y: 219.19), controlPoint2: CGPoint(x: 29.32, y: 214.27))
        bezier17Path.addCurve(to: CGPoint(x: 29.28, y: 185.31), controlPoint1: CGPoint(x: 29.35, y: 201.32), controlPoint2: CGPoint(x: 29.24, y: 193.32))
        bezier17Path.addCurve(to: CGPoint(x: 29.25, y: 155.97), controlPoint1: CGPoint(x: 29.35, y: 175.52), controlPoint2: CGPoint(x: 29.24, y: 165.75))
        bezier17Path.addCurve(to: CGPoint(x: 29.32, y: 54.61), controlPoint1: CGPoint(x: 29.2, y: 122.19), controlPoint2: CGPoint(x: 29.4, y: 88.4))
        bezier17Path.close()
        fillColor5823.setFill()
        bezier17Path.fill()




        //// #f8e3a3ff
        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: 437.36, y: 60.41))
        bezier18Path.addCurve(to: CGPoint(x: 442.69, y: 56.09), controlPoint1: CGPoint(x: 439.15, y: 59), controlPoint2: CGPoint(x: 440.92, y: 57.56))
        bezier18Path.addCurve(to: CGPoint(x: 442.73, y: 155.96), controlPoint1: CGPoint(x: 442.56, y: 89.39), controlPoint2: CGPoint(x: 442.81, y: 122.68))
        bezier18Path.addCurve(to: CGPoint(x: 442.69, y: 185.31), controlPoint1: CGPoint(x: 442.75, y: 165.75), controlPoint2: CGPoint(x: 442.64, y: 175.52))
        bezier18Path.addCurve(to: CGPoint(x: 442.65, y: 209.33), controlPoint1: CGPoint(x: 442.72, y: 193.32), controlPoint2: CGPoint(x: 442.64, y: 201.32))
        bezier18Path.addCurve(to: CGPoint(x: 442.68, y: 224.01), controlPoint1: CGPoint(x: 442.65, y: 214.23), controlPoint2: CGPoint(x: 442.67, y: 219.12))
        bezier18Path.addCurve(to: CGPoint(x: 442.36, y: 260.35), controlPoint1: CGPoint(x: 442.76, y: 236.12), controlPoint2: CGPoint(x: 442.71, y: 248.24))
        bezier18Path.addCurve(to: CGPoint(x: 441.09, y: 229.91), controlPoint1: CGPoint(x: 441.2, y: 250.24), controlPoint2: CGPoint(x: 441.2, y: 240.07))
        bezier18Path.addCurve(to: CGPoint(x: 437.15, y: 229.13), controlPoint1: CGPoint(x: 440.11, y: 229.72), controlPoint2: CGPoint(x: 438.13, y: 229.33))
        bezier18Path.addCurve(to: CGPoint(x: 437.24, y: 216.03), controlPoint1: CGPoint(x: 437.17, y: 224.76), controlPoint2: CGPoint(x: 437.2, y: 220.4))
        bezier18Path.addCurve(to: CGPoint(x: 436.96, y: 185.67), controlPoint1: CGPoint(x: 437.33, y: 205.91), controlPoint2: CGPoint(x: 437.24, y: 195.77))
        bezier18Path.addCurve(to: CGPoint(x: 437.28, y: 168), controlPoint1: CGPoint(x: 437, y: 179.77), controlPoint2: CGPoint(x: 437.32, y: 173.88))
        bezier18Path.addCurve(to: CGPoint(x: 437.36, y: 60.41), controlPoint1: CGPoint(x: 436.87, y: 132.13), controlPoint2: CGPoint(x: 436.85, y: 96.27))
        bezier18Path.close()
        fillColor5824.setFill()
        bezier18Path.fill()




        //// #d46f69ff
        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: 36.28, y: 146.8))
        bezier19Path.addCurve(to: CGPoint(x: 264, y: 146.67), controlPoint1: CGPoint(x: 112.19, y: 146.48), controlPoint2: CGPoint(x: 188.09, y: 146.77))
        bezier19Path.addCurve(to: CGPoint(x: 435.75, y: 146.81), controlPoint1: CGPoint(x: 321.24, y: 146.79), controlPoint2: CGPoint(x: 378.49, y: 146.45))
        bezier19Path.addCurve(to: CGPoint(x: 436.13, y: 156.92), controlPoint1: CGPoint(x: 435.88, y: 150.19), controlPoint2: CGPoint(x: 436.03, y: 153.55))
        bezier19Path.addCurve(to: CGPoint(x: 401.91, y: 156.8), controlPoint1: CGPoint(x: 424.73, y: 157.35), controlPoint2: CGPoint(x: 413.32, y: 157.15))
        bezier19Path.addCurve(to: CGPoint(x: 360.19, y: 156.8), controlPoint1: CGPoint(x: 388, y: 157.08), controlPoint2: CGPoint(x: 374.09, y: 156.57))
        bezier19Path.addCurve(to: CGPoint(x: 319.93, y: 156.84), controlPoint1: CGPoint(x: 346.76, y: 156.72), controlPoint2: CGPoint(x: 333.35, y: 157.65))
        bezier19Path.addCurve(to: CGPoint(x: 270.67, y: 156.83), controlPoint1: CGPoint(x: 303.51, y: 156.97), controlPoint2: CGPoint(x: 287.09, y: 156.61))
        bezier19Path.addCurve(to: CGPoint(x: 166.75, y: 157.2), controlPoint1: CGPoint(x: 236.04, y: 157.56), controlPoint2: CGPoint(x: 201.39, y: 156.03))
        bezier19Path.addCurve(to: CGPoint(x: 92.68, y: 156.88), controlPoint1: CGPoint(x: 142.07, y: 156.75), controlPoint2: CGPoint(x: 117.37, y: 156.68))
        bezier19Path.addCurve(to: CGPoint(x: 63.92, y: 156.83), controlPoint1: CGPoint(x: 83.11, y: 157.28), controlPoint2: CGPoint(x: 73.51, y: 157.31))
        bezier19Path.addCurve(to: CGPoint(x: 35.91, y: 156.39), controlPoint1: CGPoint(x: 54.59, y: 156.69), controlPoint2: CGPoint(x: 45.23, y: 157.32))
        bezier19Path.addCurve(to: CGPoint(x: 36.28, y: 146.8), controlPoint1: CGPoint(x: 36.01, y: 153.19), controlPoint2: CGPoint(x: 36.15, y: 150))
        bezier19Path.close()
        fillColor5761.setFill()
        bezier19Path.fill()




        //// #d16258ff
        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: -0.28, y: 155.96))
        bezier20Path.addCurve(to: CGPoint(x: 29.25, y: 155.97), controlPoint1: CGPoint(x: 9.57, y: 155.91), controlPoint2: CGPoint(x: 19.41, y: 155.91))
        bezier20Path.addCurve(to: CGPoint(x: 29.28, y: 185.31), controlPoint1: CGPoint(x: 29.24, y: 165.75), controlPoint2: CGPoint(x: 29.35, y: 175.52))
        bezier20Path.addCurve(to: CGPoint(x: -0.28, y: 185.32), controlPoint1: CGPoint(x: 19.43, y: 185.25), controlPoint2: CGPoint(x: 9.57, y: 185.28))
        bezier20Path.addCurve(to: CGPoint(x: -0.28, y: 155.96), controlPoint1: CGPoint(x: -0.55, y: 175.53), controlPoint2: CGPoint(x: -0.51, y: 165.75))
        bezier20Path.close()
        fillColor5763.setFill()
        bezier20Path.fill()


        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 442.73, y: 155.96))
        bezier21Path.addCurve(to: CGPoint(x: 472.31, y: 155.97), controlPoint1: CGPoint(x: 452.59, y: 155.89), controlPoint2: CGPoint(x: 462.44, y: 155.92))
        bezier21Path.addCurve(to: CGPoint(x: 472.31, y: 185.32), controlPoint1: CGPoint(x: 472.52, y: 165.75), controlPoint2: CGPoint(x: 472.56, y: 175.53))
        bezier21Path.addCurve(to: CGPoint(x: 442.69, y: 185.31), controlPoint1: CGPoint(x: 462.44, y: 185.27), controlPoint2: CGPoint(x: 452.56, y: 185.25))
        bezier21Path.addCurve(to: CGPoint(x: 442.73, y: 155.96), controlPoint1: CGPoint(x: 442.64, y: 175.52), controlPoint2: CGPoint(x: 442.75, y: 165.75))
        bezier21Path.close()
        fillColor5763.setFill()
        bezier21Path.fill()




        //// #d16359ff
        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        bezier22Path.move(to: CGPoint(x: 35.91, y: 156.39))
        bezier22Path.addCurve(to: CGPoint(x: 63.92, y: 156.83), controlPoint1: CGPoint(x: 45.23, y: 157.32), controlPoint2: CGPoint(x: 54.59, y: 156.69))
        bezier22Path.addCurve(to: CGPoint(x: 92.68, y: 156.88), controlPoint1: CGPoint(x: 73.51, y: 157.31), controlPoint2: CGPoint(x: 83.11, y: 157.28))
        bezier22Path.addCurve(to: CGPoint(x: 166.75, y: 157.2), controlPoint1: CGPoint(x: 117.37, y: 156.68), controlPoint2: CGPoint(x: 142.07, y: 156.75))
        bezier22Path.addCurve(to: CGPoint(x: 270.67, y: 156.83), controlPoint1: CGPoint(x: 201.39, y: 156.03), controlPoint2: CGPoint(x: 236.04, y: 157.56))
        bezier22Path.addCurve(to: CGPoint(x: 319.93, y: 156.84), controlPoint1: CGPoint(x: 287.09, y: 156.61), controlPoint2: CGPoint(x: 303.51, y: 156.97))
        bezier22Path.addCurve(to: CGPoint(x: 360.19, y: 156.8), controlPoint1: CGPoint(x: 333.35, y: 157.65), controlPoint2: CGPoint(x: 346.76, y: 156.72))
        bezier22Path.addCurve(to: CGPoint(x: 401.91, y: 156.8), controlPoint1: CGPoint(x: 374.09, y: 156.57), controlPoint2: CGPoint(x: 388, y: 157.08))
        bezier22Path.addCurve(to: CGPoint(x: 436.13, y: 156.92), controlPoint1: CGPoint(x: 413.32, y: 157.15), controlPoint2: CGPoint(x: 424.73, y: 157.35))
        bezier22Path.addCurve(to: CGPoint(x: 436.55, y: 178.69), controlPoint1: CGPoint(x: 436.37, y: 164.17), controlPoint2: CGPoint(x: 436.17, y: 171.44))
        bezier22Path.addCurve(to: CGPoint(x: 35.67, y: 178.67), controlPoint1: CGPoint(x: 302.92, y: 178.72), controlPoint2: CGPoint(x: 169.29, y: 178.79))
        bezier22Path.addCurve(to: CGPoint(x: 35.91, y: 156.39), controlPoint1: CGPoint(x: 35.67, y: 171.24), controlPoint2: CGPoint(x: 35.68, y: 163.81))
        bezier22Path.close()
        fillColor5746.setFill()
        bezier22Path.fill()




        //// #cd534bff
        //// Bezier 23 Drawing
        let bezier23Path = UIBezierPath()
        bezier23Path.move(to: CGPoint(x: 35.67, y: 178.67))
        bezier23Path.addCurve(to: CGPoint(x: 436.55, y: 178.69), controlPoint1: CGPoint(x: 169.29, y: 178.79), controlPoint2: CGPoint(x: 302.92, y: 178.72))
        bezier23Path.addCurve(to: CGPoint(x: 436.96, y: 185.67), controlPoint1: CGPoint(x: 436.67, y: 181.01), controlPoint2: CGPoint(x: 436.84, y: 183.33))
        bezier23Path.addCurve(to: CGPoint(x: 437.24, y: 216.03), controlPoint1: CGPoint(x: 437.24, y: 195.77), controlPoint2: CGPoint(x: 437.33, y: 205.91))
        bezier23Path.addLine(to: CGPoint(x: 436.05, y: 215.93))
        bezier23Path.addCurve(to: CGPoint(x: 436.12, y: 213.2), controlPoint1: CGPoint(x: 436.07, y: 215.25), controlPoint2: CGPoint(x: 436.11, y: 213.89))
        bezier23Path.addCurve(to: CGPoint(x: 436.04, y: 196.81), controlPoint1: CGPoint(x: 436.23, y: 207.73), controlPoint2: CGPoint(x: 436.12, y: 202.28))
        bezier23Path.addCurve(to: CGPoint(x: 379.24, y: 196.65), controlPoint1: CGPoint(x: 417.09, y: 197.04), controlPoint2: CGPoint(x: 398.17, y: 196.28))
        bezier23Path.addCurve(to: CGPoint(x: 316.76, y: 196.6), controlPoint1: CGPoint(x: 358.41, y: 196.21), controlPoint2: CGPoint(x: 337.59, y: 197.33))
        bezier23Path.addCurve(to: CGPoint(x: 223.79, y: 196.48), controlPoint1: CGPoint(x: 285.77, y: 196.23), controlPoint2: CGPoint(x: 254.79, y: 197.31))
        bezier23Path.addCurve(to: CGPoint(x: 191.81, y: 196.51), controlPoint1: CGPoint(x: 213.13, y: 196.75), controlPoint2: CGPoint(x: 202.47, y: 196.56))
        bezier23Path.addCurve(to: CGPoint(x: 137.32, y: 196.48), controlPoint1: CGPoint(x: 173.65, y: 197.07), controlPoint2: CGPoint(x: 155.48, y: 196.83))
        bezier23Path.addCurve(to: CGPoint(x: 98.09, y: 196.72), controlPoint1: CGPoint(x: 124.25, y: 196.93), controlPoint2: CGPoint(x: 111.17, y: 196.17))
        bezier23Path.addCurve(to: CGPoint(x: 77.52, y: 196.81), controlPoint1: CGPoint(x: 91.24, y: 196.91), controlPoint2: CGPoint(x: 84.37, y: 196.77))
        bezier23Path.addCurve(to: CGPoint(x: 35.41, y: 197.12), controlPoint1: CGPoint(x: 63.48, y: 197), controlPoint2: CGPoint(x: 49.41, y: 195.75))
        bezier23Path.addCurve(to: CGPoint(x: 35.67, y: 178.67), controlPoint1: CGPoint(x: 35.69, y: 190.97), controlPoint2: CGPoint(x: 35.69, y: 184.81))
        bezier23Path.close()
        fillColor5825.setFill()
        bezier23Path.fill()




        //// #cb4944ff
        //// Bezier 24 Drawing
        let bezier24Path = UIBezierPath()
        bezier24Path.move(to: CGPoint(x: -0.28, y: 185.32))
        bezier24Path.addCurve(to: CGPoint(x: 29.28, y: 185.31), controlPoint1: CGPoint(x: 9.57, y: 185.28), controlPoint2: CGPoint(x: 19.43, y: 185.25))
        bezier24Path.addCurve(to: CGPoint(x: 29.33, y: 209.33), controlPoint1: CGPoint(x: 29.24, y: 193.32), controlPoint2: CGPoint(x: 29.35, y: 201.32))
        bezier24Path.addCurve(to: CGPoint(x: -0.33, y: 209.36), controlPoint1: CGPoint(x: 19.44, y: 209.31), controlPoint2: CGPoint(x: 9.55, y: 209.35))
        bezier24Path.addCurve(to: CGPoint(x: -0.28, y: 185.32), controlPoint1: CGPoint(x: -0.48, y: 201.35), controlPoint2: CGPoint(x: -0.51, y: 193.33))
        bezier24Path.close()
        fillColor5769.setFill()
        bezier24Path.fill()


        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 442.69, y: 185.31))
        bezier25Path.addCurve(to: CGPoint(x: 472.31, y: 185.32), controlPoint1: CGPoint(x: 452.56, y: 185.25), controlPoint2: CGPoint(x: 462.44, y: 185.27))
        bezier25Path.addCurve(to: CGPoint(x: 472.36, y: 209.35), controlPoint1: CGPoint(x: 472.53, y: 193.32), controlPoint2: CGPoint(x: 472.51, y: 201.33))
        bezier25Path.addCurve(to: CGPoint(x: 442.65, y: 209.33), controlPoint1: CGPoint(x: 462.45, y: 209.35), controlPoint2: CGPoint(x: 452.55, y: 209.33))
        bezier25Path.addCurve(to: CGPoint(x: 442.69, y: 185.31), controlPoint1: CGPoint(x: 442.64, y: 201.32), controlPoint2: CGPoint(x: 442.72, y: 193.32))
        bezier25Path.close()
        fillColor5769.setFill()
        bezier25Path.fill()




        //// #c9413eff
        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        bezier26Path.move(to: CGPoint(x: 35.41, y: 197.12))
        bezier26Path.addCurve(to: CGPoint(x: 77.52, y: 196.81), controlPoint1: CGPoint(x: 49.41, y: 195.75), controlPoint2: CGPoint(x: 63.48, y: 197))
        bezier26Path.addCurve(to: CGPoint(x: 98.09, y: 196.72), controlPoint1: CGPoint(x: 84.37, y: 196.77), controlPoint2: CGPoint(x: 91.24, y: 196.91))
        bezier26Path.addCurve(to: CGPoint(x: 137.32, y: 196.48), controlPoint1: CGPoint(x: 111.17, y: 196.17), controlPoint2: CGPoint(x: 124.25, y: 196.93))
        bezier26Path.addCurve(to: CGPoint(x: 191.81, y: 196.51), controlPoint1: CGPoint(x: 155.48, y: 196.83), controlPoint2: CGPoint(x: 173.65, y: 197.07))
        bezier26Path.addCurve(to: CGPoint(x: 223.79, y: 196.48), controlPoint1: CGPoint(x: 202.47, y: 196.56), controlPoint2: CGPoint(x: 213.13, y: 196.75))
        bezier26Path.addCurve(to: CGPoint(x: 316.76, y: 196.6), controlPoint1: CGPoint(x: 254.79, y: 197.31), controlPoint2: CGPoint(x: 285.77, y: 196.23))
        bezier26Path.addCurve(to: CGPoint(x: 379.24, y: 196.65), controlPoint1: CGPoint(x: 337.59, y: 197.33), controlPoint2: CGPoint(x: 358.41, y: 196.21))
        bezier26Path.addCurve(to: CGPoint(x: 436.04, y: 196.81), controlPoint1: CGPoint(x: 398.17, y: 196.28), controlPoint2: CGPoint(x: 417.09, y: 197.04))
        bezier26Path.addCurve(to: CGPoint(x: 436.12, y: 213.2), controlPoint1: CGPoint(x: 436.12, y: 202.28), controlPoint2: CGPoint(x: 436.23, y: 207.73))
        bezier26Path.addCurve(to: CGPoint(x: 53.33, y: 213.05), controlPoint1: CGPoint(x: 308.53, y: 212.89), controlPoint2: CGPoint(x: 180.93, y: 213.19))
        bezier26Path.addCurve(to: CGPoint(x: 35.61, y: 213.37), controlPoint1: CGPoint(x: 47.43, y: 213.04), controlPoint2: CGPoint(x: 41.52, y: 213.15))
        bezier26Path.addCurve(to: CGPoint(x: 35.25, y: 209.01), controlPoint1: CGPoint(x: 35.48, y: 211.92), controlPoint2: CGPoint(x: 35.36, y: 210.47))
        bezier26Path.addCurve(to: CGPoint(x: 35.15, y: 204.35), controlPoint1: CGPoint(x: 35.2, y: 207.45), controlPoint2: CGPoint(x: 35.16, y: 205.89))
        bezier26Path.addCurve(to: CGPoint(x: 35.41, y: 197.12), controlPoint1: CGPoint(x: 35.19, y: 201.93), controlPoint2: CGPoint(x: 35.31, y: 199.52))
        bezier26Path.close()
        fillColor5826.setFill()
        bezier26Path.fill()




        //// #b33d39ff
        //// Bezier 27 Drawing
        let bezier27Path = UIBezierPath()
        bezier27Path.move(to: CGPoint(x: -0.33, y: 209.36))
        bezier27Path.addCurve(to: CGPoint(x: 29.33, y: 209.33), controlPoint1: CGPoint(x: 9.55, y: 209.35), controlPoint2: CGPoint(x: 19.44, y: 209.31))
        bezier27Path.addCurve(to: CGPoint(x: 29.32, y: 224.12), controlPoint1: CGPoint(x: 29.32, y: 214.27), controlPoint2: CGPoint(x: 29.31, y: 219.19))
        bezier27Path.addCurve(to: CGPoint(x: -0.32, y: 224.03), controlPoint1: CGPoint(x: 19.45, y: 223.6), controlPoint2: CGPoint(x: 9.55, y: 223.05))
        bezier27Path.addCurve(to: CGPoint(x: -0.33, y: 209.36), controlPoint1: CGPoint(x: -0.4, y: 219.13), controlPoint2: CGPoint(x: -0.39, y: 214.24))
        bezier27Path.close()
        fillColor5827.setFill()
        bezier27Path.fill()




        //// #a73331ff
        //// Bezier 28 Drawing
        let bezier28Path = UIBezierPath()
        bezier28Path.move(to: CGPoint(x: 35.25, y: 209.01))
        bezier28Path.addCurve(to: CGPoint(x: 35.61, y: 213.37), controlPoint1: CGPoint(x: 35.36, y: 210.47), controlPoint2: CGPoint(x: 35.48, y: 211.92))
        bezier28Path.addCurve(to: CGPoint(x: 36.44, y: 225.19), controlPoint1: CGPoint(x: 35.95, y: 217.31), controlPoint2: CGPoint(x: 36.16, y: 221.25))
        bezier28Path.addCurve(to: CGPoint(x: 104.23, y: 225.8), controlPoint1: CGPoint(x: 59.03, y: 225.8), controlPoint2: CGPoint(x: 81.65, y: 224.73))
        bezier28Path.addCurve(to: CGPoint(x: 133.33, y: 225.29), controlPoint1: CGPoint(x: 113.93, y: 226.05), controlPoint2: CGPoint(x: 123.63, y: 225.07))
        bezier28Path.addCurve(to: CGPoint(x: 188.65, y: 225.77), controlPoint1: CGPoint(x: 151.77, y: 225.6), controlPoint2: CGPoint(x: 170.23, y: 224.87))
        bezier28Path.addCurve(to: CGPoint(x: 216, y: 225.29), controlPoint1: CGPoint(x: 197.77, y: 226.13), controlPoint2: CGPoint(x: 206.88, y: 225.16))
        bezier28Path.addCurve(to: CGPoint(x: 278.67, y: 225.85), controlPoint1: CGPoint(x: 236.89, y: 225.52), controlPoint2: CGPoint(x: 257.79, y: 224.96))
        bezier28Path.addCurve(to: CGPoint(x: 340, y: 225.29), controlPoint1: CGPoint(x: 299.09, y: 224.96), controlPoint2: CGPoint(x: 319.55, y: 225.52))
        bezier28Path.addCurve(to: CGPoint(x: 371.99, y: 225.64), controlPoint1: CGPoint(x: 350.67, y: 225.13), controlPoint2: CGPoint(x: 361.32, y: 226.31))
        bezier28Path.addCurve(to: CGPoint(x: 435.69, y: 225.21), controlPoint1: CGPoint(x: 393.21, y: 224.83), controlPoint2: CGPoint(x: 414.47, y: 225.76))
        bezier28Path.addCurve(to: CGPoint(x: 436.05, y: 215.93), controlPoint1: CGPoint(x: 435.81, y: 222.12), controlPoint2: CGPoint(x: 435.96, y: 219.03))
        bezier28Path.addLine(to: CGPoint(x: 437.24, y: 216.03))
        bezier28Path.addCurve(to: CGPoint(x: 437.15, y: 229.13), controlPoint1: CGPoint(x: 437.2, y: 220.4), controlPoint2: CGPoint(x: 437.17, y: 224.76))
        bezier28Path.addCurve(to: CGPoint(x: 437.16, y: 353.12), controlPoint1: CGPoint(x: 436.91, y: 270.47), controlPoint2: CGPoint(x: 437.17, y: 311.8))
        bezier28Path.addCurve(to: CGPoint(x: 437.13, y: 443.81), controlPoint1: CGPoint(x: 436.76, y: 383.35), controlPoint2: CGPoint(x: 437.24, y: 413.59))
        bezier28Path.addCurve(to: CGPoint(x: 437.12, y: 517.16), controlPoint1: CGPoint(x: 436.64, y: 468.25), controlPoint2: CGPoint(x: 437.21, y: 492.71))
        bezier28Path.addCurve(to: CGPoint(x: 437.08, y: 610.67), controlPoint1: CGPoint(x: 436.49, y: 548.32), controlPoint2: CGPoint(x: 437.4, y: 579.49))
        bezier28Path.addCurve(to: CGPoint(x: 437.13, y: 714.84), controlPoint1: CGPoint(x: 437.04, y: 645.39), controlPoint2: CGPoint(x: 436.59, y: 680.12))
        bezier28Path.addCurve(to: CGPoint(x: 437.17, y: 800.2), controlPoint1: CGPoint(x: 437.33, y: 743.29), controlPoint2: CGPoint(x: 436.57, y: 771.75))
        bezier28Path.addCurve(to: CGPoint(x: 436.95, y: 862.97), controlPoint1: CGPoint(x: 437.17, y: 821.12), controlPoint2: CGPoint(x: 437.11, y: 842.04))
        bezier28Path.addCurve(to: CGPoint(x: 349.96, y: 807.52), controlPoint1: CGPoint(x: 407.63, y: 845.01), controlPoint2: CGPoint(x: 379.05, y: 825.84))
        bezier28Path.addCurve(to: CGPoint(x: 233.13, y: 732.31), controlPoint1: CGPoint(x: 311.19, y: 782.17), controlPoint2: CGPoint(x: 272.16, y: 757.23))
        bezier28Path.addCurve(to: CGPoint(x: 118.28, y: 807.89), controlPoint1: CGPoint(x: 194.85, y: 757.52), controlPoint2: CGPoint(x: 156.39, y: 782.43))
        bezier28Path.addCurve(to: CGPoint(x: 34.95, y: 862.47), controlPoint1: CGPoint(x: 90.48, y: 826.04), controlPoint2: CGPoint(x: 62.83, y: 844.43))
        bezier28Path.addCurve(to: CGPoint(x: 34.93, y: 814.85), controlPoint1: CGPoint(x: 35.19, y: 846.59), controlPoint2: CGPoint(x: 34.91, y: 830.72))
        bezier28Path.addCurve(to: CGPoint(x: 34.97, y: 762.81), controlPoint1: CGPoint(x: 35.24, y: 797.51), controlPoint2: CGPoint(x: 35.04, y: 780.16))
        bezier28Path.addCurve(to: CGPoint(x: 34.97, y: 697.47), controlPoint1: CGPoint(x: 35.21, y: 741.03), controlPoint2: CGPoint(x: 35.11, y: 719.25))
        bezier28Path.addCurve(to: CGPoint(x: 35.07, y: 573.33), controlPoint1: CGPoint(x: 35.31, y: 656.09), controlPoint2: CGPoint(x: 34.97, y: 614.71))
        bezier28Path.addCurve(to: CGPoint(x: 34.92, y: 506.53), controlPoint1: CGPoint(x: 35.07, y: 551.07), controlPoint2: CGPoint(x: 35.29, y: 528.8))
        bezier28Path.addCurve(to: CGPoint(x: 34.92, y: 403.81), controlPoint1: CGPoint(x: 34.93, y: 472.29), controlPoint2: CGPoint(x: 35.36, y: 438.05))
        bezier28Path.addCurve(to: CGPoint(x: 34.92, y: 259.81), controlPoint1: CGPoint(x: 34.88, y: 355.81), controlPoint2: CGPoint(x: 35.29, y: 307.81))
        bezier28Path.addCurve(to: CGPoint(x: 35.25, y: 209.01), controlPoint1: CGPoint(x: 34.88, y: 242.88), controlPoint2: CGPoint(x: 34.84, y: 225.95))
        bezier28Path.close()
        fillColor5771.setFill()
        bezier28Path.fill()


        //// Bezier 29 Drawing
        let bezier29Path = UIBezierPath()
        bezier29Path.move(to: CGPoint(x: -0.32, y: 224.03))
        bezier29Path.addCurve(to: CGPoint(x: 29.32, y: 224.12), controlPoint1: CGPoint(x: 9.55, y: 223.05), controlPoint2: CGPoint(x: 19.45, y: 223.6))
        bezier29Path.addCurve(to: CGPoint(x: 29.63, y: 292.36), controlPoint1: CGPoint(x: 29.6, y: 246.87), controlPoint2: CGPoint(x: 28.97, y: 269.61))
        bezier29Path.addCurve(to: CGPoint(x: 29.31, y: 412), controlPoint1: CGPoint(x: 28.8, y: 332.23), controlPoint2: CGPoint(x: 29.67, y: 372.12))
        bezier29Path.addCurve(to: CGPoint(x: 29.69, y: 436.39), controlPoint1: CGPoint(x: 29.16, y: 420.13), controlPoint2: CGPoint(x: 29.56, y: 428.25))
        bezier29Path.addCurve(to: CGPoint(x: 29.32, y: 507.99), controlPoint1: CGPoint(x: 28.73, y: 460.24), controlPoint2: CGPoint(x: 29.61, y: 484.12))
        bezier29Path.addCurve(to: CGPoint(x: 29.72, y: 535.08), controlPoint1: CGPoint(x: 29.12, y: 517.03), controlPoint2: CGPoint(x: 29.51, y: 526.05))
        bezier29Path.addCurve(to: CGPoint(x: 29.23, y: 574.67), controlPoint1: CGPoint(x: 28.77, y: 548.25), controlPoint2: CGPoint(x: 29.36, y: 561.48))
        bezier29Path.addCurve(to: CGPoint(x: 29.65, y: 650.28), controlPoint1: CGPoint(x: 29.48, y: 599.87), controlPoint2: CGPoint(x: 28.68, y: 625.09))
        bezier29Path.addCurve(to: CGPoint(x: 29.25, y: 706.67), controlPoint1: CGPoint(x: 28.95, y: 669.07), controlPoint2: CGPoint(x: 29.4, y: 687.87))
        bezier29Path.addCurve(to: CGPoint(x: 29.67, y: 731.61), controlPoint1: CGPoint(x: 29.17, y: 714.97), controlPoint2: CGPoint(x: 29.2, y: 723.31))
        bezier29Path.addCurve(to: CGPoint(x: 29.65, y: 792.96), controlPoint1: CGPoint(x: 29.15, y: 752.05), controlPoint2: CGPoint(x: 28.99, y: 772.52))
        bezier29Path.addCurve(to: CGPoint(x: 29.4, y: 873.41), controlPoint1: CGPoint(x: 29.07, y: 819.77), controlPoint2: CGPoint(x: 29.31, y: 846.6))
        bezier29Path.addCurve(to: CGPoint(x: 125.41, y: 810.39), controlPoint1: CGPoint(x: 61.55, y: 852.61), controlPoint2: CGPoint(x: 93.32, y: 831.24))
        bezier29Path.addCurve(to: CGPoint(x: 196.8, y: 763.47), controlPoint1: CGPoint(x: 149.28, y: 794.84), controlPoint2: CGPoint(x: 173.01, y: 779.11))
        bezier29Path.addCurve(to: CGPoint(x: 233.29, y: 739.72), controlPoint1: CGPoint(x: 208.99, y: 755.59), controlPoint2: CGPoint(x: 220.85, y: 747.21))
        bezier29Path.addCurve(to: CGPoint(x: 343.8, y: 810.59), controlPoint1: CGPoint(x: 270.29, y: 763.09), controlPoint2: CGPoint(x: 306.83, y: 787.17))
        bezier29Path.addCurve(to: CGPoint(x: 414.61, y: 856.12), controlPoint1: CGPoint(x: 367.47, y: 825.67), controlPoint2: CGPoint(x: 390.99, y: 840.97))
        bezier29Path.addCurve(to: CGPoint(x: 442.53, y: 873.72), controlPoint1: CGPoint(x: 423.89, y: 862.01), controlPoint2: CGPoint(x: 432.95, y: 868.32))
        bezier29Path.addCurve(to: CGPoint(x: 442.33, y: 783.63), controlPoint1: CGPoint(x: 442.85, y: 843.69), controlPoint2: CGPoint(x: 442.73, y: 813.65))
        bezier29Path.addCurve(to: CGPoint(x: 442.68, y: 741.33), controlPoint1: CGPoint(x: 443.08, y: 769.53), controlPoint2: CGPoint(x: 442.61, y: 755.43))
        bezier29Path.addCurve(to: CGPoint(x: 442.29, y: 682.27), controlPoint1: CGPoint(x: 442.44, y: 721.64), controlPoint2: CGPoint(x: 443.08, y: 701.95))
        bezier29Path.addCurve(to: CGPoint(x: 442.71, y: 600), controlPoint1: CGPoint(x: 443.4, y: 654.87), controlPoint2: CGPoint(x: 442.48, y: 627.43))
        bezier29Path.addCurve(to: CGPoint(x: 442.33, y: 539.05), controlPoint1: CGPoint(x: 442.4, y: 579.68), controlPoint2: CGPoint(x: 443.36, y: 559.36))
        bezier29Path.addCurve(to: CGPoint(x: 442.33, y: 467.04), controlPoint1: CGPoint(x: 442.8, y: 515.07), controlPoint2: CGPoint(x: 443.07, y: 491.04))
        bezier29Path.addCurve(to: CGPoint(x: 442.68, y: 417.33), controlPoint1: CGPoint(x: 442.96, y: 450.48), controlPoint2: CGPoint(x: 442.48, y: 433.91))
        bezier29Path.addCurve(to: CGPoint(x: 442.36, y: 375.03), controlPoint1: CGPoint(x: 442.6, y: 403.23), controlPoint2: CGPoint(x: 443.03, y: 389.12))
        bezier29Path.addCurve(to: CGPoint(x: 442.67, y: 312), controlPoint1: CGPoint(x: 442.95, y: 354.03), controlPoint2: CGPoint(x: 442.48, y: 333.01))
        bezier29Path.addCurve(to: CGPoint(x: 442.36, y: 260.35), controlPoint1: CGPoint(x: 442.53, y: 294.79), controlPoint2: CGPoint(x: 443.05, y: 277.56))
        bezier29Path.addCurve(to: CGPoint(x: 442.68, y: 224.01), controlPoint1: CGPoint(x: 442.71, y: 248.24), controlPoint2: CGPoint(x: 442.76, y: 236.12))
        bezier29Path.addCurve(to: CGPoint(x: 472.37, y: 224.01), controlPoint1: CGPoint(x: 452.57, y: 224.07), controlPoint2: CGPoint(x: 462.47, y: 224.05))
        bezier29Path.addCurve(to: CGPoint(x: 472.44, y: 888), controlPoint1: CGPoint(x: 472.53, y: 445.35), controlPoint2: CGPoint(x: 472.4, y: 666.67))
        bezier29Path.addCurve(to: CGPoint(x: 472.23, y: 928.05), controlPoint1: CGPoint(x: 472.35, y: 901.35), controlPoint2: CGPoint(x: 472.69, y: 914.71))
        bezier29Path.addCurve(to: CGPoint(x: 233.32, y: 774.77), controlPoint1: CGPoint(x: 392.41, y: 877.25), controlPoint2: CGPoint(x: 313.03, y: 825.76))
        bezier29Path.addCurve(to: CGPoint(x: -0.2, y: 928.05), controlPoint1: CGPoint(x: 155.39, y: 825.73), controlPoint2: CGPoint(x: 77.84, y: 877.28))
        bezier29Path.addCurve(to: CGPoint(x: -0.41, y: 730.67), controlPoint1: CGPoint(x: -0.69, y: 862.27), controlPoint2: CGPoint(x: -0.27, y: 796.47))
        bezier29Path.addCurve(to: CGPoint(x: -0.32, y: 224.03), controlPoint1: CGPoint(x: -0.35, y: 561.79), controlPoint2: CGPoint(x: -0.55, y: 392.91))
        bezier29Path.close()
        fillColor5771.setFill()
        bezier29Path.fill()




        //// #b33d38ff
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 442.65, y: 209.31, width: 29.7, height: 14.65))
        fillColor5828.setFill()
        rectanglePath.fill()




        //// #b03c38ff
        //// Bezier 30 Drawing
        let bezier30Path = UIBezierPath()
        bezier30Path.move(to: CGPoint(x: 35.61, y: 213.37))
        bezier30Path.addCurve(to: CGPoint(x: 53.33, y: 213.05), controlPoint1: CGPoint(x: 41.52, y: 213.15), controlPoint2: CGPoint(x: 47.43, y: 213.04))
        bezier30Path.addCurve(to: CGPoint(x: 436.12, y: 213.2), controlPoint1: CGPoint(x: 180.93, y: 213.19), controlPoint2: CGPoint(x: 308.53, y: 212.89))
        bezier30Path.addCurve(to: CGPoint(x: 436.05, y: 215.93), controlPoint1: CGPoint(x: 436.11, y: 213.89), controlPoint2: CGPoint(x: 436.07, y: 215.25))
        bezier30Path.addCurve(to: CGPoint(x: 435.69, y: 225.21), controlPoint1: CGPoint(x: 435.96, y: 219.03), controlPoint2: CGPoint(x: 435.81, y: 222.12))
        bezier30Path.addCurve(to: CGPoint(x: 371.99, y: 225.64), controlPoint1: CGPoint(x: 414.47, y: 225.76), controlPoint2: CGPoint(x: 393.21, y: 224.83))
        bezier30Path.addCurve(to: CGPoint(x: 340, y: 225.29), controlPoint1: CGPoint(x: 361.32, y: 226.31), controlPoint2: CGPoint(x: 350.67, y: 225.13))
        bezier30Path.addCurve(to: CGPoint(x: 278.67, y: 225.85), controlPoint1: CGPoint(x: 319.55, y: 225.52), controlPoint2: CGPoint(x: 299.09, y: 224.96))
        bezier30Path.addCurve(to: CGPoint(x: 216, y: 225.29), controlPoint1: CGPoint(x: 257.79, y: 224.96), controlPoint2: CGPoint(x: 236.89, y: 225.52))
        bezier30Path.addCurve(to: CGPoint(x: 188.65, y: 225.77), controlPoint1: CGPoint(x: 206.88, y: 225.16), controlPoint2: CGPoint(x: 197.77, y: 226.13))
        bezier30Path.addCurve(to: CGPoint(x: 133.33, y: 225.29), controlPoint1: CGPoint(x: 170.23, y: 224.87), controlPoint2: CGPoint(x: 151.77, y: 225.6))
        bezier30Path.addCurve(to: CGPoint(x: 104.23, y: 225.8), controlPoint1: CGPoint(x: 123.63, y: 225.07), controlPoint2: CGPoint(x: 113.93, y: 226.05))
        bezier30Path.addCurve(to: CGPoint(x: 36.44, y: 225.19), controlPoint1: CGPoint(x: 81.65, y: 224.73), controlPoint2: CGPoint(x: 59.03, y: 225.8))
        bezier30Path.addCurve(to: CGPoint(x: 35.61, y: 213.37), controlPoint1: CGPoint(x: 36.16, y: 221.25), controlPoint2: CGPoint(x: 35.95, y: 217.31))
        bezier30Path.close()
        fillColor5829.setFill()
        bezier30Path.fill()




        //// #f3d585ff
        //// Bezier 31 Drawing
        let bezier31Path = UIBezierPath()
        bezier31Path.move(to: CGPoint(x: 437.15, y: 229.13))
        bezier31Path.addCurve(to: CGPoint(x: 441.09, y: 229.91), controlPoint1: CGPoint(x: 438.13, y: 229.33), controlPoint2: CGPoint(x: 440.11, y: 229.72))
        bezier31Path.addCurve(to: CGPoint(x: 442.36, y: 260.35), controlPoint1: CGPoint(x: 441.2, y: 240.07), controlPoint2: CGPoint(x: 441.2, y: 250.24))
        bezier31Path.addCurve(to: CGPoint(x: 442.67, y: 312), controlPoint1: CGPoint(x: 443.05, y: 277.56), controlPoint2: CGPoint(x: 442.53, y: 294.79))
        bezier31Path.addCurve(to: CGPoint(x: 442.36, y: 375.03), controlPoint1: CGPoint(x: 442.48, y: 333.01), controlPoint2: CGPoint(x: 442.95, y: 354.03))
        bezier31Path.addCurve(to: CGPoint(x: 440.99, y: 353.91), controlPoint1: CGPoint(x: 441.65, y: 368), controlPoint2: CGPoint(x: 440.97, y: 360.97))
        bezier31Path.addCurve(to: CGPoint(x: 437.16, y: 353.12), controlPoint1: CGPoint(x: 440.04, y: 353.71), controlPoint2: CGPoint(x: 438.12, y: 353.32))
        bezier31Path.addCurve(to: CGPoint(x: 437.15, y: 229.13), controlPoint1: CGPoint(x: 437.17, y: 311.8), controlPoint2: CGPoint(x: 436.91, y: 270.47))
        bezier31Path.close()
        fillColor5830.setFill()
        bezier31Path.fill()




        //// #f0cc7dff
        //// Bezier 32 Drawing
        let bezier32Path = UIBezierPath()
        bezier32Path.move(to: CGPoint(x: 30.97, y: 260.57))
        bezier32Path.addCurve(to: CGPoint(x: 34.92, y: 259.81), controlPoint1: CGPoint(x: 31.96, y: 260.39), controlPoint2: CGPoint(x: 33.93, y: 260))
        bezier32Path.addCurve(to: CGPoint(x: 34.92, y: 403.81), controlPoint1: CGPoint(x: 35.29, y: 307.81), controlPoint2: CGPoint(x: 34.88, y: 355.81))
        bezier32Path.addCurve(to: CGPoint(x: 30.99, y: 404.59), controlPoint1: CGPoint(x: 33.93, y: 404.01), controlPoint2: CGPoint(x: 31.97, y: 404.39))
        bezier32Path.addCurve(to: CGPoint(x: 29.69, y: 436.39), controlPoint1: CGPoint(x: 30.87, y: 415.2), controlPoint2: CGPoint(x: 31.08, y: 425.84))
        bezier32Path.addCurve(to: CGPoint(x: 29.31, y: 412), controlPoint1: CGPoint(x: 29.56, y: 428.25), controlPoint2: CGPoint(x: 29.16, y: 420.13))
        bezier32Path.addCurve(to: CGPoint(x: 29.63, y: 292.36), controlPoint1: CGPoint(x: 29.67, y: 372.12), controlPoint2: CGPoint(x: 28.8, y: 332.23))
        bezier32Path.addCurve(to: CGPoint(x: 30.97, y: 260.57), controlPoint1: CGPoint(x: 30.96, y: 281.81), controlPoint2: CGPoint(x: 30.85, y: 271.19))
        bezier32Path.close()
        fillColor5831.setFill()
        bezier32Path.fill()




        //// #ebbf6eff
        //// Bezier 33 Drawing
        let bezier33Path = UIBezierPath()
        bezier33Path.move(to: CGPoint(x: 437.16, y: 353.12))
        bezier33Path.addCurve(to: CGPoint(x: 440.99, y: 353.91), controlPoint1: CGPoint(x: 438.12, y: 353.32), controlPoint2: CGPoint(x: 440.04, y: 353.71))
        bezier33Path.addCurve(to: CGPoint(x: 442.36, y: 375.03), controlPoint1: CGPoint(x: 440.97, y: 360.97), controlPoint2: CGPoint(x: 441.65, y: 368))
        bezier33Path.addCurve(to: CGPoint(x: 442.68, y: 417.33), controlPoint1: CGPoint(x: 443.03, y: 389.12), controlPoint2: CGPoint(x: 442.6, y: 403.23))
        bezier33Path.addCurve(to: CGPoint(x: 442.33, y: 467.04), controlPoint1: CGPoint(x: 442.48, y: 433.91), controlPoint2: CGPoint(x: 442.96, y: 450.48))
        bezier33Path.addCurve(to: CGPoint(x: 441, y: 444.59), controlPoint1: CGPoint(x: 441.56, y: 459.59), controlPoint2: CGPoint(x: 440.85, y: 452.09))
        bezier33Path.addCurve(to: CGPoint(x: 437.13, y: 443.81), controlPoint1: CGPoint(x: 440.03, y: 444.4), controlPoint2: CGPoint(x: 438.11, y: 444))
        bezier33Path.addCurve(to: CGPoint(x: 437.16, y: 353.12), controlPoint1: CGPoint(x: 437.24, y: 413.59), controlPoint2: CGPoint(x: 436.76, y: 383.35))
        bezier33Path.close()
        fillColor5832.setFill()
        bezier33Path.fill()




        //// #e4ac5fff
        //// Bezier 34 Drawing
        let bezier34Path = UIBezierPath()
        bezier34Path.move(to: CGPoint(x: 30.99, y: 404.59))
        bezier34Path.addCurve(to: CGPoint(x: 34.92, y: 403.81), controlPoint1: CGPoint(x: 31.97, y: 404.39), controlPoint2: CGPoint(x: 33.93, y: 404.01))
        bezier34Path.addCurve(to: CGPoint(x: 34.92, y: 506.53), controlPoint1: CGPoint(x: 35.36, y: 438.05), controlPoint2: CGPoint(x: 34.93, y: 472.29))
        bezier34Path.addCurve(to: CGPoint(x: 31.11, y: 507.32), controlPoint1: CGPoint(x: 33.97, y: 506.73), controlPoint2: CGPoint(x: 32.05, y: 507.12))
        bezier34Path.addCurve(to: CGPoint(x: 29.72, y: 535.08), controlPoint1: CGPoint(x: 31.37, y: 516.6), controlPoint2: CGPoint(x: 31.03, y: 525.88))
        bezier34Path.addCurve(to: CGPoint(x: 29.32, y: 507.99), controlPoint1: CGPoint(x: 29.51, y: 526.05), controlPoint2: CGPoint(x: 29.12, y: 517.03))
        bezier34Path.addCurve(to: CGPoint(x: 29.69, y: 436.39), controlPoint1: CGPoint(x: 29.61, y: 484.12), controlPoint2: CGPoint(x: 28.73, y: 460.24))
        bezier34Path.addCurve(to: CGPoint(x: 30.99, y: 404.59), controlPoint1: CGPoint(x: 31.08, y: 425.84), controlPoint2: CGPoint(x: 30.87, y: 415.2))
        bezier34Path.close()
        fillColor5833.setFill()
        bezier34Path.fill()




        //// #e1a458ff
        //// Bezier 35 Drawing
        let bezier35Path = UIBezierPath()
        bezier35Path.move(to: CGPoint(x: 437.13, y: 443.81))
        bezier35Path.addCurve(to: CGPoint(x: 441, y: 444.59), controlPoint1: CGPoint(x: 438.11, y: 444), controlPoint2: CGPoint(x: 440.03, y: 444.4))
        bezier35Path.addCurve(to: CGPoint(x: 442.33, y: 467.04), controlPoint1: CGPoint(x: 440.85, y: 452.09), controlPoint2: CGPoint(x: 441.56, y: 459.59))
        bezier35Path.addCurve(to: CGPoint(x: 442.33, y: 539.05), controlPoint1: CGPoint(x: 443.07, y: 491.04), controlPoint2: CGPoint(x: 442.8, y: 515.07))
        bezier35Path.addCurve(to: CGPoint(x: 440.79, y: 517.99), controlPoint1: CGPoint(x: 441.51, y: 532.05), controlPoint2: CGPoint(x: 440.75, y: 525.04))
        bezier35Path.addCurve(to: CGPoint(x: 437.12, y: 517.16), controlPoint1: CGPoint(x: 439.87, y: 517.77), controlPoint2: CGPoint(x: 438.04, y: 517.36))
        bezier35Path.addCurve(to: CGPoint(x: 437.13, y: 443.81), controlPoint1: CGPoint(x: 437.21, y: 492.71), controlPoint2: CGPoint(x: 436.64, y: 468.25))
        bezier35Path.close()
        fillColor5784.setFill()
        bezier35Path.fill()




        //// #d68240ff
        //// Bezier 36 Drawing
        let bezier36Path = UIBezierPath()
        bezier36Path.move(to: CGPoint(x: 31.11, y: 507.32))
        bezier36Path.addCurve(to: CGPoint(x: 34.92, y: 506.53), controlPoint1: CGPoint(x: 32.05, y: 507.12), controlPoint2: CGPoint(x: 33.97, y: 506.73))
        bezier36Path.addCurve(to: CGPoint(x: 35.07, y: 573.33), controlPoint1: CGPoint(x: 35.29, y: 528.8), controlPoint2: CGPoint(x: 35.07, y: 551.07))
        bezier36Path.addCurve(to: CGPoint(x: 34.97, y: 697.47), controlPoint1: CGPoint(x: 34.97, y: 614.71), controlPoint2: CGPoint(x: 35.31, y: 656.09))
        bezier36Path.addCurve(to: CGPoint(x: 31.16, y: 696.67), controlPoint1: CGPoint(x: 34.03, y: 697.27), controlPoint2: CGPoint(x: 32.11, y: 696.87))
        bezier36Path.addCurve(to: CGPoint(x: 29.65, y: 650.28), controlPoint1: CGPoint(x: 30.75, y: 681.2), controlPoint2: CGPoint(x: 31.68, y: 665.67))
        bezier36Path.addCurve(to: CGPoint(x: 29.23, y: 574.67), controlPoint1: CGPoint(x: 28.68, y: 625.09), controlPoint2: CGPoint(x: 29.48, y: 599.87))
        bezier36Path.addCurve(to: CGPoint(x: 29.72, y: 535.08), controlPoint1: CGPoint(x: 29.36, y: 561.48), controlPoint2: CGPoint(x: 28.77, y: 548.25))
        bezier36Path.addCurve(to: CGPoint(x: 31.11, y: 507.32), controlPoint1: CGPoint(x: 31.03, y: 525.88), controlPoint2: CGPoint(x: 31.37, y: 516.6))
        bezier36Path.close()
        fillColor5834.setFill()
        bezier36Path.fill()




        //// #d68441ff
        //// Bezier 37 Drawing
        let bezier37Path = UIBezierPath()
        bezier37Path.move(to: CGPoint(x: 437.12, y: 517.16))
        bezier37Path.addCurve(to: CGPoint(x: 440.79, y: 517.99), controlPoint1: CGPoint(x: 438.04, y: 517.36), controlPoint2: CGPoint(x: 439.87, y: 517.77))
        bezier37Path.addCurve(to: CGPoint(x: 442.33, y: 539.05), controlPoint1: CGPoint(x: 440.75, y: 525.04), controlPoint2: CGPoint(x: 441.51, y: 532.05))
        bezier37Path.addCurve(to: CGPoint(x: 442.71, y: 600), controlPoint1: CGPoint(x: 443.36, y: 559.36), controlPoint2: CGPoint(x: 442.4, y: 579.68))
        bezier37Path.addCurve(to: CGPoint(x: 442.29, y: 682.27), controlPoint1: CGPoint(x: 442.48, y: 627.43), controlPoint2: CGPoint(x: 443.4, y: 654.87))
        bezier37Path.addCurve(to: CGPoint(x: 440.91, y: 714.03), controlPoint1: CGPoint(x: 440.83, y: 692.8), controlPoint2: CGPoint(x: 441, y: 703.43))
        bezier37Path.addCurve(to: CGPoint(x: 437.13, y: 714.84), controlPoint1: CGPoint(x: 439.96, y: 714.23), controlPoint2: CGPoint(x: 438.08, y: 714.64))
        bezier37Path.addCurve(to: CGPoint(x: 437.08, y: 610.67), controlPoint1: CGPoint(x: 436.59, y: 680.12), controlPoint2: CGPoint(x: 437.04, y: 645.39))
        bezier37Path.addCurve(to: CGPoint(x: 437.12, y: 517.16), controlPoint1: CGPoint(x: 437.4, y: 579.49), controlPoint2: CGPoint(x: 436.49, y: 548.32))
        bezier37Path.close()
        fillColor5782.setFill()
        bezier37Path.fill()




        //// #de9a50ff
        //// Bezier 38 Drawing
        let bezier38Path = UIBezierPath()
        bezier38Path.move(to: CGPoint(x: 29.65, y: 650.28))
        bezier38Path.addCurve(to: CGPoint(x: 31.16, y: 696.67), controlPoint1: CGPoint(x: 31.68, y: 665.67), controlPoint2: CGPoint(x: 30.75, y: 681.2))
        bezier38Path.addCurve(to: CGPoint(x: 34.97, y: 697.47), controlPoint1: CGPoint(x: 32.11, y: 696.87), controlPoint2: CGPoint(x: 34.03, y: 697.27))
        bezier38Path.addCurve(to: CGPoint(x: 34.97, y: 762.81), controlPoint1: CGPoint(x: 35.11, y: 719.25), controlPoint2: CGPoint(x: 35.21, y: 741.03))
        bezier38Path.addCurve(to: CGPoint(x: 31.12, y: 762.03), controlPoint1: CGPoint(x: 34, y: 762.61), controlPoint2: CGPoint(x: 32.08, y: 762.23))
        bezier38Path.addCurve(to: CGPoint(x: 29.67, y: 731.61), controlPoint1: CGPoint(x: 31.17, y: 751.87), controlPoint2: CGPoint(x: 31.04, y: 741.69))
        bezier38Path.addCurve(to: CGPoint(x: 29.25, y: 706.67), controlPoint1: CGPoint(x: 29.2, y: 723.31), controlPoint2: CGPoint(x: 29.17, y: 714.97))
        bezier38Path.addCurve(to: CGPoint(x: 29.65, y: 650.28), controlPoint1: CGPoint(x: 29.4, y: 687.87), controlPoint2: CGPoint(x: 28.95, y: 669.07))
        bezier38Path.close()
        fillColor5835.setFill()
        bezier38Path.fill()




        //// #e2a75aff
        //// Bezier 39 Drawing
        let bezier39Path = UIBezierPath()
        bezier39Path.move(to: CGPoint(x: 440.91, y: 714.03))
        bezier39Path.addCurve(to: CGPoint(x: 442.29, y: 682.27), controlPoint1: CGPoint(x: 441, y: 703.43), controlPoint2: CGPoint(x: 440.83, y: 692.8))
        bezier39Path.addCurve(to: CGPoint(x: 442.68, y: 741.33), controlPoint1: CGPoint(x: 443.08, y: 701.95), controlPoint2: CGPoint(x: 442.44, y: 721.64))
        bezier39Path.addCurve(to: CGPoint(x: 442.33, y: 783.63), controlPoint1: CGPoint(x: 442.61, y: 755.43), controlPoint2: CGPoint(x: 443.08, y: 769.53))
        bezier39Path.addCurve(to: CGPoint(x: 440.72, y: 799.43), controlPoint1: CGPoint(x: 441.85, y: 788.89), controlPoint2: CGPoint(x: 441.19, y: 794.15))
        bezier39Path.addCurve(to: CGPoint(x: 437.17, y: 800.2), controlPoint1: CGPoint(x: 439.83, y: 799.63), controlPoint2: CGPoint(x: 438.05, y: 800.01))
        bezier39Path.addCurve(to: CGPoint(x: 437.13, y: 714.84), controlPoint1: CGPoint(x: 436.57, y: 771.75), controlPoint2: CGPoint(x: 437.33, y: 743.29))
        bezier39Path.addCurve(to: CGPoint(x: 440.91, y: 714.03), controlPoint1: CGPoint(x: 438.08, y: 714.64), controlPoint2: CGPoint(x: 439.96, y: 714.23))
        bezier39Path.close()
        fillColor5836.setFill()
        bezier39Path.fill()




        //// #e6b063ff
        //// Bezier 40 Drawing
        let bezier40Path = UIBezierPath()
        bezier40Path.move(to: CGPoint(x: 29.67, y: 731.61))
        bezier40Path.addCurve(to: CGPoint(x: 31.12, y: 762.03), controlPoint1: CGPoint(x: 31.04, y: 741.69), controlPoint2: CGPoint(x: 31.17, y: 751.87))
        bezier40Path.addCurve(to: CGPoint(x: 34.97, y: 762.81), controlPoint1: CGPoint(x: 32.08, y: 762.23), controlPoint2: CGPoint(x: 34, y: 762.61))
        bezier40Path.addCurve(to: CGPoint(x: 34.93, y: 814.85), controlPoint1: CGPoint(x: 35.04, y: 780.16), controlPoint2: CGPoint(x: 35.24, y: 797.51))
        bezier40Path.addCurve(to: CGPoint(x: 31.09, y: 814.07), controlPoint1: CGPoint(x: 33.97, y: 814.65), controlPoint2: CGPoint(x: 32.05, y: 814.27))
        bezier40Path.addCurve(to: CGPoint(x: 29.65, y: 792.96), controlPoint1: CGPoint(x: 31.04, y: 807.01), controlPoint2: CGPoint(x: 30.33, y: 799.99))
        bezier40Path.addCurve(to: CGPoint(x: 29.67, y: 731.61), controlPoint1: CGPoint(x: 28.99, y: 772.52), controlPoint2: CGPoint(x: 29.15, y: 752.05))
        bezier40Path.close()
        fillColor5837.setFill()
        bezier40Path.fill()




        //// #e4ad5fff
        //// Bezier 41 Drawing
        let bezier41Path = UIBezierPath()
        bezier41Path.move(to: CGPoint(x: 118.28, y: 807.89))
        bezier41Path.addCurve(to: CGPoint(x: 233.13, y: 732.31), controlPoint1: CGPoint(x: 156.39, y: 782.43), controlPoint2: CGPoint(x: 194.85, y: 757.52))
        bezier41Path.addCurve(to: CGPoint(x: 349.96, y: 807.52), controlPoint1: CGPoint(x: 272.16, y: 757.23), controlPoint2: CGPoint(x: 311.19, y: 782.17))
        bezier41Path.addCurve(to: CGPoint(x: 343.8, y: 810.59), controlPoint1: CGPoint(x: 347.91, y: 808.53), controlPoint2: CGPoint(x: 345.85, y: 809.55))
        bezier41Path.addCurve(to: CGPoint(x: 233.29, y: 739.72), controlPoint1: CGPoint(x: 306.83, y: 787.17), controlPoint2: CGPoint(x: 270.29, y: 763.09))
        bezier41Path.addCurve(to: CGPoint(x: 196.8, y: 763.47), controlPoint1: CGPoint(x: 220.85, y: 747.21), controlPoint2: CGPoint(x: 208.99, y: 755.59))
        bezier41Path.addCurve(to: CGPoint(x: 125.41, y: 810.39), controlPoint1: CGPoint(x: 173.01, y: 779.11), controlPoint2: CGPoint(x: 149.28, y: 794.84))
        bezier41Path.addCurve(to: CGPoint(x: 118.28, y: 807.89), controlPoint1: CGPoint(x: 123.04, y: 809.55), controlPoint2: CGPoint(x: 120.65, y: 808.72))
        bezier41Path.close()
        fillColor5838.setFill()
        bezier41Path.fill()




        //// #efc878ff
        //// Bezier 42 Drawing
        let bezier42Path = UIBezierPath()
        bezier42Path.move(to: CGPoint(x: 440.72, y: 799.43))
        bezier42Path.addCurve(to: CGPoint(x: 442.33, y: 783.63), controlPoint1: CGPoint(x: 441.19, y: 794.15), controlPoint2: CGPoint(x: 441.85, y: 788.89))
        bezier42Path.addCurve(to: CGPoint(x: 442.53, y: 873.72), controlPoint1: CGPoint(x: 442.73, y: 813.65), controlPoint2: CGPoint(x: 442.85, y: 843.69))
        bezier42Path.addCurve(to: CGPoint(x: 414.61, y: 856.12), controlPoint1: CGPoint(x: 432.95, y: 868.32), controlPoint2: CGPoint(x: 423.89, y: 862.01))
        bezier42Path.addCurve(to: CGPoint(x: 343.8, y: 810.59), controlPoint1: CGPoint(x: 390.99, y: 840.97), controlPoint2: CGPoint(x: 367.47, y: 825.67))
        bezier42Path.addCurve(to: CGPoint(x: 349.96, y: 807.52), controlPoint1: CGPoint(x: 345.85, y: 809.55), controlPoint2: CGPoint(x: 347.91, y: 808.53))
        bezier42Path.addCurve(to: CGPoint(x: 436.95, y: 862.97), controlPoint1: CGPoint(x: 379.05, y: 825.84), controlPoint2: CGPoint(x: 407.63, y: 845.01))
        bezier42Path.addCurve(to: CGPoint(x: 437.17, y: 800.2), controlPoint1: CGPoint(x: 437.11, y: 842.04), controlPoint2: CGPoint(x: 437.17, y: 821.12))
        bezier42Path.addCurve(to: CGPoint(x: 440.72, y: 799.43), controlPoint1: CGPoint(x: 438.05, y: 800.01), controlPoint2: CGPoint(x: 439.83, y: 799.63))
        bezier42Path.close()
        fillColor5813.setFill()
        bezier42Path.fill()




        //// #efc979ff
        //// Bezier 43 Drawing
        let bezier43Path = UIBezierPath()
        bezier43Path.move(to: CGPoint(x: 29.65, y: 792.96))
        bezier43Path.addCurve(to: CGPoint(x: 31.09, y: 814.07), controlPoint1: CGPoint(x: 30.33, y: 799.99), controlPoint2: CGPoint(x: 31.04, y: 807.01))
        bezier43Path.addCurve(to: CGPoint(x: 34.93, y: 814.85), controlPoint1: CGPoint(x: 32.05, y: 814.27), controlPoint2: CGPoint(x: 33.97, y: 814.65))
        bezier43Path.addCurve(to: CGPoint(x: 34.95, y: 862.47), controlPoint1: CGPoint(x: 34.91, y: 830.72), controlPoint2: CGPoint(x: 35.19, y: 846.59))
        bezier43Path.addCurve(to: CGPoint(x: 118.28, y: 807.89), controlPoint1: CGPoint(x: 62.83, y: 844.43), controlPoint2: CGPoint(x: 90.48, y: 826.04))
        bezier43Path.addCurve(to: CGPoint(x: 125.41, y: 810.39), controlPoint1: CGPoint(x: 120.65, y: 808.72), controlPoint2: CGPoint(x: 123.04, y: 809.55))
        bezier43Path.addCurve(to: CGPoint(x: 29.4, y: 873.41), controlPoint1: CGPoint(x: 93.32, y: 831.24), controlPoint2: CGPoint(x: 61.55, y: 852.61))
        bezier43Path.addCurve(to: CGPoint(x: 29.65, y: 792.96), controlPoint1: CGPoint(x: 29.31, y: 846.6), controlPoint2: CGPoint(x: 29.07, y: 819.77))
        bezier43Path.close()
        fillColor5839.setFill()
        bezier43Path.fill()
        
        context.restoreGState()

    }

    //// Generated Images

    @objc dynamic public class var imageOfPurpleBadge: UIImage {
        if Cache.imageOfPurpleBadge != nil {
            return Cache.imageOfPurpleBadge!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 452, height: 540), false, 0)
            GameBadge.drawPurpleBadge()

        Cache.imageOfPurpleBadge = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfPurpleBadge!
    }

    @objc dynamic public class var imageOfGreenBadge: UIImage {
        if Cache.imageOfGreenBadge != nil {
            return Cache.imageOfGreenBadge!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 452, height: 540), false, 0)
            GameBadge.drawGreenBadge()

        Cache.imageOfGreenBadge = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfGreenBadge!
    }

    @objc dynamic public class var imageOfBlueprintBadge: UIImage {
        if Cache.imageOfBlueprintBadge != nil {
            return Cache.imageOfBlueprintBadge!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 452, height: 540), false, 0)
            GameBadge.drawBlueprintBadge()

        Cache.imageOfBlueprintBadge = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfBlueprintBadge!
    }

    @objc dynamic public class var imageOfWetAsphaltBadge: UIImage {
        if Cache.imageOfWetAsphaltBadge != nil {
            return Cache.imageOfWetAsphaltBadge!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 452, height: 540), false, 0)
            GameBadge.drawWetAsphaltBadge()

        Cache.imageOfWetAsphaltBadge = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWetAsphaltBadge!
    }

    @objc dynamic public class var imageOfGoldBadge: UIImage {
        if Cache.imageOfGoldBadge != nil {
            return Cache.imageOfGoldBadge!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 452, height: 540), false, 0)
            GameBadge.drawGoldBadge()

        Cache.imageOfGoldBadge = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfGoldBadge!
    }

    @objc dynamic public class var imageOfAsusBlueGreyBadge: UIImage {
        if Cache.imageOfAsusBlueGreyBadge != nil {
            return Cache.imageOfAsusBlueGreyBadge!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 452, height: 540), false, 0)
            GameBadge.drawAsusBlueGreyBadge()

        Cache.imageOfAsusBlueGreyBadge = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfAsusBlueGreyBadge!
    }

    @objc dynamic public class var imageOfRedBadge: UIImage {
        if Cache.imageOfRedBadge != nil {
            return Cache.imageOfRedBadge!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 452, height: 540), false, 0)
            GameBadge.drawRedBadge()

        Cache.imageOfRedBadge = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfRedBadge!
    }

    @objc dynamic public class var imageOfWhiteBadge: UIImage {
        if Cache.imageOfWhiteBadge != nil {
            return Cache.imageOfWhiteBadge!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 452, height: 540), false, 0)
            GameBadge.drawWhiteBadge()

        Cache.imageOfWhiteBadge = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWhiteBadge!
    }

    @objc dynamic public class var imageOfBlackBadge: UIImage {
        if Cache.imageOfBlackBadge != nil {
            return Cache.imageOfBlackBadge!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 452, height: 540), false, 0)
            GameBadge.drawBlackBadge()

        Cache.imageOfBlackBadge = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfBlackBadge!
    }

    @objc dynamic public class var imageOfSquareFrame: UIImage {
        if Cache.imageOfSquareFrame != nil {
            return Cache.imageOfSquareFrame!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 479, height: 534), false, 0)
            GameBadge.drawSquareFrame()

        Cache.imageOfSquareFrame = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfSquareFrame!
    }

    @objc dynamic public class var imageOfNA: UIImage {
        if Cache.imageOfNA != nil {
            return Cache.imageOfNA!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 195, height: 95), false, 0)
            GameBadge.drawNA()

        Cache.imageOfNA = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNA!
    }

    @objc dynamic public class var imageOfBadge1: UIImage {
        if Cache.imageOfBadge1 != nil {
            return Cache.imageOfBadge1!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 475, height: 949), false, 0)
            GameBadge.drawBadge1()

        Cache.imageOfBadge1 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfBadge1!
    }

    @objc dynamic public class var imageOfBadge2: UIImage {
        if Cache.imageOfBadge2 != nil {
            return Cache.imageOfBadge2!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 473, height: 946), false, 0)
            GameBadge.drawBadge2()

        Cache.imageOfBadge2 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfBadge2!
    }

    @objc dynamic public class var imageOfBadge3: UIImage {
        if Cache.imageOfBadge3 != nil {
            return Cache.imageOfBadge3!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 473, height: 969), false, 0)
            GameBadge.drawBadge3()

        Cache.imageOfBadge3 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfBadge3!
    }

    @objc dynamic public class var imageOfBadge4: UIImage {
        if Cache.imageOfBadge4 != nil {
            return Cache.imageOfBadge4!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 472, height: 928), false, 0)
            GameBadge.drawBadge4()

        Cache.imageOfBadge4 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfBadge4!
    }

    //// Customization Infrastructure

    @objc @IBOutlet dynamic var purpleBadgeTargets: [AnyObject]! {
        get { return Cache.purpleBadgeTargets }
        set {
            Cache.purpleBadgeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfPurpleBadge)
            }
        }
    }

    @objc @IBOutlet dynamic var greenBadgeTargets: [AnyObject]! {
        get { return Cache.greenBadgeTargets }
        set {
            Cache.greenBadgeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfGreenBadge)
            }
        }
    }

    @objc @IBOutlet dynamic var blueprintBadgeTargets: [AnyObject]! {
        get { return Cache.blueprintBadgeTargets }
        set {
            Cache.blueprintBadgeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfBlueprintBadge)
            }
        }
    }

    @objc @IBOutlet dynamic var wetAsphaltBadgeTargets: [AnyObject]! {
        get { return Cache.wetAsphaltBadgeTargets }
        set {
            Cache.wetAsphaltBadgeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfWetAsphaltBadge)
            }
        }
    }

    @objc @IBOutlet dynamic var goldBadgeTargets: [AnyObject]! {
        get { return Cache.goldBadgeTargets }
        set {
            Cache.goldBadgeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfGoldBadge)
            }
        }
    }

    @objc @IBOutlet dynamic var asusBlueGreyBadgeTargets: [AnyObject]! {
        get { return Cache.asusBlueGreyBadgeTargets }
        set {
            Cache.asusBlueGreyBadgeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfAsusBlueGreyBadge)
            }
        }
    }

    @objc @IBOutlet dynamic var redBadgeTargets: [AnyObject]! {
        get { return Cache.redBadgeTargets }
        set {
            Cache.redBadgeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfRedBadge)
            }
        }
    }

    @objc @IBOutlet dynamic var whiteBadgeTargets: [AnyObject]! {
        get { return Cache.whiteBadgeTargets }
        set {
            Cache.whiteBadgeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfWhiteBadge)
            }
        }
    }

    @objc @IBOutlet dynamic var blackBadgeTargets: [AnyObject]! {
        get { return Cache.blackBadgeTargets }
        set {
            Cache.blackBadgeTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfBlackBadge)
            }
        }
    }

    @objc @IBOutlet dynamic var squareFrameTargets: [AnyObject]! {
        get { return Cache.squareFrameTargets }
        set {
            Cache.squareFrameTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfSquareFrame)
            }
        }
    }

    @objc @IBOutlet dynamic var nATargets: [AnyObject]! {
        get { return Cache.nATargets }
        set {
            Cache.nATargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfNA)
            }
        }
    }

    @objc @IBOutlet dynamic var badge1Targets: [AnyObject]! {
        get { return Cache.badge1Targets }
        set {
            Cache.badge1Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfBadge1)
            }
        }
    }

    @objc @IBOutlet dynamic var badge2Targets: [AnyObject]! {
        get { return Cache.badge2Targets }
        set {
            Cache.badge2Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfBadge2)
            }
        }
    }

    @objc @IBOutlet dynamic var badge3Targets: [AnyObject]! {
        get { return Cache.badge3Targets }
        set {
            Cache.badge3Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfBadge3)
            }
        }
    }

    @objc @IBOutlet dynamic var badge4Targets: [AnyObject]! {
        get { return Cache.badge4Targets }
        set {
            Cache.badge4Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: GameBadge.imageOfBadge4)
            }
        }
    }




    @objc(GameBadgeResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}



private extension UIColor {
    func withHue(_ newHue: CGFloat) -> UIColor {
        var saturation: CGFloat = 1, brightness: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(nil, saturation: &saturation, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: newHue, saturation: saturation, brightness: brightness, alpha: alpha)
    }
    func withSaturation(_ newSaturation: CGFloat) -> UIColor {
        var hue: CGFloat = 1, brightness: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(&hue, saturation: nil, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: hue, saturation: newSaturation, brightness: brightness, alpha: alpha)
    }
    func withBrightness(_ newBrightness: CGFloat) -> UIColor {
        var hue: CGFloat = 1, saturation: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(&hue, saturation: &saturation, brightness: nil, alpha: &alpha)
        return UIColor(hue: hue, saturation: saturation, brightness: newBrightness, alpha: alpha)
    }
    func withAlpha(_ newAlpha: CGFloat) -> UIColor {
        var hue: CGFloat = 1, saturation: CGFloat = 1, brightness: CGFloat = 1
        self.getHue(&hue, saturation: &saturation, brightness: &brightness, alpha: nil)
        return UIColor(hue: hue, saturation: saturation, brightness: brightness, alpha: newAlpha)
    }
    func highlight(withLevel highlight: CGFloat) -> UIColor {
        var red: CGFloat = 1, green: CGFloat = 1, blue: CGFloat = 1, alpha: CGFloat = 1
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-highlight) + highlight, green: green * (1-highlight) + highlight, blue: blue * (1-highlight) + highlight, alpha: alpha * (1-highlight) + highlight)
    }
    func shadow(withLevel shadow: CGFloat) -> UIColor {
        var red: CGFloat = 1, green: CGFloat = 1, blue: CGFloat = 1, alpha: CGFloat = 1
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-shadow), green: green * (1-shadow), blue: blue * (1-shadow), alpha: alpha * (1-shadow) + shadow)
    }
}
